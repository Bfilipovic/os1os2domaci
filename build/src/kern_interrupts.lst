GAS LISTING /tmp/ccfowsGE.s 			page 1


   1              		.file	"kern_interrupts.c"
   2              		.option nopic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.cfi_sections	.debug_frame
   7              		.align	2
   8              		.globl	kern_interrupt_init
  10              	kern_interrupt_init:
  11              	.LFB0:
  12              		.file 1 "src/kern_interrupts.c"
   1:src/kern_interrupts.c **** //
   2:src/kern_interrupts.c **** // Created by os on 5/22/23.
   3:src/kern_interrupts.c **** //
   4:src/kern_interrupts.c **** 
   5:src/kern_interrupts.c **** #include "../lib/hw.h"
   6:src/kern_interrupts.c **** #include "../lib/console.h"
   7:src/kern_interrupts.c **** 
   8:src/kern_interrupts.c **** #define INTR_ILLEGAL_INSTRUCTION 0x0000000000000002UL
   9:src/kern_interrupts.c **** #define INTR_ILLEGAL_ADDR_RD 0x0000000000000005UL
  10:src/kern_interrupts.c **** #define INTR_ILLEGAL_ADDR_WR 0x0000000000000007UL
  11:src/kern_interrupts.c **** #define INTR_USER_ECALL 0x0000000000000008UL
  12:src/kern_interrupts.c **** #define INTR_KERNEL_ECALL 0x0000000000000009UL
  13:src/kern_interrupts.c **** #define INTR_TIMER 0x8000000000000001UL
  14:src/kern_interrupts.c **** #define INTR_CONSOLE 0x8000000000000009UL
  15:src/kern_interrupts.c **** 
  16:src/kern_interrupts.c **** inline uint64 r_scause();
  17:src/kern_interrupts.c **** inline void w_scause(uint64 scause);
  18:src/kern_interrupts.c **** inline uint64 r_sepc();
  19:src/kern_interrupts.c **** inline void w_sepc(uint64 sepc);
  20:src/kern_interrupts.c **** inline uint64 r_stvec();
  21:src/kern_interrupts.c **** inline void w_stvec(uint64 stvec);
  22:src/kern_interrupts.c **** inline uint64 r_stval();
  23:src/kern_interrupts.c **** inline void w_stval(uint64 stval);
  24:src/kern_interrupts.c **** inline void ms_sip(uint64 mask);
  25:src/kern_interrupts.c **** inline void mc_sip(uint64 mask);
  26:src/kern_interrupts.c **** inline uint64 r_sip();
  27:src/kern_interrupts.c **** inline void w_sip(uint64 sip);
  28:src/kern_interrupts.c **** inline void ms_sstatus(uint64 mask);
  29:src/kern_interrupts.c **** inline void mc_sstatus(uint64 mask);
  30:src/kern_interrupts.c **** inline uint64 r_sstatus();
  31:src/kern_interrupts.c **** inline void w_sstatus(uint64 sstatus);
  32:src/kern_interrupts.c **** extern void supervisorTrap();
  33:src/kern_interrupts.c **** 
  34:src/kern_interrupts.c **** enum BitMaskSstatus
  35:src/kern_interrupts.c **** {
  36:src/kern_interrupts.c ****     SSTATUS_SIE = (1 << 1),
  37:src/kern_interrupts.c ****     SSTATUS_SPIE = (1 << 5),
  38:src/kern_interrupts.c ****     SSTATUS_SPP = (1 << 8),
  39:src/kern_interrupts.c **** };
  40:src/kern_interrupts.c **** 
  41:src/kern_interrupts.c **** enum BitMaskSip
  42:src/kern_interrupts.c **** {
  43:src/kern_interrupts.c ****     SIP_SSIP = (1 << 1),
  44:src/kern_interrupts.c ****     SIP_STIP = (1 << 5),
  45:src/kern_interrupts.c ****     SIP_SEIP = (1 << 9),
  46:src/kern_interrupts.c **** };
GAS LISTING /tmp/ccfowsGE.s 			page 2


  47:src/kern_interrupts.c **** 
  48:src/kern_interrupts.c **** 
  49:src/kern_interrupts.c **** 
  50:src/kern_interrupts.c **** void kern_interrupt_init()
  51:src/kern_interrupts.c **** {
  13              		.loc 1 51 1
  14              		.cfi_startproc
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  52:src/kern_interrupts.c ****     w_stvec((uint64) &supervisorTrap);
  21              		.loc 1 52 5
  22 000c 97070000 		lla	a5,supervisorTrap
  22      93870700 
  23              	.LVL0:
  24              	.LBB10:
  25              	.LBB11:
  53:src/kern_interrupts.c ****     ms_sstatus(SSTATUS_SIE);
  54:src/kern_interrupts.c **** }
  55:src/kern_interrupts.c **** 
  56:src/kern_interrupts.c **** 
  57:src/kern_interrupts.c **** int time=0;
  58:src/kern_interrupts.c **** 
  59:src/kern_interrupts.c **** void handleSupervisorTrap()
  60:src/kern_interrupts.c **** {
  61:src/kern_interrupts.c ****     uint64 scause = r_scause();
  62:src/kern_interrupts.c ****     if (scause == INTR_USER_ECALL || scause == INTR_KERNEL_ECALL)
  63:src/kern_interrupts.c ****     {
  64:src/kern_interrupts.c ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  65:src/kern_interrupts.c ****     }
  66:src/kern_interrupts.c ****     else if (scause == INTR_TIMER)
  67:src/kern_interrupts.c ****     {
  68:src/kern_interrupts.c ****        mc_sip(SIP_SSIP);
  69:src/kern_interrupts.c ****        if(++time>=30){
  70:src/kern_interrupts.c ****            __putc('!');
  71:src/kern_interrupts.c ****        }
  72:src/kern_interrupts.c ****        time=time%30;
  73:src/kern_interrupts.c ****     }
  74:src/kern_interrupts.c ****     else if (scause == INTR_CONSOLE)
  75:src/kern_interrupts.c ****     {
  76:src/kern_interrupts.c ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  77:src/kern_interrupts.c ****         plic_claim();
  78:src/kern_interrupts.c ****        // console_handler();
  79:src/kern_interrupts.c ****     }
  80:src/kern_interrupts.c ****     else
  81:src/kern_interrupts.c ****     {
  82:src/kern_interrupts.c ****         // unexpected trap cause
  83:src/kern_interrupts.c ****     }
  84:src/kern_interrupts.c **** }
  85:src/kern_interrupts.c **** 
  86:src/kern_interrupts.c **** inline uint64 r_scause()
  87:src/kern_interrupts.c **** {
  88:src/kern_interrupts.c ****     uint64 volatile scause;
  89:src/kern_interrupts.c ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
GAS LISTING /tmp/ccfowsGE.s 			page 3


  90:src/kern_interrupts.c ****     return scause;
  91:src/kern_interrupts.c **** }
  92:src/kern_interrupts.c **** 
  93:src/kern_interrupts.c **** inline void w_scause(uint64 scause)
  94:src/kern_interrupts.c **** {
  95:src/kern_interrupts.c ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  96:src/kern_interrupts.c **** }
  97:src/kern_interrupts.c **** 
  98:src/kern_interrupts.c **** inline uint64 r_sepc()
  99:src/kern_interrupts.c **** {
 100:src/kern_interrupts.c ****     uint64 volatile sepc;
 101:src/kern_interrupts.c ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 102:src/kern_interrupts.c ****     return sepc;
 103:src/kern_interrupts.c **** }
 104:src/kern_interrupts.c **** 
 105:src/kern_interrupts.c **** inline void w_sepc(uint64 sepc)
 106:src/kern_interrupts.c **** {
 107:src/kern_interrupts.c ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 108:src/kern_interrupts.c **** }
 109:src/kern_interrupts.c **** 
 110:src/kern_interrupts.c **** inline uint64 r_stvec()
 111:src/kern_interrupts.c **** {
 112:src/kern_interrupts.c ****     uint64 volatile stvec;
 113:src/kern_interrupts.c ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 114:src/kern_interrupts.c ****     return stvec;
 115:src/kern_interrupts.c **** }
 116:src/kern_interrupts.c **** 
 117:src/kern_interrupts.c **** inline void w_stvec(uint64 stvec)
 118:src/kern_interrupts.c **** {
 119:src/kern_interrupts.c ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  26              		.loc 1 119 5
  27              	#APP
  28              	# 119 "src/kern_interrupts.c" 1
 120              	}
  29              		csrw stvec, a5
  30              	# 0 "" 2
  31              	.LVL1:
  32              	#NO_APP
  33              	.LBE11:
  34              	.LBE10:
  53:src/kern_interrupts.c ****     ms_sstatus(SSTATUS_SIE);
  35              		.loc 1 53 5
  36              	.LBB12:
  37              	.LBB13:
 121:src/kern_interrupts.c **** 
 122:src/kern_interrupts.c **** inline uint64 r_stval()
 123:src/kern_interrupts.c **** {
 124:src/kern_interrupts.c ****     uint64 volatile stval;
 125:src/kern_interrupts.c ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 126:src/kern_interrupts.c ****     return stval;
 127:src/kern_interrupts.c **** }
 128:src/kern_interrupts.c **** 
 129:src/kern_interrupts.c **** inline void w_stval(uint64 stval)
 130:src/kern_interrupts.c **** {
 131:src/kern_interrupts.c ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 132:src/kern_interrupts.c **** }
 133:src/kern_interrupts.c **** 
GAS LISTING /tmp/ccfowsGE.s 			page 4


 134:src/kern_interrupts.c **** inline void ms_sip(uint64 mask)
 135:src/kern_interrupts.c **** {
 136:src/kern_interrupts.c ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 137:src/kern_interrupts.c **** }
 138:src/kern_interrupts.c **** 
 139:src/kern_interrupts.c **** inline void mc_sip(uint64 mask)
 140:src/kern_interrupts.c **** {
 141:src/kern_interrupts.c ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 142:src/kern_interrupts.c **** }
 143:src/kern_interrupts.c **** 
 144:src/kern_interrupts.c **** inline uint64 r_sip()
 145:src/kern_interrupts.c **** {
 146:src/kern_interrupts.c ****     uint64 volatile sip;
 147:src/kern_interrupts.c ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 148:src/kern_interrupts.c ****     return sip;
 149:src/kern_interrupts.c **** }
 150:src/kern_interrupts.c **** 
 151:src/kern_interrupts.c **** inline void w_sip(uint64 sip)
 152:src/kern_interrupts.c **** {
 153:src/kern_interrupts.c ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 154:src/kern_interrupts.c **** }
 155:src/kern_interrupts.c **** 
 156:src/kern_interrupts.c **** inline void ms_sstatus(uint64 mask)
 157:src/kern_interrupts.c **** {
 158:src/kern_interrupts.c ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  38              		.loc 1 158 5
  39 0018 93072000 		li	a5,2
  40              	#APP
  41              	# 158 "src/kern_interrupts.c" 1
 159              	}
  42              		csrs sstatus, a5
  43              	# 0 "" 2
  44              	.LVL2:
  45              	#NO_APP
  46              	.LBE13:
  47              	.LBE12:
  54:src/kern_interrupts.c **** 
  48              		.loc 1 54 1 is_stmt 0
  49 0020 03348100 		ld	s0,8(sp)
  50              		.cfi_restore 8
  51              		.cfi_def_cfa 2, 16
  52 0024 13010101 		addi	sp,sp,16
  53              		.cfi_def_cfa_offset 0
  54 0028 67800000 		jr	ra
  55              		.cfi_endproc
  56              	.LFE0:
  58              		.align	2
  59              		.globl	handleSupervisorTrap
  61              	handleSupervisorTrap:
  62              	.LFB1:
  60:src/kern_interrupts.c ****     uint64 scause = r_scause();
  63              		.loc 1 60 1 is_stmt 1
  64              		.cfi_startproc
  65 002c 130101FE 		addi	sp,sp,-32
  66              		.cfi_def_cfa_offset 32
  67 0030 233C1100 		sd	ra,24(sp)
  68 0034 23388100 		sd	s0,16(sp)
GAS LISTING /tmp/ccfowsGE.s 			page 5


  69              		.cfi_offset 1, -8
  70              		.cfi_offset 8, -16
  71 0038 13040102 		addi	s0,sp,32
  72              		.cfi_def_cfa 8, 0
  61:src/kern_interrupts.c ****     if (scause == INTR_USER_ECALL || scause == INTR_KERNEL_ECALL)
  73              		.loc 1 61 5
  74              	.LBB14:
  75              	.LBB15:
  88:src/kern_interrupts.c ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  76              		.loc 1 88 5
  89:src/kern_interrupts.c ****     return scause;
  77              		.loc 1 89 5
  78              	#APP
  79              	# 89 "src/kern_interrupts.c" 1
  80              		csrr a5, scause
  81              	# 0 "" 2
  82              	#NO_APP
  83 0040 2334F4FE 		sd	a5,-24(s0)
  90:src/kern_interrupts.c **** }
  84              		.loc 1 90 5
  90:src/kern_interrupts.c **** }
  85              		.loc 1 90 12 is_stmt 0
  86 0044 033784FE 		ld	a4,-24(s0)
  87              	.LVL3:
  88              	.LBE15:
  89              	.LBE14:
  62:src/kern_interrupts.c ****     {
  90              		.loc 1 62 5 is_stmt 1
  62:src/kern_interrupts.c ****     {
  91              		.loc 1 62 35 is_stmt 0
  92 0048 930687FF 		addi	a3,a4,-8
  62:src/kern_interrupts.c ****     {
  93              		.loc 1 62 8
  94 004c 93071000 		li	a5,1
  95 0050 63F2D702 		bleu	a3,a5,.L3
  66:src/kern_interrupts.c ****     {
  96              		.loc 1 66 10 is_stmt 1
  66:src/kern_interrupts.c ****     {
  97              		.loc 1 66 13 is_stmt 0
  98 0054 9307F0FF 		li	a5,-1
  99 0058 9397F703 		slli	a5,a5,63
 100 005c 93871700 		addi	a5,a5,1
 101 0060 6302F702 		beq	a4,a5,.L8
  74:src/kern_interrupts.c ****     {
 102              		.loc 1 74 10 is_stmt 1
  74:src/kern_interrupts.c ****     {
 103              		.loc 1 74 13 is_stmt 0
 104 0064 9307F0FF 		li	a5,-1
 105 0068 9397F703 		slli	a5,a5,63
 106 006c 93879700 		addi	a5,a5,9
 107 0070 6304F706 		beq	a4,a5,.L9
 108              	.LVL4:
 109              	.L3:
  84:src/kern_interrupts.c **** 
 110              		.loc 1 84 1
 111 0074 83308101 		ld	ra,24(sp)
 112              		.cfi_remember_state
GAS LISTING /tmp/ccfowsGE.s 			page 6


 113              		.cfi_restore 1
 114 0078 03340101 		ld	s0,16(sp)
 115              		.cfi_restore 8
 116              		.cfi_def_cfa 2, 32
 117 007c 13010102 		addi	sp,sp,32
 118              		.cfi_def_cfa_offset 0
 119 0080 67800000 		jr	ra
 120              	.LVL5:
 121              	.L8:
 122              		.cfi_restore_state
  68:src/kern_interrupts.c ****        if(++time>=30){
 123              		.loc 1 68 8 is_stmt 1
 124              	.LBB16:
 125              	.LBB17:
 141:src/kern_interrupts.c **** }
 126              		.loc 1 141 5
 127 0084 93072000 		li	a5,2
 128              	#APP
 129              	# 141 "src/kern_interrupts.c" 1
 130              		csrc sip, a5
 131              	# 0 "" 2
 132              	.LVL6:
 133              	#NO_APP
 134              	.LBE17:
 135              	.LBE16:
  69:src/kern_interrupts.c ****            __putc('!');
 136              		.loc 1 69 8
  69:src/kern_interrupts.c ****            __putc('!');
 137              		.loc 1 69 11 is_stmt 0
 138 008c 17070000 		lla	a4,time
 138      13070700 
 139              	.LVL7:
 140 0094 83270700 		lw	a5,0(a4)
 141 0098 9B871700 		addiw	a5,a5,1
 142 009c 9B860700 		sext.w	a3,a5
 143              	.LVL8:
  69:src/kern_interrupts.c ****            __putc('!');
 144              		.loc 1 69 10
 145 00a0 2320F700 		sw	a5,0(a4)
 146 00a4 9307D001 		li	a5,29
 147 00a8 63C0D702 		bgt	a3,a5,.L10
 148              	.L6:
  72:src/kern_interrupts.c ****     }
 149              		.loc 1 72 8 is_stmt 1
  72:src/kern_interrupts.c ****     }
 150              		.loc 1 72 17 is_stmt 0
 151 00ac 17070000 		lla	a4,time
 151      13070700 
 152 00b4 83270700 		lw	a5,0(a4)
 153 00b8 9306E001 		li	a3,30
 154 00bc BBE7D702 		remw	a5,a5,a3
  72:src/kern_interrupts.c ****     }
 155              		.loc 1 72 12
 156 00c0 2320F700 		sw	a5,0(a4)
 157 00c4 6FF01FFB 		j	.L3
 158              	.L10:
  70:src/kern_interrupts.c ****        }
GAS LISTING /tmp/ccfowsGE.s 			page 7


 159              		.loc 1 70 12 is_stmt 1
 160 00c8 13051002 		li	a0,33
 161 00cc 97000000 		call	__putc
 161      E7800000 
 162              	.LVL9:
 163 00d4 6FF09FFD 		j	.L6
 164              	.LVL10:
 165              	.L9:
  77:src/kern_interrupts.c ****        // console_handler();
 166              		.loc 1 77 9
 167 00d8 97000000 		call	plic_claim
 167      E7800000 
 168              	.LVL11:
  83:src/kern_interrupts.c **** }
 169              		.loc 1 83 5
  84:src/kern_interrupts.c **** 
 170              		.loc 1 84 1 is_stmt 0
 171 00e0 6FF05FF9 		j	.L3
 172              		.cfi_endproc
 173              	.LFE1:
 175              		.globl	time
 176              		.section	.sbss,"aw",@nobits
 177              		.align	2
 180              	time:
 181 0000 00000000 		.zero	4
 182              		.text
 183              	.Letext0:
 184              		.file 2 "src/../lib/hw.h"
 185              		.file 3 "src/../lib/console.h"
GAS LISTING /tmp/ccfowsGE.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kern_interrupts.c
     /tmp/ccfowsGE.s:10     .text:0000000000000000 kern_interrupt_init
     /tmp/ccfowsGE.s:14     .text:0000000000000000 .L0 
     /tmp/ccfowsGE.s:15     .text:0000000000000000 .L0 
     /tmp/ccfowsGE.s:16     .text:0000000000000004 .L0 
     /tmp/ccfowsGE.s:18     .text:0000000000000008 .L0 
     /tmp/ccfowsGE.s:20     .text:000000000000000c .L0 
     /tmp/ccfowsGE.s:22     .text:000000000000000c .L0 
src/kern_interrupts.c:119    .text:0000000000000014 .L0 
     /tmp/ccfowsGE.s:38     .text:0000000000000018 .L0 
     /tmp/ccfowsGE.s:39     .text:0000000000000018 .L0 
     /tmp/ccfowsGE.s:49     .text:0000000000000020 .L0 
     /tmp/ccfowsGE.s:50     .text:0000000000000024 .L0 
     /tmp/ccfowsGE.s:51     .text:0000000000000024 .L0 
     /tmp/ccfowsGE.s:53     .text:0000000000000028 .L0 
     /tmp/ccfowsGE.s:55     .text:000000000000002c .L0 
     /tmp/ccfowsGE.s:61     .text:000000000000002c handleSupervisorTrap
     /tmp/ccfowsGE.s:64     .text:000000000000002c .L0 
     /tmp/ccfowsGE.s:65     .text:000000000000002c .L0 
     /tmp/ccfowsGE.s:66     .text:0000000000000030 .L0 
     /tmp/ccfowsGE.s:69     .text:0000000000000038 .L0 
     /tmp/ccfowsGE.s:70     .text:0000000000000038 .L0 
     /tmp/ccfowsGE.s:72     .text:000000000000003c .L0 
     /tmp/ccfowsGE.s:76     .text:000000000000003c .L0 
     /tmp/ccfowsGE.s:77     .text:000000000000003c .L0 
src/kern_interrupts.c:89     .text:000000000000003c .L0 
     /tmp/ccfowsGE.s:85     .text:0000000000000044 .L0 
     /tmp/ccfowsGE.s:86     .text:0000000000000044 .L0 
     /tmp/ccfowsGE.s:91     .text:0000000000000048 .L0 
     /tmp/ccfowsGE.s:92     .text:0000000000000048 .L0 
     /tmp/ccfowsGE.s:94     .text:000000000000004c .L0 
     /tmp/ccfowsGE.s:97     .text:0000000000000054 .L0 
     /tmp/ccfowsGE.s:98     .text:0000000000000054 .L0 
     /tmp/ccfowsGE.s:103    .text:0000000000000064 .L0 
     /tmp/ccfowsGE.s:104    .text:0000000000000064 .L0 
     /tmp/ccfowsGE.s:111    .text:0000000000000074 .L0 
     /tmp/ccfowsGE.s:112    .text:0000000000000078 .L0 
     /tmp/ccfowsGE.s:113    .text:0000000000000078 .L0 
     /tmp/ccfowsGE.s:115    .text:000000000000007c .L0 
     /tmp/ccfowsGE.s:116    .text:000000000000007c .L0 
     /tmp/ccfowsGE.s:118    .text:0000000000000080 .L0 
     /tmp/ccfowsGE.s:122    .text:0000000000000084 .L0 
     /tmp/ccfowsGE.s:126    .text:0000000000000084 .L0 
     /tmp/ccfowsGE.s:127    .text:0000000000000084 .L0 
     /tmp/ccfowsGE.s:137    .text:000000000000008c .L0 
     /tmp/ccfowsGE.s:180    .sbss:0000000000000000 time
     /tmp/ccfowsGE.s:138    .text:000000000000008c .L0 
     /tmp/ccfowsGE.s:145    .text:00000000000000a0 .L0 
     /tmp/ccfowsGE.s:150    .text:00000000000000ac .L0 
     /tmp/ccfowsGE.s:151    .text:00000000000000ac .L0 
     /tmp/ccfowsGE.s:156    .text:00000000000000c0 .L0 
     /tmp/ccfowsGE.s:160    .text:00000000000000c8 .L0 
     /tmp/ccfowsGE.s:167    .text:00000000000000d8 .L0 
     /tmp/ccfowsGE.s:170    .text:00000000000000e0 .L0 
     /tmp/ccfowsGE.s:171    .text:00000000000000e0 .L0 
     /tmp/ccfowsGE.s:172    .text:00000000000000e4 .L0 
GAS LISTING /tmp/ccfowsGE.s 			page 9


     /tmp/ccfowsGE.s:186    .text:00000000000000e4 .L0 
                     .debug_frame:0000000000000000 .L0 
     /tmp/ccfowsGE.s:22     .text:000000000000000c .L0 
     /tmp/ccfowsGE.s:138    .text:000000000000008c .L0 
     /tmp/ccfowsGE.s:151    .text:00000000000000ac .L0 
     /tmp/ccfowsGE.s:109    .text:0000000000000074 .L3
     /tmp/ccfowsGE.s:121    .text:0000000000000084 .L8
     /tmp/ccfowsGE.s:165    .text:00000000000000d8 .L9
     /tmp/ccfowsGE.s:158    .text:00000000000000c8 .L10
     /tmp/ccfowsGE.s:148    .text:00000000000000ac .L6
     /tmp/ccfowsGE.s:523    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccfowsGE.s:1041   .debug_str:0000000000000120 .LASF37
     /tmp/ccfowsGE.s:1009   .debug_str:000000000000003f .LASF38
     /tmp/ccfowsGE.s:1063   .debug_str:0000000000000233 .LASF39
     /tmp/ccfowsGE.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccfowsGE.s:183    .text:00000000000000e4 .Letext0
     /tmp/ccfowsGE.s:995    .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccfowsGE.s:1043   .debug_str:00000000000001be .LASF0
     /tmp/ccfowsGE.s:1031   .debug_str:00000000000000e5 .LASF1
     /tmp/ccfowsGE.s:1021   .debug_str:00000000000000a9 .LASF2
     /tmp/ccfowsGE.s:1007   .debug_str:0000000000000038 .LASF4
     /tmp/ccfowsGE.s:1027   .debug_str:00000000000000cb .LASF3
     /tmp/ccfowsGE.s:999    .debug_str:0000000000000013 .LASF5
     /tmp/ccfowsGE.s:997    .debug_str:0000000000000000 .LASF6
     /tmp/ccfowsGE.s:1015   .debug_str:0000000000000072 .LASF7
     /tmp/ccfowsGE.s:1049   .debug_str:00000000000001de .LASF8
     /tmp/ccfowsGE.s:1005   .debug_str:000000000000002a .LASF9
     /tmp/ccfowsGE.s:1075   .debug_str:0000000000000293 .LASF10
     /tmp/ccfowsGE.s:1017   .debug_str:0000000000000085 .LASF11
     /tmp/ccfowsGE.s:1071   .debug_str:0000000000000274 .LASF12
     /tmp/ccfowsGE.s:1057   .debug_str:0000000000000212 .LASF13
     /tmp/ccfowsGE.s:1033   .debug_str:00000000000000f8 .LASF14
     /tmp/ccfowsGE.s:1011   .debug_str:0000000000000055 .LASF15
     /tmp/ccfowsGE.s:1053   .debug_str:00000000000001f3 .LASF16
     /tmp/ccfowsGE.s:1073   .debug_str:0000000000000284 .LASF20
     /tmp/ccfowsGE.s:1047   .debug_str:00000000000001d2 .LASF17
     /tmp/ccfowsGE.s:1037   .debug_str:000000000000010a .LASF18
     /tmp/ccfowsGE.s:1061   .debug_str:0000000000000227 .LASF19
     /tmp/ccfowsGE.s:1023   .debug_str:00000000000000b7 .LASF21
     /tmp/ccfowsGE.s:1025   .debug_str:00000000000000c2 .LASF22
     /tmp/ccfowsGE.s:1055   .debug_str:0000000000000209 .LASF23
     /tmp/ccfowsGE.s:1039   .debug_str:0000000000000117 .LASF24
     /tmp/ccfowsGE.s:1051   .debug_str:00000000000001ee .LASF25
     /tmp/ccfowsGE.s:1067   .debug_str:000000000000025e .LASF26
     /tmp/ccfowsGE.s:1059   .debug_str:0000000000000222 .LASF28
     /tmp/ccfowsGE.s:1001   .debug_str:000000000000001a .LASF27
     /tmp/ccfowsGE.s:1029   .debug_str:00000000000000dd .LASF29
     /tmp/ccfowsGE.s:1035   .debug_str:0000000000000104 .LASF30
     /tmp/ccfowsGE.s:1003   .debug_str:0000000000000021 .LASF31
     /tmp/ccfowsGE.s:1013   .debug_str:000000000000006b .LASF32
     /tmp/ccfowsGE.s:1019   .debug_str:0000000000000094 .LASF33
     /tmp/ccfowsGE.s:62     .text:000000000000002c .LFB1
     /tmp/ccfowsGE.s:173    .text:00000000000000e4 .LFE1
     /tmp/ccfowsGE.s:945    .debug_loc:0000000000000000 .LLST1
     /tmp/ccfowsGE.s:74     .text:000000000000003c .LBB14
     /tmp/ccfowsGE.s:89     .text:0000000000000048 .LBE14
     /tmp/ccfowsGE.s:124    .text:0000000000000084 .LBB16
GAS LISTING /tmp/ccfowsGE.s 			page 10


     /tmp/ccfowsGE.s:135    .text:000000000000008c .LBE16
     /tmp/ccfowsGE.s:966    .debug_loc:000000000000005e .LLST2
     /tmp/ccfowsGE.s:162    .text:00000000000000d4 .LVL9
     /tmp/ccfowsGE.s:168    .text:00000000000000e0 .LVL11
     /tmp/ccfowsGE.s:1065   .debug_str:000000000000024a .LASF34
     /tmp/ccfowsGE.s:11     .text:0000000000000000 .LFB0
     /tmp/ccfowsGE.s:56     .text:000000000000002c .LFE0
     /tmp/ccfowsGE.s:24     .text:0000000000000014 .LBB10
     /tmp/ccfowsGE.s:34     .text:0000000000000018 .LBE10
     /tmp/ccfowsGE.s:36     .text:0000000000000018 .LBB12
     /tmp/ccfowsGE.s:47     .text:0000000000000020 .LBE12
     /tmp/ccfowsGE.s:974    .debug_loc:0000000000000082 .LLST0
     /tmp/ccfowsGE.s:1045   .debug_str:00000000000001cb .LASF35
     /tmp/ccfowsGE.s:1069   .debug_str:0000000000000269 .LASF36
     /tmp/ccfowsGE.s:87     .text:0000000000000048 .LVL3
     /tmp/ccfowsGE.s:108    .text:0000000000000074 .LVL4
     /tmp/ccfowsGE.s:120    .text:0000000000000084 .LVL5
     /tmp/ccfowsGE.s:139    .text:0000000000000094 .LVL7
     /tmp/ccfowsGE.s:143    .text:00000000000000a0 .LVL8
     /tmp/ccfowsGE.s:164    .text:00000000000000d8 .LVL10
     /tmp/ccfowsGE.s:132    .text:000000000000008c .LVL6
     /tmp/ccfowsGE.s:31     .text:0000000000000018 .LVL1
     /tmp/ccfowsGE.s:44     .text:0000000000000020 .LVL2
     /tmp/ccfowsGE.s:187    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
supervisorTrap
__putc
plic_claim
