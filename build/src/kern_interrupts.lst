GAS LISTING /tmp/ccYYKFl0.s 			page 1


   1              		.file	"kern_interrupts.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z19kern_interrupt_initv
   9              	_Z19kern_interrupt_initv:
  10              	.LFB22:
  11              		.file 1 "src/kern_interrupts.cpp"
   1:src/kern_interrupts.cpp **** //
   2:src/kern_interrupts.cpp **** // Created by os on 5/22/23.
   3:src/kern_interrupts.cpp **** //
   4:src/kern_interrupts.cpp **** 
   5:src/kern_interrupts.cpp **** #include "../lib/hw.h"
   6:src/kern_interrupts.cpp **** #include "../lib/console.h"
   7:src/kern_interrupts.cpp **** #include "../h/kern_interrupts.hpp"
   8:src/kern_interrupts.cpp **** #include "../h/kern_reg_util.h"
   9:src/kern_interrupts.cpp **** #include "../h/kern_memory.hpp"
  10:src/kern_interrupts.cpp **** #include "../h/kern_threads.hpp"
  11:src/kern_interrupts.cpp **** #include "../h/syscall_c.h"
  12:src/kern_interrupts.cpp **** #include "../h/kern_semaphore.hpp"
  13:src/kern_interrupts.cpp **** #include "../h/kern_console.hpp"
  14:src/kern_interrupts.cpp **** 
  15:src/kern_interrupts.cpp **** #define INTR_ILLEGAL_INSTRUCTION 0x0000000000000002UL
  16:src/kern_interrupts.cpp **** #define INTR_ILLEGAL_ADDR_RD 0x0000000000000005UL
  17:src/kern_interrupts.cpp **** #define INTR_ILLEGAL_ADDR_WR 0x0000000000000007UL
  18:src/kern_interrupts.cpp **** #define INTR_USER_ECALL 0x0000000000000008UL
  19:src/kern_interrupts.cpp **** #define INTR_KERNEL_ECALL 0x0000000000000009UL
  20:src/kern_interrupts.cpp **** #define INTR_TIMER 0x8000000000000001UL
  21:src/kern_interrupts.cpp **** #define INTR_CONSOLE 0x8000000000000009UL
  22:src/kern_interrupts.cpp **** 
  23:src/kern_interrupts.cpp **** 
  24:src/kern_interrupts.cpp **** 
  25:src/kern_interrupts.cpp **** 
  26:src/kern_interrupts.cpp **** uint64 SYSTEM_TIME;
  27:src/kern_interrupts.cpp **** 
  28:src/kern_interrupts.cpp **** #ifdef __cplusplus
  29:src/kern_interrupts.cpp **** extern "C" {
  30:src/kern_interrupts.cpp **** #endif
  31:src/kern_interrupts.cpp **** extern void supervisorTrap();
  32:src/kern_interrupts.cpp **** #ifdef __cplusplus
  33:src/kern_interrupts.cpp **** }
  34:src/kern_interrupts.cpp **** #endif
  35:src/kern_interrupts.cpp **** 
  36:src/kern_interrupts.cpp **** void kern_interrupt_init()
  37:src/kern_interrupts.cpp **** {
  12              		.loc 1 37 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  38:src/kern_interrupts.cpp ****     SYSTEM_TIME=0;
  20              		.loc 1 38 5
GAS LISTING /tmp/ccYYKFl0.s 			page 2


  21              		.loc 1 38 16 is_stmt 0
  22 000c 97070000 		sd	zero,.LANCHOR0,a5
  22      23B00700 
  39:src/kern_interrupts.cpp ****     w_stvec((uint64) &supervisorTrap);
  23              		.loc 1 39 5 is_stmt 1
  24              		.loc 1 39 12 is_stmt 0
  25 0014 97070000 		la	a5,supervisorTrap
  25      83B70700 
  26              	.LVL0:
  27              	.LBB108:
  28              	.LBB109:
  29              		.file 2 "src/../h/kern_reg_util.h"
   1:src/../h/kern_reg_util.h **** //
   2:src/../h/kern_reg_util.h **** // Created by os on 5/23/23.
   3:src/../h/kern_reg_util.h **** //
   4:src/../h/kern_reg_util.h **** 
   5:src/../h/kern_reg_util.h **** #ifndef OS1_KERN_REG_UTIL_H
   6:src/../h/kern_reg_util.h **** #define OS1_KERN_REG_UTIL_H
   7:src/../h/kern_reg_util.h **** 
   8:src/../h/kern_reg_util.h **** #include "../lib/hw.h"
   9:src/../h/kern_reg_util.h **** 
  10:src/../h/kern_reg_util.h **** enum BitMaskSstatus
  11:src/../h/kern_reg_util.h **** {
  12:src/../h/kern_reg_util.h ****     SSTATUS_SIE = (1 << 1),
  13:src/../h/kern_reg_util.h ****     SSTATUS_SPIE = (1 << 5),
  14:src/../h/kern_reg_util.h ****     SSTATUS_SPP = (1 << 8),
  15:src/../h/kern_reg_util.h **** };
  16:src/../h/kern_reg_util.h **** 
  17:src/../h/kern_reg_util.h **** enum BitMaskSip
  18:src/../h/kern_reg_util.h **** {
  19:src/../h/kern_reg_util.h ****     SIP_SSIP = (1 << 1),
  20:src/../h/kern_reg_util.h ****     SIP_STIP = (1 << 5),
  21:src/../h/kern_reg_util.h ****     SIP_SEIP = (1 << 9),
  22:src/../h/kern_reg_util.h **** };
  23:src/../h/kern_reg_util.h **** 
  24:src/../h/kern_reg_util.h **** inline uint64 r_a0()
  25:src/../h/kern_reg_util.h **** {
  26:src/../h/kern_reg_util.h ****     uint64 volatile a0;
  27:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
  28:src/../h/kern_reg_util.h ****     return a0;
  29:src/../h/kern_reg_util.h **** }
  30:src/../h/kern_reg_util.h **** inline void w_a0(uint64 value)
  31:src/../h/kern_reg_util.h **** {
  32:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv a0, %[value]" :: [value] "r"(value));
  33:src/../h/kern_reg_util.h **** }
  34:src/../h/kern_reg_util.h **** 
  35:src/../h/kern_reg_util.h **** inline uint64 r_a1()
  36:src/../h/kern_reg_util.h **** {
  37:src/../h/kern_reg_util.h ****     uint64 volatile a1;
  38:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a1], a1" : [a1] "=r"(a1));
  39:src/../h/kern_reg_util.h ****     return a1;
  40:src/../h/kern_reg_util.h **** }
  41:src/../h/kern_reg_util.h **** 
  42:src/../h/kern_reg_util.h **** inline uint64 r_a2()
  43:src/../h/kern_reg_util.h **** {
  44:src/../h/kern_reg_util.h ****     uint64 volatile a2;
  45:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a2], a2" : [a2] "=r"(a2));
GAS LISTING /tmp/ccYYKFl0.s 			page 3


  46:src/../h/kern_reg_util.h ****     return a2;
  47:src/../h/kern_reg_util.h **** }
  48:src/../h/kern_reg_util.h **** 
  49:src/../h/kern_reg_util.h **** inline uint64 r_a3()
  50:src/../h/kern_reg_util.h **** {
  51:src/../h/kern_reg_util.h ****     uint64 volatile a3;
  52:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a3], a3" : [a3] "=r"(a3));
  53:src/../h/kern_reg_util.h ****     return a3;
  54:src/../h/kern_reg_util.h **** }
  55:src/../h/kern_reg_util.h **** 
  56:src/../h/kern_reg_util.h **** inline uint64 r_a4()
  57:src/../h/kern_reg_util.h **** {
  58:src/../h/kern_reg_util.h ****     uint64 volatile a4;
  59:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a4], a4" : [a4] "=r"(a4));
  60:src/../h/kern_reg_util.h ****     return a4;
  61:src/../h/kern_reg_util.h **** }
  62:src/../h/kern_reg_util.h **** 
  63:src/../h/kern_reg_util.h **** inline uint64 r_scause()
  64:src/../h/kern_reg_util.h **** {
  65:src/../h/kern_reg_util.h ****     uint64 volatile scause;
  66:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  67:src/../h/kern_reg_util.h ****     return scause;
  68:src/../h/kern_reg_util.h **** }
  69:src/../h/kern_reg_util.h **** 
  70:src/../h/kern_reg_util.h **** inline void w_scause(uint64 scause)
  71:src/../h/kern_reg_util.h **** {
  72:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  73:src/../h/kern_reg_util.h **** }
  74:src/../h/kern_reg_util.h **** 
  75:src/../h/kern_reg_util.h **** inline uint64 r_sepc()
  76:src/../h/kern_reg_util.h **** {
  77:src/../h/kern_reg_util.h ****     uint64 volatile sepc;
  78:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  79:src/../h/kern_reg_util.h ****     return sepc;
  80:src/../h/kern_reg_util.h **** }
  81:src/../h/kern_reg_util.h **** 
  82:src/../h/kern_reg_util.h **** inline void w_sepc(uint64 sepc)
  83:src/../h/kern_reg_util.h **** {
  84:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  85:src/../h/kern_reg_util.h **** }
  86:src/../h/kern_reg_util.h **** 
  87:src/../h/kern_reg_util.h **** inline uint64 r_stvec()
  88:src/../h/kern_reg_util.h **** {
  89:src/../h/kern_reg_util.h ****     uint64 volatile stvec;
  90:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  91:src/../h/kern_reg_util.h ****     return stvec;
  92:src/../h/kern_reg_util.h **** }
  93:src/../h/kern_reg_util.h **** 
  94:src/../h/kern_reg_util.h **** inline void w_stvec(uint64 stvec)
  95:src/../h/kern_reg_util.h **** {
  96:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  30              		.loc 2 96 5 is_stmt 1
  31              		.loc 2 96 69 is_stmt 0
  32              	#APP
  33              	# 96 "src/../h/kern_reg_util.h" 1
  97              	}
  34              		csrw stvec, a5
GAS LISTING /tmp/ccYYKFl0.s 			page 4


  35              	# 0 "" 2
  36              	.LVL1:
  37              	#NO_APP
  38              	.LBE109:
  39              	.LBE108:
  40:src/kern_interrupts.cpp ****     ms_sstatus(SSTATUS_SIE);
  40              		.loc 1 40 5 is_stmt 1
  41              	.LBB110:
  42              	.LBB111:
  98:src/../h/kern_reg_util.h **** 
  99:src/../h/kern_reg_util.h **** inline uint64 r_stval()
 100:src/../h/kern_reg_util.h **** {
 101:src/../h/kern_reg_util.h ****     uint64 volatile stval;
 102:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 103:src/../h/kern_reg_util.h ****     return stval;
 104:src/../h/kern_reg_util.h **** }
 105:src/../h/kern_reg_util.h **** 
 106:src/../h/kern_reg_util.h **** inline void w_stval(uint64 stval)
 107:src/../h/kern_reg_util.h **** {
 108:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 109:src/../h/kern_reg_util.h **** }
 110:src/../h/kern_reg_util.h **** 
 111:src/../h/kern_reg_util.h **** inline void ms_sip(uint64 mask)
 112:src/../h/kern_reg_util.h **** {
 113:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 114:src/../h/kern_reg_util.h **** }
 115:src/../h/kern_reg_util.h **** 
 116:src/../h/kern_reg_util.h **** inline void mc_sip(uint64 mask)
 117:src/../h/kern_reg_util.h **** {
 118:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 119:src/../h/kern_reg_util.h **** }
 120:src/../h/kern_reg_util.h **** 
 121:src/../h/kern_reg_util.h **** inline uint64 r_sip()
 122:src/../h/kern_reg_util.h **** {
 123:src/../h/kern_reg_util.h ****     uint64 volatile sip;
 124:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 125:src/../h/kern_reg_util.h ****     return sip;
 126:src/../h/kern_reg_util.h **** }
 127:src/../h/kern_reg_util.h **** 
 128:src/../h/kern_reg_util.h **** inline void w_sip(uint64 sip)
 129:src/../h/kern_reg_util.h **** {
 130:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 131:src/../h/kern_reg_util.h **** }
 132:src/../h/kern_reg_util.h **** 
 133:src/../h/kern_reg_util.h **** inline void ms_sstatus(uint64 mask)
 134:src/../h/kern_reg_util.h **** {
 135:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  43              		.loc 2 135 5
  44              		.loc 2 135 68 is_stmt 0
  45 0020 93072000 		li	a5,2
  46              	#APP
  47              	# 135 "src/../h/kern_reg_util.h" 1
 136              	}
  48              		csrs sstatus, a5
  49              	# 0 "" 2
  50              	.LVL2:
  51              	#NO_APP
GAS LISTING /tmp/ccYYKFl0.s 			page 5


  52              	.LBE111:
  53              	.LBE110:
  41:src/kern_interrupts.cpp **** }
  54              		.loc 1 41 1
  55 0028 03348100 		ld	s0,8(sp)
  56              		.cfi_restore 8
  57              		.cfi_def_cfa 2, 16
  58 002c 13010101 		addi	sp,sp,16
  59              		.cfi_def_cfa_offset 0
  60 0030 67800000 		jr	ra
  61              		.cfi_endproc
  62              	.LFE22:
  64              		.align	2
  65              		.globl	_Z12kern_syscall13SyscallNumberz
  67              	_Z12kern_syscall13SyscallNumberz:
  68              	.LFB23:
  42:src/kern_interrupts.cpp **** 
  43:src/kern_interrupts.cpp **** 
  44:src/kern_interrupts.cpp **** void kern_syscall(enum SyscallNumber num, ...)
  45:src/kern_interrupts.cpp **** {
  69              		.loc 1 45 1 is_stmt 1
  70              		.cfi_startproc
  71              	.LVL3:
  72 0034 130101FB 		addi	sp,sp,-80
  73              		.cfi_def_cfa_offset 80
  74 0038 23348100 		sd	s0,8(sp)
  75              		.cfi_offset 8, -72
  76 003c 13040101 		addi	s0,sp,16
  77              		.cfi_def_cfa 8, 64
  78 0040 2334B400 		sd	a1,8(s0)
  79 0044 2338C400 		sd	a2,16(s0)
  80 0048 233CD400 		sd	a3,24(s0)
  81 004c 2330E402 		sd	a4,32(s0)
  82 0050 2334F402 		sd	a5,40(s0)
  83 0054 23380403 		sd	a6,48(s0)
  84 0058 233C1403 		sd	a7,56(s0)
  46:src/kern_interrupts.cpp ****     __asm__ volatile ("ecall");
  85              		.loc 1 46 5
  86              		.loc 1 46 31 is_stmt 0
  87              	#APP
  88              	# 46 "src/kern_interrupts.cpp" 1
  47              	    return;
  89              		ecall
  90              	# 0 "" 2
  91              		.loc 1 47 5 is_stmt 1
  48:src/kern_interrupts.cpp **** }
  92              		.loc 1 48 1 is_stmt 0
  93              	#NO_APP
  94 0060 03348100 		ld	s0,8(sp)
  95              		.cfi_restore 8
  96              		.cfi_def_cfa 2, 80
  97 0064 13010105 		addi	sp,sp,80
  98              		.cfi_def_cfa_offset 0
  99 0068 67800000 		jr	ra
 100              		.cfi_endproc
 101              	.LFE23:
 103              		.align	2
GAS LISTING /tmp/ccYYKFl0.s 			page 6


 104              		.globl	handleEcall
 106              	handleEcall:
 107              	.LFB24:
  49:src/kern_interrupts.cpp **** 
  50:src/kern_interrupts.cpp **** 
  51:src/kern_interrupts.cpp **** 
  52:src/kern_interrupts.cpp **** #ifdef __cplusplus
  53:src/kern_interrupts.cpp **** extern "C" {
  54:src/kern_interrupts.cpp **** #endif
  55:src/kern_interrupts.cpp **** 
  56:src/kern_interrupts.cpp **** 
  57:src/kern_interrupts.cpp **** void handleEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4) {
 108              		.loc 1 57 73 is_stmt 1
 109              		.cfi_startproc
 110              	.LVL4:
 111 006c 130101F3 		addi	sp,sp,-208
 112              		.cfi_def_cfa_offset 208
 113 0070 2334110C 		sd	ra,200(sp)
 114 0074 2330810C 		sd	s0,192(sp)
 115 0078 233C910A 		sd	s1,184(sp)
 116 007c 2338210B 		sd	s2,176(sp)
 117              		.cfi_offset 1, -8
 118              		.cfi_offset 8, -16
 119              		.cfi_offset 9, -24
 120              		.cfi_offset 18, -32
 121 0080 1304010D 		addi	s0,sp,208
 122              		.cfi_def_cfa 8, 0
 123 0084 13090600 		mv	s2,a2
 124 0088 13860600 		mv	a2,a3
 125              	.LVL5:
  58:src/kern_interrupts.cpp ****     /*uint64 a0, a1, a2, a3, a4;
  59:src/kern_interrupts.cpp ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
  60:src/kern_interrupts.cpp ****     __asm__ volatile ("mv %[a1], a1" : [a1] "=r"(a1));
  61:src/kern_interrupts.cpp ****     __asm__ volatile ("mv %[a2], a2" : [a2] "=r"(a2));
  62:src/kern_interrupts.cpp ****     __asm__ volatile ("mv %[a3], a3" : [a3] "=r"(a3));
  63:src/kern_interrupts.cpp ****     __asm__ volatile ("mv %[a4], a4" : [a4] "=r"(a4));
  64:src/kern_interrupts.cpp ****      */
  65:src/kern_interrupts.cpp ****     uint64 scause = r_scause();
 126              		.loc 1 65 5
 127              	.LBB112:
 128              	.LBB113:
  65:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 129              		.loc 2 65 5
  66:src/../h/kern_reg_util.h ****     return scause;
 130              		.loc 2 66 5
  66:src/../h/kern_reg_util.h ****     return scause;
 131              		.loc 2 66 72 is_stmt 0
 132              	#APP
 133              	# 66 "src/../h/kern_reg_util.h" 1
 134              		csrr a5, scause
 135              	# 0 "" 2
 136              	#NO_APP
 137 0090 2330F4F8 		sd	a5,-128(s0)
  67:src/../h/kern_reg_util.h **** }
 138              		.loc 2 67 5 is_stmt 1
  67:src/../h/kern_reg_util.h **** }
 139              		.loc 2 67 12 is_stmt 0
GAS LISTING /tmp/ccYYKFl0.s 			page 7


 140 0094 833704F8 		ld	a5,-128(s0)
 141              	.LVL6:
 142              	.LBE113:
 143              	.LBE112:
  66:src/kern_interrupts.cpp ****     if (scause == INTR_USER_ECALL || scause == INTR_KERNEL_ECALL) {
 144              		.loc 1 66 5 is_stmt 1
 145              	.LBB114:
 146              		.loc 1 66 35 is_stmt 0
 147 0098 938787FF 		addi	a5,a5,-8
 148              	.LVL7:
 149              		.loc 1 66 5
 150 009c 93061000 		li	a3,1
 151              	.LVL8:
 152 00a0 63FEF600 		bleu	a5,a3,.L26
 153              	.LVL9:
 154              	.L5:
 155              	.LBE114:
  67:src/kern_interrupts.cpp ****         uint64 retval;
  68:src/kern_interrupts.cpp ****         uint64 syscall_num = a0;
  69:src/kern_interrupts.cpp ****         uint64 sepc = r_sepc() + 4;
  70:src/kern_interrupts.cpp ****         uint64 time = SYSTEM_TIME;
  71:src/kern_interrupts.cpp ****         time++;
  72:src/kern_interrupts.cpp ****         time--;
  73:src/kern_interrupts.cpp ****         w_sepc(sepc);
  74:src/kern_interrupts.cpp ****         switch (syscall_num) {
  75:src/kern_interrupts.cpp ****             case MEM_ALLOC: {
  76:src/kern_interrupts.cpp ****                 uint64 size = a1;
  77:src/kern_interrupts.cpp ****                 retval = (uint64) kern_mem_alloc(size);
  78:src/kern_interrupts.cpp ****                 w_a0(retval);
  79:src/kern_interrupts.cpp ****                 break;
  80:src/kern_interrupts.cpp ****             }
  81:src/kern_interrupts.cpp **** 
  82:src/kern_interrupts.cpp ****             case MEM_FREE: {
  83:src/kern_interrupts.cpp ****                 uint64 addr = a1;
  84:src/kern_interrupts.cpp ****                 retval = (uint64) kern_mem_free((void *) addr);
  85:src/kern_interrupts.cpp ****                 w_a0(retval);
  86:src/kern_interrupts.cpp ****                 break;
  87:src/kern_interrupts.cpp ****             }
  88:src/kern_interrupts.cpp **** 
  89:src/kern_interrupts.cpp ****             case THREAD_CREATE: {
  90:src/kern_interrupts.cpp ****                 uint64 handle = a1;
  91:src/kern_interrupts.cpp ****                 uint64 start_routine = a2;
  92:src/kern_interrupts.cpp ****                 uint64 arg = a3;
  93:src/kern_interrupts.cpp ****                 uint64 stack = a4;
  94:src/kern_interrupts.cpp ****                 retval = (uint64) kern_thread_create((thread_t *) handle,
  95:src/kern_interrupts.cpp ****                                                      (void (*)(void *)) start_routine,
  96:src/kern_interrupts.cpp ****                                                      (void *) arg,
  97:src/kern_interrupts.cpp ****                                                      (void *) stack);
  98:src/kern_interrupts.cpp ****                 (*(thread_t *) handle)->endTime = SYSTEM_TIME + DEFAULT_TIME_SLICE;
  99:src/kern_interrupts.cpp ****                 w_a0(retval);
 100:src/kern_interrupts.cpp ****                 break;
 101:src/kern_interrupts.cpp ****             }
 102:src/kern_interrupts.cpp **** 
 103:src/kern_interrupts.cpp ****             case THREAD_DISPATCH: {
 104:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 105:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 106:src/kern_interrupts.cpp ****                 kern_thread_dispatch();
GAS LISTING /tmp/ccYYKFl0.s 			page 8


 107:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 108:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 109:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + running->timeslice;
 110:src/kern_interrupts.cpp ****                 break;
 111:src/kern_interrupts.cpp ****             }
 112:src/kern_interrupts.cpp **** 
 113:src/kern_interrupts.cpp ****             case THREAD_JOIN: {
 114:src/kern_interrupts.cpp ****                 thread_t handle = (thread_t) a1;
 115:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 116:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 117:src/kern_interrupts.cpp ****                 kern_thread_join(handle);
 118:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 119:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 120:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + running->timeslice;
 121:src/kern_interrupts.cpp ****                 break;
 122:src/kern_interrupts.cpp ****             }
 123:src/kern_interrupts.cpp **** 
 124:src/kern_interrupts.cpp ****             case THREAD_EXIT: {
 125:src/kern_interrupts.cpp ****                 kern_thread_end_running();
 126:src/kern_interrupts.cpp ****             }
 127:src/kern_interrupts.cpp **** 
 128:src/kern_interrupts.cpp ****             case SEM_OPEN: {
 129:src/kern_interrupts.cpp ****                 sem_t *handle = (sem_t *) a1;
 130:src/kern_interrupts.cpp ****                 uint64 init = a2;
 131:src/kern_interrupts.cpp ****                 retval = kern_sem_open(handle, init);
 132:src/kern_interrupts.cpp ****                 w_a0(retval);
 133:src/kern_interrupts.cpp ****                 break;
 134:src/kern_interrupts.cpp ****             }
 135:src/kern_interrupts.cpp **** 
 136:src/kern_interrupts.cpp ****             case SEM_CLOSE: {
 137:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 138:src/kern_interrupts.cpp ****                 retval = kern_sem_close(handle);
 139:src/kern_interrupts.cpp ****                 w_a0(retval);
 140:src/kern_interrupts.cpp ****                 break;
 141:src/kern_interrupts.cpp ****             }
 142:src/kern_interrupts.cpp **** 
 143:src/kern_interrupts.cpp ****             case SEM_SIGNAL: {
 144:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 145:src/kern_interrupts.cpp ****                 kern_sem_signal(handle);
 146:src/kern_interrupts.cpp ****                 retval = 0;
 147:src/kern_interrupts.cpp ****                 w_a0(retval);
 148:src/kern_interrupts.cpp ****                 break;
 149:src/kern_interrupts.cpp ****             }
 150:src/kern_interrupts.cpp **** 
 151:src/kern_interrupts.cpp ****             case SEM_WAIT: {
 152:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 153:src/kern_interrupts.cpp ****                 retval = kern_sem_wait(handle);
 154:src/kern_interrupts.cpp ****                 if (retval == 1) { //nije promenjen kontekst
 155:src/kern_interrupts.cpp ****                     retval = 0;
 156:src/kern_interrupts.cpp ****                 }
 157:src/kern_interrupts.cpp ****                 else {
 158:src/kern_interrupts.cpp ****                     running->endTime = SYSTEM_TIME + running->timeslice;
 159:src/kern_interrupts.cpp ****                 }
 160:src/kern_interrupts.cpp ****                 w_a0(retval);
 161:src/kern_interrupts.cpp ****                 break;
 162:src/kern_interrupts.cpp ****             }
 163:src/kern_interrupts.cpp **** 
GAS LISTING /tmp/ccYYKFl0.s 			page 9


 164:src/kern_interrupts.cpp ****             case TIME_SLEEP : {
 165:src/kern_interrupts.cpp ****                 uint64 period = a1;
 166:src/kern_interrupts.cpp ****                 running->status = SLEEPING;
 167:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + period;
 168:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 169:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 170:src/kern_interrupts.cpp ****                 kern_thread_dispatch();
 171:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 172:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 173:src/kern_interrupts.cpp ****                 time=SYSTEM_TIME;
 174:src/kern_interrupts.cpp ****                 running->endTime=time+running->timeslice;
 175:src/kern_interrupts.cpp ****                 break;
 176:src/kern_interrupts.cpp ****             }
 177:src/kern_interrupts.cpp **** 
 178:src/kern_interrupts.cpp ****             case GETC: {
 179:src/kern_interrupts.cpp ****                 int c;
 180:src/kern_interrupts.cpp ****                 while (1){
 181:src/kern_interrupts.cpp ****                     c = kern_console_getchar();
 182:src/kern_interrupts.cpp ****                     if(c==-1){
 183:src/kern_interrupts.cpp ****                         uint64 volatile sstatus = r_sstatus();
 184:src/kern_interrupts.cpp ****                         uint64 volatile v_sepc = r_sepc();
 185:src/kern_interrupts.cpp ****                         kern_thread_dispatch();
 186:src/kern_interrupts.cpp ****                         w_sstatus(sstatus);
 187:src/kern_interrupts.cpp ****                         w_sepc(v_sepc);
 188:src/kern_interrupts.cpp ****                         running->endTime = SYSTEM_TIME + running->timeslice;
 189:src/kern_interrupts.cpp ****                     }
 190:src/kern_interrupts.cpp ****                     else break;
 191:src/kern_interrupts.cpp ****                 }
 192:src/kern_interrupts.cpp ****                 w_a0(c);
 193:src/kern_interrupts.cpp ****                 break;
 194:src/kern_interrupts.cpp ****             }
 195:src/kern_interrupts.cpp **** 
 196:src/kern_interrupts.cpp ****             case PUTC: {
 197:src/kern_interrupts.cpp ****                 char c = a1;
 198:src/kern_interrupts.cpp ****                 int res=-1;
 199:src/kern_interrupts.cpp ****                 while(1){
 200:src/kern_interrupts.cpp ****                     res=kern_console_putchar(c);
 201:src/kern_interrupts.cpp ****                     if(res==-1){
 202:src/kern_interrupts.cpp ****                         uint64 volatile sstatus = r_sstatus();
 203:src/kern_interrupts.cpp ****                         uint64 volatile v_sepc = r_sepc();
 204:src/kern_interrupts.cpp ****                         kern_thread_dispatch();
 205:src/kern_interrupts.cpp ****                         w_sstatus(sstatus);
 206:src/kern_interrupts.cpp ****                         w_sepc(v_sepc);
 207:src/kern_interrupts.cpp ****                         running->endTime = SYSTEM_TIME + running->timeslice;
 208:src/kern_interrupts.cpp ****                     }
 209:src/kern_interrupts.cpp ****                     else break;
 210:src/kern_interrupts.cpp ****                 }
 211:src/kern_interrupts.cpp ****                 break;
 212:src/kern_interrupts.cpp ****             }
 213:src/kern_interrupts.cpp **** 
 214:src/kern_interrupts.cpp **** 
 215:src/kern_interrupts.cpp ****         }
 216:src/kern_interrupts.cpp ****     }
 217:src/kern_interrupts.cpp **** }
 156              		.loc 1 217 1
 157 00a4 8330810C 		ld	ra,200(sp)
 158              		.cfi_remember_state
GAS LISTING /tmp/ccYYKFl0.s 			page 10


 159              		.cfi_restore 1
 160 00a8 0334010C 		ld	s0,192(sp)
 161              		.cfi_restore 8
 162              		.cfi_def_cfa 2, 208
 163 00ac 8334810B 		ld	s1,184(sp)
 164              		.cfi_restore 9
 165 00b0 0339010B 		ld	s2,176(sp)
 166              		.cfi_restore 18
 167 00b4 1301010D 		addi	sp,sp,208
 168              		.cfi_def_cfa_offset 0
 169 00b8 67800000 		jr	ra
 170              	.LVL10:
 171              	.L26:
 172              		.cfi_restore_state
 173 00bc 93840500 		mv	s1,a1
 174              	.LBB195:
 175              	.LBB115:
  67:src/kern_interrupts.cpp ****         uint64 retval;
 176              		.loc 1 67 9 is_stmt 1
  68:src/kern_interrupts.cpp ****         uint64 sepc = r_sepc() + 4;
 177              		.loc 1 68 9
 178              	.LVL11:
  69:src/kern_interrupts.cpp ****         uint64 time = SYSTEM_TIME;
 179              		.loc 1 69 9
 180              	.LBB116:
 181              	.LBB117:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 182              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 183              		.loc 2 78 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 184              		.loc 2 78 64 is_stmt 0
 185              	#APP
 186              	# 78 "src/../h/kern_reg_util.h" 1
 187              		csrr a5, sepc
 188              	# 0 "" 2
 189              	.LVL12:
 190              	#NO_APP
 191 00c4 2334F4F8 		sd	a5,-120(s0)
  79:src/../h/kern_reg_util.h **** }
 192              		.loc 2 79 5 is_stmt 1
  79:src/../h/kern_reg_util.h **** }
 193              		.loc 2 79 12 is_stmt 0
 194 00c8 833784F8 		ld	a5,-120(s0)
 195              	.LBE117:
 196              	.LBE116:
  69:src/kern_interrupts.cpp ****         uint64 time = SYSTEM_TIME;
 197              		.loc 1 69 34
 198 00cc 93874700 		addi	a5,a5,4
 199              	.LVL13:
  70:src/kern_interrupts.cpp ****         time++;
 200              		.loc 1 70 9 is_stmt 1
  70:src/kern_interrupts.cpp ****         time++;
 201              		.loc 1 70 16 is_stmt 0
 202 00d0 97050000 		ld	a1,.LANCHOR0
 202      83B50500 
 203              	.LVL14:
GAS LISTING /tmp/ccYYKFl0.s 			page 11


  71:src/kern_interrupts.cpp ****         time--;
 204              		.loc 1 71 9 is_stmt 1
  72:src/kern_interrupts.cpp ****         w_sepc(sepc);
 205              		.loc 1 72 9
  73:src/kern_interrupts.cpp ****         switch (syscall_num) {
 206              		.loc 1 73 9
 207              	.LBB118:
 208              	.LBB119:
  84:src/../h/kern_reg_util.h **** }
 209              		.loc 2 84 5
  84:src/../h/kern_reg_util.h **** }
 210              		.loc 2 84 65 is_stmt 0
 211              	#APP
 212              	# 84 "src/../h/kern_reg_util.h" 1
 213              		csrw sepc, a5
 214              	# 0 "" 2
 215              	.LVL15:
 216              	#NO_APP
 217              	.LBE119:
 218              	.LBE118:
  74:src/kern_interrupts.cpp ****             case MEM_ALLOC: {
 219              		.loc 1 74 9 is_stmt 1
 220 00dc 93072004 		li	a5,66
 221              	.LVL16:
 222 00e0 E3E2A7FC 		bgtu	a0,a5,.L5
 223 00e4 13152500 		slli	a0,a0,2
 224              	.LVL17:
 225 00e8 97060000 		lla	a3,.L8
 225      93860600 
 226 00f0 3305D500 		add	a0,a0,a3
 227 00f4 83270500 		lw	a5,0(a0)
 228 00f8 B387D700 		add	a5,a5,a3
 229 00fc 67800700 		jr	a5
 230              		.section	.rodata
 231              		.align	2
 232              		.align	2
 233              	.L8:
 234 0000 00000000 		.word	.L5-.L8
 235 0004 00000000 		.word	.L20-.L8
 236 0008 00000000 		.word	.L19-.L8
 237 000c 00000000 		.word	.L5-.L8
 238 0010 00000000 		.word	.L5-.L8
 239 0014 00000000 		.word	.L5-.L8
 240 0018 00000000 		.word	.L5-.L8
 241 001c 00000000 		.word	.L5-.L8
 242 0020 00000000 		.word	.L5-.L8
 243 0024 00000000 		.word	.L5-.L8
 244 0028 00000000 		.word	.L5-.L8
 245 002c 00000000 		.word	.L5-.L8
 246 0030 00000000 		.word	.L5-.L8
 247 0034 00000000 		.word	.L5-.L8
 248 0038 00000000 		.word	.L5-.L8
 249 003c 00000000 		.word	.L5-.L8
 250 0040 00000000 		.word	.L5-.L8
 251 0044 00000000 		.word	.L18-.L8
 252 0048 00000000 		.word	.L17-.L8
 253 004c 00000000 		.word	.L16-.L8
GAS LISTING /tmp/ccYYKFl0.s 			page 12


 254 0050 00000000 		.word	.L15-.L8
 255 0054 00000000 		.word	.L5-.L8
 256 0058 00000000 		.word	.L5-.L8
 257 005c 00000000 		.word	.L5-.L8
 258 0060 00000000 		.word	.L5-.L8
 259 0064 00000000 		.word	.L5-.L8
 260 0068 00000000 		.word	.L5-.L8
 261 006c 00000000 		.word	.L5-.L8
 262 0070 00000000 		.word	.L5-.L8
 263 0074 00000000 		.word	.L5-.L8
 264 0078 00000000 		.word	.L5-.L8
 265 007c 00000000 		.word	.L5-.L8
 266 0080 00000000 		.word	.L5-.L8
 267 0084 00000000 		.word	.L14-.L8
 268 0088 00000000 		.word	.L13-.L8
 269 008c 00000000 		.word	.L12-.L8
 270 0090 00000000 		.word	.L11-.L8
 271 0094 00000000 		.word	.L5-.L8
 272 0098 00000000 		.word	.L5-.L8
 273 009c 00000000 		.word	.L5-.L8
 274 00a0 00000000 		.word	.L5-.L8
 275 00a4 00000000 		.word	.L5-.L8
 276 00a8 00000000 		.word	.L5-.L8
 277 00ac 00000000 		.word	.L5-.L8
 278 00b0 00000000 		.word	.L5-.L8
 279 00b4 00000000 		.word	.L5-.L8
 280 00b8 00000000 		.word	.L5-.L8
 281 00bc 00000000 		.word	.L5-.L8
 282 00c0 00000000 		.word	.L5-.L8
 283 00c4 00000000 		.word	.L10-.L8
 284 00c8 00000000 		.word	.L5-.L8
 285 00cc 00000000 		.word	.L5-.L8
 286 00d0 00000000 		.word	.L5-.L8
 287 00d4 00000000 		.word	.L5-.L8
 288 00d8 00000000 		.word	.L5-.L8
 289 00dc 00000000 		.word	.L5-.L8
 290 00e0 00000000 		.word	.L5-.L8
 291 00e4 00000000 		.word	.L5-.L8
 292 00e8 00000000 		.word	.L5-.L8
 293 00ec 00000000 		.word	.L5-.L8
 294 00f0 00000000 		.word	.L5-.L8
 295 00f4 00000000 		.word	.L5-.L8
 296 00f8 00000000 		.word	.L5-.L8
 297 00fc 00000000 		.word	.L5-.L8
 298 0100 00000000 		.word	.L5-.L8
 299 0104 00000000 		.word	.L9-.L8
 300 0108 00000000 		.word	.L7-.L8
 301              		.text
 302              	.L20:
 303              	.LBB120:
  75:src/kern_interrupts.cpp ****                 uint64 size = a1;
 304              		.loc 1 75 13
  75:src/kern_interrupts.cpp ****                 uint64 size = a1;
 305              		.loc 1 75 29
 306              	.LBB121:
  76:src/kern_interrupts.cpp ****                 retval = (uint64) kern_mem_alloc(size);
 307              		.loc 1 76 17
GAS LISTING /tmp/ccYYKFl0.s 			page 13


 308              	.LVL18:
  77:src/kern_interrupts.cpp ****                 w_a0(retval);
 309              		.loc 1 77 17
  77:src/kern_interrupts.cpp ****                 w_a0(retval);
 310              		.loc 1 77 49 is_stmt 0
 311 0100 1B850400 		sext.w	a0,s1
 312 0104 97000000 		call	_Z14kern_mem_alloci@plt
 312      E7800000 
 313              	.LVL19:
  78:src/kern_interrupts.cpp ****                 break;
 314              		.loc 1 78 17 is_stmt 1
 315              	.LBB122:
 316              	.LBB123:
  32:src/../h/kern_reg_util.h **** }
 317              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 318              		.loc 2 32 63 is_stmt 0
 319              	#APP
 320              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 321              		mv a0, a0
 322              	# 0 "" 2
 323              		.loc 2 33 1
 324              	#NO_APP
 325 0110 6FF05FF9 		j	.L5
 326              	.LVL20:
 327              	.L19:
 328              	.LBE123:
 329              	.LBE122:
 330              	.LBE121:
  82:src/kern_interrupts.cpp ****                 uint64 addr = a1;
 331              		.loc 1 82 13 is_stmt 1
  82:src/kern_interrupts.cpp ****                 uint64 addr = a1;
 332              		.loc 1 82 28
 333              	.LBB124:
  83:src/kern_interrupts.cpp ****                 retval = (uint64) kern_mem_free((void *) addr);
 334              		.loc 1 83 17
  84:src/kern_interrupts.cpp ****                 w_a0(retval);
 335              		.loc 1 84 17
  84:src/kern_interrupts.cpp ****                 w_a0(retval);
 336              		.loc 1 84 48 is_stmt 0
 337 0114 13850400 		mv	a0,s1
 338 0118 97000000 		call	_Z13kern_mem_freePv@plt
 338      E7800000 
 339              	.LVL21:
  85:src/kern_interrupts.cpp ****                 break;
 340              		.loc 1 85 17 is_stmt 1
 341              	.LBB125:
 342              	.LBB126:
  32:src/../h/kern_reg_util.h **** }
 343              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 344              		.loc 2 32 63 is_stmt 0
 345              	#APP
 346              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 347              		mv a0, a0
GAS LISTING /tmp/ccYYKFl0.s 			page 14


 348              	# 0 "" 2
 349              		.loc 2 33 1
 350              	#NO_APP
 351 0124 6FF01FF8 		j	.L5
 352              	.LVL22:
 353              	.L18:
 354              	.LBE126:
 355              	.LBE125:
 356              	.LBE124:
  89:src/kern_interrupts.cpp ****                 uint64 handle = a1;
 357              		.loc 1 89 13 is_stmt 1
  89:src/kern_interrupts.cpp ****                 uint64 handle = a1;
 358              		.loc 1 89 33
 359              	.LBB127:
  90:src/kern_interrupts.cpp ****                 uint64 start_routine = a2;
 360              		.loc 1 90 17
  91:src/kern_interrupts.cpp ****                 uint64 arg = a3;
 361              		.loc 1 91 17
  92:src/kern_interrupts.cpp ****                 uint64 stack = a4;
 362              		.loc 1 92 17
  93:src/kern_interrupts.cpp ****                 retval = (uint64) kern_thread_create((thread_t *) handle,
 363              		.loc 1 93 17
  94:src/kern_interrupts.cpp ****                                                      (void (*)(void *)) start_routine,
 364              		.loc 1 94 17
  94:src/kern_interrupts.cpp ****                                                      (void (*)(void *)) start_routine,
 365              		.loc 1 94 53 is_stmt 0
 366 0128 93060700 		mv	a3,a4
 367 012c 93050900 		mv	a1,s2
 368              	.LVL23:
 369 0130 13850400 		mv	a0,s1
 370 0134 97000000 		call	_Z18kern_thread_createPP8thread_sPFvPvES2_S2_@plt
 370      E7800000 
 371              	.LVL24:
  98:src/kern_interrupts.cpp ****                 w_a0(retval);
 372              		.loc 1 98 17 is_stmt 1
  98:src/kern_interrupts.cpp ****                 w_a0(retval);
 373              		.loc 1 98 18 is_stmt 0
 374 013c 03B70400 		ld	a4,0(s1)
  98:src/kern_interrupts.cpp ****                 w_a0(retval);
 375              		.loc 1 98 63
 376 0140 97070000 		ld	a5,.LANCHOR0
 376      83B70700 
 377 0148 93872700 		addi	a5,a5,2
  98:src/kern_interrupts.cpp ****                 w_a0(retval);
 378              		.loc 1 98 49
 379 014c 233CF702 		sd	a5,56(a4)
  99:src/kern_interrupts.cpp ****                 break;
 380              		.loc 1 99 17 is_stmt 1
 381              	.LVL25:
 382              	.LBB128:
 383              	.LBB129:
  32:src/../h/kern_reg_util.h **** }
 384              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 385              		.loc 2 32 63 is_stmt 0
 386              	#APP
 387              	# 32 "src/../h/kern_reg_util.h" 1
GAS LISTING /tmp/ccYYKFl0.s 			page 15


  33:src/../h/kern_reg_util.h **** 
 388              		mv a0, a0
 389              	# 0 "" 2
 390              		.loc 2 33 1
 391              	#NO_APP
 392 0154 6FF01FF5 		j	.L5
 393              	.LVL26:
 394              	.L16:
 395              	.LBE129:
 396              	.LBE128:
 397              	.LBE127:
 103:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 398              		.loc 1 103 13 is_stmt 1
 103:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 399              		.loc 1 103 35
 400              	.LBB130:
 104:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 401              		.loc 1 104 17
 402              	.LBB131:
 403              	.LBB132:
 137:src/../h/kern_reg_util.h **** 
 138:src/../h/kern_reg_util.h **** inline void mc_sstatus(uint64 mask)
 139:src/../h/kern_reg_util.h **** {
 140:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 141:src/../h/kern_reg_util.h **** }
 142:src/../h/kern_reg_util.h **** 
 143:src/../h/kern_reg_util.h **** inline uint64 r_sstatus()
 144:src/../h/kern_reg_util.h **** {
 145:src/../h/kern_reg_util.h ****     uint64 volatile sstatus;
 404              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 405              		.loc 2 146 5
 406              		.loc 2 146 76 is_stmt 0
 407              	#APP
 408              	# 146 "src/../h/kern_reg_util.h" 1
 147              	    return sstatus;
 409              		csrr a5, sstatus
 410              	# 0 "" 2
 411              	#NO_APP
 412 015c 233CF4F8 		sd	a5,-104(s0)
 413              		.loc 2 147 5 is_stmt 1
 414              		.loc 2 147 12 is_stmt 0
 415 0160 833784F9 		ld	a5,-104(s0)
 416              	.LBE132:
 417              	.LBE131:
 104:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 418              		.loc 1 104 53
 419 0164 2338F4F2 		sd	a5,-208(s0)
 105:src/kern_interrupts.cpp ****                 kern_thread_dispatch();
 420              		.loc 1 105 17 is_stmt 1
 421              	.LBB133:
 422              	.LBB134:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 423              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 424              		.loc 2 78 5
  78:src/../h/kern_reg_util.h ****     return sepc;
GAS LISTING /tmp/ccYYKFl0.s 			page 16


 425              		.loc 2 78 64 is_stmt 0
 426              	#APP
 427              	# 78 "src/../h/kern_reg_util.h" 1
 428              		csrr a5, sepc
 429              	# 0 "" 2
 430              	#NO_APP
 431 016c 2338F4F8 		sd	a5,-112(s0)
  79:src/../h/kern_reg_util.h **** }
 432              		.loc 2 79 5 is_stmt 1
  79:src/../h/kern_reg_util.h **** }
 433              		.loc 2 79 12 is_stmt 0
 434 0170 833704F9 		ld	a5,-112(s0)
 435              	.LBE134:
 436              	.LBE133:
 105:src/kern_interrupts.cpp ****                 kern_thread_dispatch();
 437              		.loc 1 105 49
 438 0174 233CF4F2 		sd	a5,-200(s0)
 106:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 439              		.loc 1 106 17 is_stmt 1
 106:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 440              		.loc 1 106 37 is_stmt 0
 441 0178 97000000 		call	_Z20kern_thread_dispatchv@plt
 441      E7800000 
 442              	.LVL27:
 107:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 443              		.loc 1 107 17 is_stmt 1
 107:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 444              		.loc 1 107 26 is_stmt 0
 445 0180 833704F3 		ld	a5,-208(s0)
 446              	.LVL28:
 447              	.LBB135:
 448              	.LBB136:
 148:src/../h/kern_reg_util.h **** }
 149:src/../h/kern_reg_util.h **** 
 150:src/../h/kern_reg_util.h **** inline void w_sstatus(uint64 sstatus)
 151:src/../h/kern_reg_util.h **** {
 152:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 449              		.loc 2 152 5 is_stmt 1
 450              		.loc 2 152 77 is_stmt 0
 451              	#APP
 452              	# 152 "src/../h/kern_reg_util.h" 1
 153              	}
 453              		csrw sstatus, a5
 454              	# 0 "" 2
 455              	.LVL29:
 456              	#NO_APP
 457              	.LBE136:
 458              	.LBE135:
 108:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + running->timeslice;
 459              		.loc 1 108 17 is_stmt 1
 108:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + running->timeslice;
 460              		.loc 1 108 23 is_stmt 0
 461 0188 833784F3 		ld	a5,-200(s0)
 462              	.LVL30:
 463              	.LBB137:
 464              	.LBB138:
  84:src/../h/kern_reg_util.h **** }
GAS LISTING /tmp/ccYYKFl0.s 			page 17


 465              		.loc 2 84 5 is_stmt 1
  84:src/../h/kern_reg_util.h **** }
 466              		.loc 2 84 65 is_stmt 0
 467              	#APP
 468              	# 84 "src/../h/kern_reg_util.h" 1
 469              		csrw sepc, a5
 470              	# 0 "" 2
 471              	.LVL31:
 472              	#NO_APP
 473              	.LBE138:
 474              	.LBE137:
 109:src/kern_interrupts.cpp ****                 break;
 475              		.loc 1 109 17 is_stmt 1
 109:src/kern_interrupts.cpp ****                 break;
 476              		.loc 1 109 59 is_stmt 0
 477 0190 97070000 		la	a5,running
 477      83B70700 
 478 0198 03B70700 		ld	a4,0(a5)
 479 019c 83370703 		ld	a5,48(a4)
 109:src/kern_interrupts.cpp ****                 break;
 480              		.loc 1 109 48
 481 01a0 97060000 		ld	a3,.LANCHOR0
 481      83B60600 
 482 01a8 B387D700 		add	a5,a5,a3
 109:src/kern_interrupts.cpp ****                 break;
 483              		.loc 1 109 34
 484 01ac 233CF702 		sd	a5,56(a4)
 110:src/kern_interrupts.cpp ****             }
 485              		.loc 1 110 17 is_stmt 1
 486 01b0 6FF05FEF 		j	.L5
 487              	.LVL32:
 488              	.L15:
 489              	.LBE130:
 113:src/kern_interrupts.cpp ****                 thread_t handle = (thread_t) a1;
 490              		.loc 1 113 13
 113:src/kern_interrupts.cpp ****                 thread_t handle = (thread_t) a1;
 491              		.loc 1 113 31
 492              	.LBB139:
 114:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 493              		.loc 1 114 17
 115:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 494              		.loc 1 115 17
 495              	.LBB140:
 496              	.LBB141:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 497              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 498              		.loc 2 146 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 499              		.loc 2 146 76 is_stmt 0
 500              	#APP
 501              	# 146 "src/../h/kern_reg_util.h" 1
 502              		csrr a5, sstatus
 503              	# 0 "" 2
 504              	#NO_APP
 505 01b8 2334F4FA 		sd	a5,-88(s0)
 147:src/../h/kern_reg_util.h **** }
GAS LISTING /tmp/ccYYKFl0.s 			page 18


 506              		.loc 2 147 5 is_stmt 1
 147:src/../h/kern_reg_util.h **** }
 507              		.loc 2 147 12 is_stmt 0
 508 01bc 833784FA 		ld	a5,-88(s0)
 509              	.LBE141:
 510              	.LBE140:
 115:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 511              		.loc 1 115 53
 512 01c0 2330F4F4 		sd	a5,-192(s0)
 116:src/kern_interrupts.cpp ****                 kern_thread_join(handle);
 513              		.loc 1 116 17 is_stmt 1
 514              	.LBB142:
 515              	.LBB143:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 516              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 517              		.loc 2 78 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 518              		.loc 2 78 64 is_stmt 0
 519              	#APP
 520              	# 78 "src/../h/kern_reg_util.h" 1
 521              		csrr a5, sepc
 522              	# 0 "" 2
 523              	#NO_APP
 524 01c8 2330F4FA 		sd	a5,-96(s0)
  79:src/../h/kern_reg_util.h **** }
 525              		.loc 2 79 5 is_stmt 1
  79:src/../h/kern_reg_util.h **** }
 526              		.loc 2 79 12 is_stmt 0
 527 01cc 833704FA 		ld	a5,-96(s0)
 528              	.LBE143:
 529              	.LBE142:
 116:src/kern_interrupts.cpp ****                 kern_thread_join(handle);
 530              		.loc 1 116 49
 531 01d0 2334F4F4 		sd	a5,-184(s0)
 117:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 532              		.loc 1 117 17 is_stmt 1
 117:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 533              		.loc 1 117 33 is_stmt 0
 534 01d4 13850400 		mv	a0,s1
 535 01d8 97000000 		call	_Z16kern_thread_joinP8thread_s@plt
 535      E7800000 
 536              	.LVL33:
 118:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 537              		.loc 1 118 17 is_stmt 1
 118:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 538              		.loc 1 118 26 is_stmt 0
 539 01e0 833704F4 		ld	a5,-192(s0)
 540              	.LVL34:
 541              	.LBB144:
 542              	.LBB145:
 152:src/../h/kern_reg_util.h **** }
 543              		.loc 2 152 5 is_stmt 1
 152:src/../h/kern_reg_util.h **** }
 544              		.loc 2 152 77 is_stmt 0
 545              	#APP
 546              	# 152 "src/../h/kern_reg_util.h" 1
GAS LISTING /tmp/ccYYKFl0.s 			page 19


 547              		csrw sstatus, a5
 548              	# 0 "" 2
 549              	.LVL35:
 550              	#NO_APP
 551              	.LBE145:
 552              	.LBE144:
 119:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + running->timeslice;
 553              		.loc 1 119 17 is_stmt 1
 119:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + running->timeslice;
 554              		.loc 1 119 23 is_stmt 0
 555 01e8 833784F4 		ld	a5,-184(s0)
 556              	.LVL36:
 557              	.LBB146:
 558              	.LBB147:
  84:src/../h/kern_reg_util.h **** }
 559              		.loc 2 84 5 is_stmt 1
  84:src/../h/kern_reg_util.h **** }
 560              		.loc 2 84 65 is_stmt 0
 561              	#APP
 562              	# 84 "src/../h/kern_reg_util.h" 1
 563              		csrw sepc, a5
 564              	# 0 "" 2
 565              	.LVL37:
 566              	#NO_APP
 567              	.LBE147:
 568              	.LBE146:
 120:src/kern_interrupts.cpp ****                 break;
 569              		.loc 1 120 17 is_stmt 1
 120:src/kern_interrupts.cpp ****                 break;
 570              		.loc 1 120 59 is_stmt 0
 571 01f0 97070000 		la	a5,running
 571      83B70700 
 572 01f8 03B70700 		ld	a4,0(a5)
 573 01fc 83370703 		ld	a5,48(a4)
 120:src/kern_interrupts.cpp ****                 break;
 574              		.loc 1 120 48
 575 0200 97060000 		ld	a3,.LANCHOR0
 575      83B60600 
 576 0208 B387D700 		add	a5,a5,a3
 120:src/kern_interrupts.cpp ****                 break;
 577              		.loc 1 120 34
 578 020c 233CF702 		sd	a5,56(a4)
 121:src/kern_interrupts.cpp ****             }
 579              		.loc 1 121 17 is_stmt 1
 580 0210 6FF05FE9 		j	.L5
 581              	.LVL38:
 582              	.L17:
 583              	.LBE139:
 124:src/kern_interrupts.cpp ****                 kern_thread_end_running();
 584              		.loc 1 124 13
 124:src/kern_interrupts.cpp ****                 kern_thread_end_running();
 585              		.loc 1 124 31
 125:src/kern_interrupts.cpp ****             }
 586              		.loc 1 125 17
 125:src/kern_interrupts.cpp ****             }
 587              		.loc 1 125 40 is_stmt 0
 588 0214 97000000 		call	_Z23kern_thread_end_runningv@plt
GAS LISTING /tmp/ccYYKFl0.s 			page 20


 588      E7800000 
 589              	.LVL39:
 590              	.L14:
 128:src/kern_interrupts.cpp ****                 sem_t *handle = (sem_t *) a1;
 591              		.loc 1 128 13 is_stmt 1
 128:src/kern_interrupts.cpp ****                 sem_t *handle = (sem_t *) a1;
 592              		.loc 1 128 28
 593              	.LBB148:
 129:src/kern_interrupts.cpp ****                 uint64 init = a2;
 594              		.loc 1 129 17
 130:src/kern_interrupts.cpp ****                 retval = kern_sem_open(handle, init);
 595              		.loc 1 130 17
 131:src/kern_interrupts.cpp ****                 w_a0(retval);
 596              		.loc 1 131 17
 131:src/kern_interrupts.cpp ****                 w_a0(retval);
 597              		.loc 1 131 39 is_stmt 0
 598 021c 9B050900 		sext.w	a1,s2
 599 0220 13850400 		mv	a0,s1
 600 0224 97000000 		call	_Z13kern_sem_openPP5sem_sj@plt
 600      E7800000 
 601              	.LVL40:
 132:src/kern_interrupts.cpp ****                 break;
 602              		.loc 1 132 17 is_stmt 1
 603              	.LBB149:
 604              	.LBB150:
  32:src/../h/kern_reg_util.h **** }
 605              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 606              		.loc 2 32 63 is_stmt 0
 607              	#APP
 608              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 609              		mv a0, a0
 610              	# 0 "" 2
 611              		.loc 2 33 1
 612              	#NO_APP
 613 0230 6FF05FE7 		j	.L5
 614              	.LVL41:
 615              	.L13:
 616              	.LBE150:
 617              	.LBE149:
 618              	.LBE148:
 136:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 619              		.loc 1 136 13 is_stmt 1
 136:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 620              		.loc 1 136 29
 621              	.LBB151:
 137:src/kern_interrupts.cpp ****                 retval = kern_sem_close(handle);
 622              		.loc 1 137 17
 138:src/kern_interrupts.cpp ****                 w_a0(retval);
 623              		.loc 1 138 17
 138:src/kern_interrupts.cpp ****                 w_a0(retval);
 624              		.loc 1 138 40 is_stmt 0
 625 0234 13850400 		mv	a0,s1
 626 0238 97000000 		call	_Z14kern_sem_closeP5sem_s@plt
 626      E7800000 
 627              	.LVL42:
GAS LISTING /tmp/ccYYKFl0.s 			page 21


 139:src/kern_interrupts.cpp ****                 break;
 628              		.loc 1 139 17 is_stmt 1
 629              	.LBB152:
 630              	.LBB153:
  32:src/../h/kern_reg_util.h **** }
 631              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 632              		.loc 2 32 63 is_stmt 0
 633              	#APP
 634              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 635              		mv a0, a0
 636              	# 0 "" 2
 637              		.loc 2 33 1
 638              	#NO_APP
 639 0244 6FF01FE6 		j	.L5
 640              	.LVL43:
 641              	.L11:
 642              	.LBE153:
 643              	.LBE152:
 644              	.LBE151:
 143:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 645              		.loc 1 143 13 is_stmt 1
 143:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 646              		.loc 1 143 30
 647              	.LBB154:
 144:src/kern_interrupts.cpp ****                 kern_sem_signal(handle);
 648              		.loc 1 144 17
 145:src/kern_interrupts.cpp ****                 retval = 0;
 649              		.loc 1 145 17
 145:src/kern_interrupts.cpp ****                 retval = 0;
 650              		.loc 1 145 32 is_stmt 0
 651 0248 13850400 		mv	a0,s1
 652 024c 97000000 		call	_Z15kern_sem_signalP5sem_s@plt
 652      E7800000 
 653              	.LVL44:
 146:src/kern_interrupts.cpp ****                 w_a0(retval);
 654              		.loc 1 146 17 is_stmt 1
 147:src/kern_interrupts.cpp ****                 break;
 655              		.loc 1 147 17
 656              	.LBB155:
 657              	.LBB156:
  32:src/../h/kern_reg_util.h **** }
 658              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 659              		.loc 2 32 63 is_stmt 0
 660 0254 93070000 		li	a5,0
 661              	#APP
 662              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 663              		mv a0, a5
 664              	# 0 "" 2
 665              		.loc 2 33 1
 666              	#NO_APP
 667 025c 6FF09FE4 		j	.L5
 668              	.LVL45:
 669              	.L12:
GAS LISTING /tmp/ccYYKFl0.s 			page 22


 670              	.LBE156:
 671              	.LBE155:
 672              	.LBE154:
 151:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 673              		.loc 1 151 13 is_stmt 1
 151:src/kern_interrupts.cpp ****                 sem_t handle = (sem_t) a1;
 674              		.loc 1 151 28
 675              	.LBB157:
 152:src/kern_interrupts.cpp ****                 retval = kern_sem_wait(handle);
 676              		.loc 1 152 17
 153:src/kern_interrupts.cpp ****                 if (retval == 1) { //nije promenjen kontekst
 677              		.loc 1 153 17
 153:src/kern_interrupts.cpp ****                 if (retval == 1) { //nije promenjen kontekst
 678              		.loc 1 153 39 is_stmt 0
 679 0260 13850400 		mv	a0,s1
 680 0264 97000000 		call	_Z13kern_sem_waitP5sem_s@plt
 680      E7800000 
 681              	.LVL46:
 154:src/kern_interrupts.cpp ****                     retval = 0;
 682              		.loc 1 154 17 is_stmt 1
 683 026c 93071000 		li	a5,1
 684 0270 6306F502 		beq	a0,a5,.L24
 158:src/kern_interrupts.cpp ****                 }
 685              		.loc 1 158 21
 158:src/kern_interrupts.cpp ****                 }
 686              		.loc 1 158 63 is_stmt 0
 687 0274 97070000 		la	a5,running
 687      83B70700 
 688 027c 03B70700 		ld	a4,0(a5)
 689 0280 83370703 		ld	a5,48(a4)
 158:src/kern_interrupts.cpp ****                 }
 690              		.loc 1 158 52
 691 0284 97060000 		ld	a3,.LANCHOR0
 691      83B60600 
 692 028c B387D700 		add	a5,a5,a3
 158:src/kern_interrupts.cpp ****                 }
 693              		.loc 1 158 38
 694 0290 233CF702 		sd	a5,56(a4)
 695              	.LVL47:
 696              	.L21:
 160:src/kern_interrupts.cpp ****                 break;
 697              		.loc 1 160 17 is_stmt 1
 698              	.LBB158:
 699              	.LBB159:
  32:src/../h/kern_reg_util.h **** }
 700              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 701              		.loc 2 32 63 is_stmt 0
 702              	#APP
 703              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 704              		mv a0, a0
 705              	# 0 "" 2
 706              		.loc 2 33 1
 707              	#NO_APP
 708 0298 6FF0DFE0 		j	.L5
 709              	.LVL48:
GAS LISTING /tmp/ccYYKFl0.s 			page 23


 710              	.L24:
 711              	.LBE159:
 712              	.LBE158:
 155:src/kern_interrupts.cpp ****                 }
 713              		.loc 1 155 28
 714 029c 13050000 		li	a0,0
 715              	.LVL49:
 716 02a0 6FF05FFF 		j	.L21
 717              	.LVL50:
 718              	.L10:
 719              	.LBE157:
 164:src/kern_interrupts.cpp ****                 uint64 period = a1;
 720              		.loc 1 164 13 is_stmt 1
 164:src/kern_interrupts.cpp ****                 uint64 period = a1;
 721              		.loc 1 164 31
 722              	.LBB160:
 165:src/kern_interrupts.cpp ****                 running->status = SLEEPING;
 723              		.loc 1 165 17
 166:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + period;
 724              		.loc 1 166 17
 166:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + period;
 725              		.loc 1 166 26 is_stmt 0
 726 02a4 17090000 		la	s2,running
 726      03390900 
 727              	.LVL51:
 728 02ac 83370900 		ld	a5,0(s2)
 166:src/kern_interrupts.cpp ****                 running->endTime = SYSTEM_TIME + period;
 729              		.loc 1 166 33
 730 02b0 13075000 		li	a4,5
 731              	.LVL52:
 732 02b4 23A8E704 		sw	a4,80(a5)
 167:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 733              		.loc 1 167 17 is_stmt 1
 167:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 734              		.loc 1 167 48 is_stmt 0
 735 02b8 B3859500 		add	a1,a1,s1
 736              	.LVL53:
 167:src/kern_interrupts.cpp ****                 uint64 volatile sstatus = r_sstatus();
 737              		.loc 1 167 34
 738 02bc 23BCB702 		sd	a1,56(a5)
 168:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 739              		.loc 1 168 17 is_stmt 1
 740              	.LBB161:
 741              	.LBB162:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 742              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 743              		.loc 2 146 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 744              		.loc 2 146 76 is_stmt 0
 745              	#APP
 746              	# 146 "src/../h/kern_reg_util.h" 1
 747              		csrr a5, sstatus
 748              	# 0 "" 2
 749              	#NO_APP
 750 02c4 233CF4FA 		sd	a5,-72(s0)
 147:src/../h/kern_reg_util.h **** }
GAS LISTING /tmp/ccYYKFl0.s 			page 24


 751              		.loc 2 147 5 is_stmt 1
 147:src/../h/kern_reg_util.h **** }
 752              		.loc 2 147 12 is_stmt 0
 753 02c8 833784FB 		ld	a5,-72(s0)
 754              	.LBE162:
 755              	.LBE161:
 168:src/kern_interrupts.cpp ****                 uint64 volatile v_sepc = r_sepc();
 756              		.loc 1 168 53
 757 02cc 2338F4F4 		sd	a5,-176(s0)
 169:src/kern_interrupts.cpp ****                 kern_thread_dispatch();
 758              		.loc 1 169 17 is_stmt 1
 759              	.LBB163:
 760              	.LBB164:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 761              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 762              		.loc 2 78 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 763              		.loc 2 78 64 is_stmt 0
 764              	#APP
 765              	# 78 "src/../h/kern_reg_util.h" 1
 766              		csrr a5, sepc
 767              	# 0 "" 2
 768              	#NO_APP
 769 02d4 2338F4FA 		sd	a5,-80(s0)
  79:src/../h/kern_reg_util.h **** }
 770              		.loc 2 79 5 is_stmt 1
  79:src/../h/kern_reg_util.h **** }
 771              		.loc 2 79 12 is_stmt 0
 772 02d8 833704FB 		ld	a5,-80(s0)
 773              	.LBE164:
 774              	.LBE163:
 169:src/kern_interrupts.cpp ****                 kern_thread_dispatch();
 775              		.loc 1 169 49
 776 02dc 233CF4F4 		sd	a5,-168(s0)
 170:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 777              		.loc 1 170 17 is_stmt 1
 170:src/kern_interrupts.cpp ****                 w_sstatus(sstatus);
 778              		.loc 1 170 37 is_stmt 0
 779 02e0 97000000 		call	_Z20kern_thread_dispatchv@plt
 779      E7800000 
 780              	.LVL54:
 171:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 781              		.loc 1 171 17 is_stmt 1
 171:src/kern_interrupts.cpp ****                 w_sepc(v_sepc);
 782              		.loc 1 171 26 is_stmt 0
 783 02e8 833704F5 		ld	a5,-176(s0)
 784              	.LVL55:
 785              	.LBB165:
 786              	.LBB166:
 152:src/../h/kern_reg_util.h **** }
 787              		.loc 2 152 5 is_stmt 1
 152:src/../h/kern_reg_util.h **** }
 788              		.loc 2 152 77 is_stmt 0
 789              	#APP
 790              	# 152 "src/../h/kern_reg_util.h" 1
 791              		csrw sstatus, a5
GAS LISTING /tmp/ccYYKFl0.s 			page 25


 792              	# 0 "" 2
 793              	.LVL56:
 794              	#NO_APP
 795              	.LBE166:
 796              	.LBE165:
 172:src/kern_interrupts.cpp ****                 time=SYSTEM_TIME;
 797              		.loc 1 172 17 is_stmt 1
 172:src/kern_interrupts.cpp ****                 time=SYSTEM_TIME;
 798              		.loc 1 172 23 is_stmt 0
 799 02f0 833784F5 		ld	a5,-168(s0)
 800              	.LVL57:
 801              	.LBB167:
 802              	.LBB168:
  84:src/../h/kern_reg_util.h **** }
 803              		.loc 2 84 5 is_stmt 1
  84:src/../h/kern_reg_util.h **** }
 804              		.loc 2 84 65 is_stmt 0
 805              	#APP
 806              	# 84 "src/../h/kern_reg_util.h" 1
 807              		csrw sepc, a5
 808              	# 0 "" 2
 809              	.LVL58:
 810              	#NO_APP
 811              	.LBE168:
 812              	.LBE167:
 173:src/kern_interrupts.cpp ****                 running->endTime=time+running->timeslice;
 813              		.loc 1 173 17 is_stmt 1
 174:src/kern_interrupts.cpp ****                 break;
 814              		.loc 1 174 17
 174:src/kern_interrupts.cpp ****                 break;
 815              		.loc 1 174 48 is_stmt 0
 816 02f8 03370900 		ld	a4,0(s2)
 817 02fc 83370703 		ld	a5,48(a4)
 174:src/kern_interrupts.cpp ****                 break;
 818              		.loc 1 174 38
 819 0300 97060000 		ld	a3,.LANCHOR0
 819      83B60600 
 820 0308 B387D700 		add	a5,a5,a3
 174:src/kern_interrupts.cpp ****                 break;
 821              		.loc 1 174 33
 822 030c 233CF702 		sd	a5,56(a4)
 175:src/kern_interrupts.cpp ****             }
 823              		.loc 1 175 17 is_stmt 1
 824 0310 6FF05FD9 		j	.L5
 825              	.LVL59:
 826              	.L9:
 827              	.LBE160:
 178:src/kern_interrupts.cpp ****                 int c;
 828              		.loc 1 178 13
 178:src/kern_interrupts.cpp ****                 int c;
 829              		.loc 1 178 24
 830              	.LBB169:
 179:src/kern_interrupts.cpp ****                 while (1){
 831              		.loc 1 179 17
 180:src/kern_interrupts.cpp ****                     c = kern_console_getchar();
 832              		.loc 1 180 17
 833              	.LBB170:
GAS LISTING /tmp/ccYYKFl0.s 			page 26


 181:src/kern_interrupts.cpp ****                     if(c==-1){
 834              		.loc 1 181 21
 181:src/kern_interrupts.cpp ****                     if(c==-1){
 835              		.loc 1 181 45 is_stmt 0
 836 0314 97000000 		call	_Z20kern_console_getcharv@plt
 836      E7800000 
 837              	.LVL60:
 182:src/kern_interrupts.cpp ****                         uint64 volatile sstatus = r_sstatus();
 838              		.loc 1 182 21 is_stmt 1
 839              	.LBB171:
 840 031c 9307F0FF 		li	a5,-1
 841 0320 6310F506 		bne	a0,a5,.L22
 842              	.LBB172:
 183:src/kern_interrupts.cpp ****                         uint64 volatile v_sepc = r_sepc();
 843              		.loc 1 183 25
 844              	.LBB173:
 845              	.LBB174:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 846              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 847              		.loc 2 146 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 848              		.loc 2 146 76 is_stmt 0
 849              	#APP
 850              	# 146 "src/../h/kern_reg_util.h" 1
 851              		csrr a5, sstatus
 852              	# 0 "" 2
 853              	#NO_APP
 854 0328 2334F4FC 		sd	a5,-56(s0)
 147:src/../h/kern_reg_util.h **** }
 855              		.loc 2 147 5 is_stmt 1
 147:src/../h/kern_reg_util.h **** }
 856              		.loc 2 147 12 is_stmt 0
 857 032c 833784FC 		ld	a5,-56(s0)
 858              	.LBE174:
 859              	.LBE173:
 183:src/kern_interrupts.cpp ****                         uint64 volatile v_sepc = r_sepc();
 860              		.loc 1 183 61
 861 0330 2330F4F6 		sd	a5,-160(s0)
 184:src/kern_interrupts.cpp ****                         kern_thread_dispatch();
 862              		.loc 1 184 25 is_stmt 1
 863              	.LBB175:
 864              	.LBB176:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 865              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 866              		.loc 2 78 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 867              		.loc 2 78 64 is_stmt 0
 868              	#APP
 869              	# 78 "src/../h/kern_reg_util.h" 1
 870              		csrr a5, sepc
 871              	# 0 "" 2
 872              	#NO_APP
 873 0338 2330F4FC 		sd	a5,-64(s0)
  79:src/../h/kern_reg_util.h **** }
 874              		.loc 2 79 5 is_stmt 1
GAS LISTING /tmp/ccYYKFl0.s 			page 27


  79:src/../h/kern_reg_util.h **** }
 875              		.loc 2 79 12 is_stmt 0
 876 033c 833704FC 		ld	a5,-64(s0)
 877              	.LBE176:
 878              	.LBE175:
 184:src/kern_interrupts.cpp ****                         kern_thread_dispatch();
 879              		.loc 1 184 57
 880 0340 2334F4F6 		sd	a5,-152(s0)
 185:src/kern_interrupts.cpp ****                         w_sstatus(sstatus);
 881              		.loc 1 185 25 is_stmt 1
 185:src/kern_interrupts.cpp ****                         w_sstatus(sstatus);
 882              		.loc 1 185 45 is_stmt 0
 883 0344 97000000 		call	_Z20kern_thread_dispatchv@plt
 883      E7800000 
 884              	.LVL61:
 186:src/kern_interrupts.cpp ****                         w_sepc(v_sepc);
 885              		.loc 1 186 25 is_stmt 1
 186:src/kern_interrupts.cpp ****                         w_sepc(v_sepc);
 886              		.loc 1 186 34 is_stmt 0
 887 034c 833704F6 		ld	a5,-160(s0)
 888              	.LVL62:
 889              	.LBB177:
 890              	.LBB178:
 152:src/../h/kern_reg_util.h **** }
 891              		.loc 2 152 5 is_stmt 1
 152:src/../h/kern_reg_util.h **** }
 892              		.loc 2 152 77 is_stmt 0
 893              	#APP
 894              	# 152 "src/../h/kern_reg_util.h" 1
 895              		csrw sstatus, a5
 896              	# 0 "" 2
 897              	.LVL63:
 898              	#NO_APP
 899              	.LBE178:
 900              	.LBE177:
 187:src/kern_interrupts.cpp ****                         running->endTime = SYSTEM_TIME + running->timeslice;
 901              		.loc 1 187 25 is_stmt 1
 187:src/kern_interrupts.cpp ****                         running->endTime = SYSTEM_TIME + running->timeslice;
 902              		.loc 1 187 31 is_stmt 0
 903 0354 833784F6 		ld	a5,-152(s0)
 904              	.LVL64:
 905              	.LBB179:
 906              	.LBB180:
  84:src/../h/kern_reg_util.h **** }
 907              		.loc 2 84 5 is_stmt 1
  84:src/../h/kern_reg_util.h **** }
 908              		.loc 2 84 65 is_stmt 0
 909              	#APP
 910              	# 84 "src/../h/kern_reg_util.h" 1
 911              		csrw sepc, a5
 912              	# 0 "" 2
 913              	.LVL65:
 914              	#NO_APP
 915              	.LBE180:
 916              	.LBE179:
 188:src/kern_interrupts.cpp ****                     }
 917              		.loc 1 188 25 is_stmt 1
GAS LISTING /tmp/ccYYKFl0.s 			page 28


 188:src/kern_interrupts.cpp ****                     }
 918              		.loc 1 188 67 is_stmt 0
 919 035c 97070000 		la	a5,running
 919      83B70700 
 920 0364 03B70700 		ld	a4,0(a5)
 921 0368 83370703 		ld	a5,48(a4)
 188:src/kern_interrupts.cpp ****                     }
 922              		.loc 1 188 56
 923 036c 97060000 		ld	a3,.LANCHOR0
 923      83B60600 
 924 0374 B387D700 		add	a5,a5,a3
 188:src/kern_interrupts.cpp ****                     }
 925              		.loc 1 188 42
 926 0378 233CF702 		sd	a5,56(a4)
 927              	.LBE172:
 928              	.LBE171:
 929              	.LBE170:
 180:src/kern_interrupts.cpp ****                     c = kern_console_getchar();
 930              		.loc 1 180 17 is_stmt 1
 191:src/kern_interrupts.cpp ****                 w_a0(c);
 931              		.loc 1 191 17 is_stmt 0
 932 037c 6FF09FF9 		j	.L9
 933              	.LVL66:
 934              	.L22:
 192:src/kern_interrupts.cpp ****                 break;
 935              		.loc 1 192 17 is_stmt 1
 936              	.LBB181:
 937              	.LBB182:
  32:src/../h/kern_reg_util.h **** }
 938              		.loc 2 32 5
  32:src/../h/kern_reg_util.h **** }
 939              		.loc 2 32 63 is_stmt 0
 940              	#APP
 941              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 942              		mv a0, a0
 943              	# 0 "" 2
 944              		.loc 2 33 1
 945              	#NO_APP
 946 0384 6FF01FD2 		j	.L5
 947              	.LVL67:
 948              	.L7:
 949              	.LBE182:
 950              	.LBE181:
 951              	.LBE169:
 196:src/kern_interrupts.cpp ****                 char c = a1;
 952              		.loc 1 196 13 is_stmt 1
 196:src/kern_interrupts.cpp ****                 char c = a1;
 953              		.loc 1 196 24
 954              	.LBB183:
 197:src/kern_interrupts.cpp ****                 int res=-1;
 955              		.loc 1 197 17
 197:src/kern_interrupts.cpp ****                 int res=-1;
 956              		.loc 1 197 22 is_stmt 0
 957 0388 93F4F40F 		andi	s1,s1,0xff
 958              	.LVL68:
 198:src/kern_interrupts.cpp ****                 while(1){
GAS LISTING /tmp/ccYYKFl0.s 			page 29


 959              		.loc 1 198 17 is_stmt 1
 960              	.L23:
 199:src/kern_interrupts.cpp ****                     res=kern_console_putchar(c);
 961              		.loc 1 199 17
 962              	.LBB184:
 200:src/kern_interrupts.cpp ****                     if(res==-1){
 963              		.loc 1 200 21
 200:src/kern_interrupts.cpp ****                     if(res==-1){
 964              		.loc 1 200 45 is_stmt 0
 965 038c 13850400 		mv	a0,s1
 966 0390 97000000 		call	_Z20kern_console_putcharc@plt
 966      E7800000 
 967              	.LVL69:
 201:src/kern_interrupts.cpp ****                         uint64 volatile sstatus = r_sstatus();
 968              		.loc 1 201 21 is_stmt 1
 969              	.LBB185:
 970 0398 9307F0FF 		li	a5,-1
 971 039c E314F5D0 		bne	a0,a5,.L5
 972              	.LBB186:
 202:src/kern_interrupts.cpp ****                         uint64 volatile v_sepc = r_sepc();
 973              		.loc 1 202 25
 974              	.LBB187:
 975              	.LBB188:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 976              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 977              		.loc 2 146 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 978              		.loc 2 146 76 is_stmt 0
 979              	#APP
 980              	# 146 "src/../h/kern_reg_util.h" 1
 981              		csrr a5, sstatus
 982              	# 0 "" 2
 983              	#NO_APP
 984 03a4 233CF4FC 		sd	a5,-40(s0)
 147:src/../h/kern_reg_util.h **** }
 985              		.loc 2 147 5 is_stmt 1
 147:src/../h/kern_reg_util.h **** }
 986              		.loc 2 147 12 is_stmt 0
 987 03a8 833784FD 		ld	a5,-40(s0)
 988              	.LBE188:
 989              	.LBE187:
 202:src/kern_interrupts.cpp ****                         uint64 volatile v_sepc = r_sepc();
 990              		.loc 1 202 61
 991 03ac 2338F4F6 		sd	a5,-144(s0)
 203:src/kern_interrupts.cpp ****                         kern_thread_dispatch();
 992              		.loc 1 203 25 is_stmt 1
 993              	.LBB189:
 994              	.LBB190:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 995              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 996              		.loc 2 78 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 997              		.loc 2 78 64 is_stmt 0
 998              	#APP
 999              	# 78 "src/../h/kern_reg_util.h" 1
GAS LISTING /tmp/ccYYKFl0.s 			page 30


 1000              		csrr a5, sepc
 1001              	# 0 "" 2
 1002              	#NO_APP
 1003 03b4 2338F4FC 		sd	a5,-48(s0)
  79:src/../h/kern_reg_util.h **** }
 1004              		.loc 2 79 5 is_stmt 1
  79:src/../h/kern_reg_util.h **** }
 1005              		.loc 2 79 12 is_stmt 0
 1006 03b8 833704FD 		ld	a5,-48(s0)
 1007              	.LBE190:
 1008              	.LBE189:
 203:src/kern_interrupts.cpp ****                         kern_thread_dispatch();
 1009              		.loc 1 203 57
 1010 03bc 233CF4F6 		sd	a5,-136(s0)
 204:src/kern_interrupts.cpp ****                         w_sstatus(sstatus);
 1011              		.loc 1 204 25 is_stmt 1
 204:src/kern_interrupts.cpp ****                         w_sstatus(sstatus);
 1012              		.loc 1 204 45 is_stmt 0
 1013 03c0 97000000 		call	_Z20kern_thread_dispatchv@plt
 1013      E7800000 
 1014              	.LVL70:
 205:src/kern_interrupts.cpp ****                         w_sepc(v_sepc);
 1015              		.loc 1 205 25 is_stmt 1
 205:src/kern_interrupts.cpp ****                         w_sepc(v_sepc);
 1016              		.loc 1 205 34 is_stmt 0
 1017 03c8 833704F7 		ld	a5,-144(s0)
 1018              	.LVL71:
 1019              	.LBB191:
 1020              	.LBB192:
 152:src/../h/kern_reg_util.h **** }
 1021              		.loc 2 152 5 is_stmt 1
 152:src/../h/kern_reg_util.h **** }
 1022              		.loc 2 152 77 is_stmt 0
 1023              	#APP
 1024              	# 152 "src/../h/kern_reg_util.h" 1
 1025              		csrw sstatus, a5
 1026              	# 0 "" 2
 1027              	.LVL72:
 1028              	#NO_APP
 1029              	.LBE192:
 1030              	.LBE191:
 206:src/kern_interrupts.cpp ****                         running->endTime = SYSTEM_TIME + running->timeslice;
 1031              		.loc 1 206 25 is_stmt 1
 206:src/kern_interrupts.cpp ****                         running->endTime = SYSTEM_TIME + running->timeslice;
 1032              		.loc 1 206 31 is_stmt 0
 1033 03d0 833784F7 		ld	a5,-136(s0)
 1034              	.LVL73:
 1035              	.LBB193:
 1036              	.LBB194:
  84:src/../h/kern_reg_util.h **** }
 1037              		.loc 2 84 5 is_stmt 1
  84:src/../h/kern_reg_util.h **** }
 1038              		.loc 2 84 65 is_stmt 0
 1039              	#APP
 1040              	# 84 "src/../h/kern_reg_util.h" 1
 1041              		csrw sepc, a5
 1042              	# 0 "" 2
GAS LISTING /tmp/ccYYKFl0.s 			page 31


 1043              	.LVL74:
 1044              	#NO_APP
 1045              	.LBE194:
 1046              	.LBE193:
 207:src/kern_interrupts.cpp ****                     }
 1047              		.loc 1 207 25 is_stmt 1
 207:src/kern_interrupts.cpp ****                     }
 1048              		.loc 1 207 67 is_stmt 0
 1049 03d8 97070000 		la	a5,running
 1049      83B70700 
 1050 03e0 03B70700 		ld	a4,0(a5)
 1051 03e4 83370703 		ld	a5,48(a4)
 207:src/kern_interrupts.cpp ****                     }
 1052              		.loc 1 207 56
 1053 03e8 97060000 		ld	a3,.LANCHOR0
 1053      83B60600 
 1054 03f0 B387D700 		add	a5,a5,a3
 207:src/kern_interrupts.cpp ****                     }
 1055              		.loc 1 207 42
 1056 03f4 233CF702 		sd	a5,56(a4)
 1057              	.LBE186:
 1058              	.LBE185:
 1059              	.LBE184:
 199:src/kern_interrupts.cpp ****                     res=kern_console_putchar(c);
 1060              		.loc 1 199 17 is_stmt 1
 210:src/kern_interrupts.cpp ****                 break;
 1061              		.loc 1 210 17 is_stmt 0
 1062 03f8 6FF05FF9 		j	.L23
 1063              	.LBE183:
 1064              	.LBE120:
 1065              	.LBE115:
 1066              	.LBE195:
 1067              		.cfi_endproc
 1068              	.LFE24:
 1070              		.align	2
 1071              		.globl	handleInterrupt
 1073              	handleInterrupt:
 1074              	.LFB25:
 218:src/kern_interrupts.cpp **** 
 219:src/kern_interrupts.cpp **** int counter=0;
 220:src/kern_interrupts.cpp **** #define BUFFER_SIZE 1024
 221:src/kern_interrupts.cpp **** char cbuf[BUFFER_SIZE];
 222:src/kern_interrupts.cpp **** 
 223:src/kern_interrupts.cpp **** void handleInterrupt()
 224:src/kern_interrupts.cpp **** {
 1075              		.loc 1 224 1 is_stmt 1
 1076              		.cfi_startproc
 1077 03fc 130101FB 		addi	sp,sp,-80
 1078              		.cfi_def_cfa_offset 80
 1079 0400 23341104 		sd	ra,72(sp)
 1080 0404 23308104 		sd	s0,64(sp)
 1081 0408 233C9102 		sd	s1,56(sp)
 1082              		.cfi_offset 1, -8
 1083              		.cfi_offset 8, -16
 1084              		.cfi_offset 9, -24
 1085 040c 13040105 		addi	s0,sp,80
 1086              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccYYKFl0.s 			page 32


 225:src/kern_interrupts.cpp ****     uint64 scause = r_scause();
 1087              		.loc 1 225 5
 1088              	.LBB196:
 1089              	.LBB197:
  65:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1090              		.loc 2 65 5
  66:src/../h/kern_reg_util.h ****     return scause;
 1091              		.loc 2 66 5
  66:src/../h/kern_reg_util.h ****     return scause;
 1092              		.loc 2 66 72 is_stmt 0
 1093              	#APP
 1094              	# 66 "src/../h/kern_reg_util.h" 1
 1095              		csrr a5, scause
 1096              	# 0 "" 2
 1097              	#NO_APP
 1098 0414 2334F4FC 		sd	a5,-56(s0)
  67:src/../h/kern_reg_util.h **** }
 1099              		.loc 2 67 5 is_stmt 1
  67:src/../h/kern_reg_util.h **** }
 1100              		.loc 2 67 12 is_stmt 0
 1101 0418 033784FC 		ld	a4,-56(s0)
 1102              	.LVL75:
 1103              	.LBE197:
 1104              	.LBE196:
 226:src/kern_interrupts.cpp ****     if (scause == INTR_TIMER)
 1105              		.loc 1 226 5 is_stmt 1
 1106              	.LBB198:
 1107 041c 9307F0FF 		li	a5,-1
 1108 0420 9397F703 		slli	a5,a5,63
 1109 0424 93871700 		addi	a5,a5,1
 1110 0428 6308F702 		beq	a4,a5,.L33
 1111              	.LBE198:
 227:src/kern_interrupts.cpp ****     {
 228:src/kern_interrupts.cpp ****         SYSTEM_TIME++;
 229:src/kern_interrupts.cpp ****         mc_sip(SIP_SSIP);
 230:src/kern_interrupts.cpp **** 
 231:src/kern_interrupts.cpp **** 
 232:src/kern_interrupts.cpp ****         kern_thread_wakeup(SYSTEM_TIME);
 233:src/kern_interrupts.cpp **** 
 234:src/kern_interrupts.cpp ****         if(SYSTEM_TIME>=running->endTime){
 235:src/kern_interrupts.cpp ****             uint64 volatile sstatus = r_sstatus();
 236:src/kern_interrupts.cpp ****             uint64 volatile v_sepc = r_sepc();
 237:src/kern_interrupts.cpp ****             kern_thread_dispatch();
 238:src/kern_interrupts.cpp ****             w_sstatus(sstatus);
 239:src/kern_interrupts.cpp ****             w_sepc(v_sepc);
 240:src/kern_interrupts.cpp ****             running->endTime=SYSTEM_TIME+running->timeslice;
 241:src/kern_interrupts.cpp ****         }
 242:src/kern_interrupts.cpp ****     }
 243:src/kern_interrupts.cpp ****     else if (scause == INTR_CONSOLE)
 1112              		.loc 1 243 10
 1113              	.LBB216:
 1114              	.LBB199:
 1115 042c 9307F0FF 		li	a5,-1
 1116 0430 9397F703 		slli	a5,a5,63
 1117 0434 93879700 		addi	a5,a5,9
 1118 0438 630CF70A 		beq	a4,a5,.L34
 244:src/kern_interrupts.cpp ****     {
GAS LISTING /tmp/ccYYKFl0.s 			page 33


 245:src/kern_interrupts.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 246:src/kern_interrupts.cpp ****         int irq = plic_claim();
 247:src/kern_interrupts.cpp ****         if(irq==CONSOLE_IRQ) {
 248:src/kern_interrupts.cpp ****             kern_uart_handler();
 249:src/kern_interrupts.cpp ****         }
 250:src/kern_interrupts.cpp ****         plic_complete(irq);
 251:src/kern_interrupts.cpp ****         // console_handler();
 252:src/kern_interrupts.cpp ****     }
 253:src/kern_interrupts.cpp ****     else if(scause == INTR_ILLEGAL_INSTRUCTION)
 1119              		.loc 1 253 10
 1120 043c 93072000 		li	a5,2
 1121 0440 6300F70E 		beq	a4,a5,.L35
 1122              	.LVL76:
 1123              	.L27:
 1124              	.LBE199:
 1125              	.LBE216:
 254:src/kern_interrupts.cpp ****     {
 255:src/kern_interrupts.cpp ****         // unexpected trap cause
 256:src/kern_interrupts.cpp ****         kern_mem_free((void*)running->stack_space);
 257:src/kern_interrupts.cpp ****         kern_thread_end_running();
 258:src/kern_interrupts.cpp ****     }
 259:src/kern_interrupts.cpp ****     else if(scause == INTR_ILLEGAL_ADDR_RD)
 260:src/kern_interrupts.cpp ****     {
 261:src/kern_interrupts.cpp **** 
 262:src/kern_interrupts.cpp ****     }
 263:src/kern_interrupts.cpp ****     else if(scause==INTR_ILLEGAL_ADDR_WR){
 264:src/kern_interrupts.cpp **** 
 265:src/kern_interrupts.cpp ****     }
 266:src/kern_interrupts.cpp **** }
 1126              		.loc 1 266 1 is_stmt 0
 1127 0444 83308104 		ld	ra,72(sp)
 1128              		.cfi_remember_state
 1129              		.cfi_restore 1
 1130 0448 03340104 		ld	s0,64(sp)
 1131              		.cfi_restore 8
 1132              		.cfi_def_cfa 2, 80
 1133 044c 83348103 		ld	s1,56(sp)
 1134              		.cfi_restore 9
 1135 0450 13010105 		addi	sp,sp,80
 1136              		.cfi_def_cfa_offset 0
 1137 0454 67800000 		jr	ra
 1138              	.LVL77:
 1139              	.L33:
 1140              		.cfi_restore_state
 1141              	.LBB217:
 1142              	.LBB202:
 228:src/kern_interrupts.cpp ****         mc_sip(SIP_SSIP);
 1143              		.loc 1 228 9 is_stmt 1
 228:src/kern_interrupts.cpp ****         mc_sip(SIP_SSIP);
 1144              		.loc 1 228 20 is_stmt 0
 1145 0458 97040000 		lla	s1,.LANCHOR0
 1145      93840400 
 1146 0460 03B50400 		ld	a0,0(s1)
 1147 0464 13051500 		addi	a0,a0,1
 1148 0468 23B0A400 		sd	a0,0(s1)
 229:src/kern_interrupts.cpp **** 
 1149              		.loc 1 229 9 is_stmt 1
GAS LISTING /tmp/ccYYKFl0.s 			page 34


 1150              	.LVL78:
 1151              	.LBB203:
 1152              	.LBB204:
 118:src/../h/kern_reg_util.h **** }
 1153              		.loc 2 118 5
 118:src/../h/kern_reg_util.h **** }
 1154              		.loc 2 118 64 is_stmt 0
 1155 046c 93072000 		li	a5,2
 1156              	#APP
 1157              	# 118 "src/../h/kern_reg_util.h" 1
 1158              		csrc sip, a5
 1159              	# 0 "" 2
 1160              	.LVL79:
 1161              	#NO_APP
 1162              	.LBE204:
 1163              	.LBE203:
 232:src/kern_interrupts.cpp **** 
 1164              		.loc 1 232 9 is_stmt 1
 232:src/kern_interrupts.cpp **** 
 1165              		.loc 1 232 27 is_stmt 0
 1166 0474 97000000 		call	_Z18kern_thread_wakeupm@plt
 1166      E7800000 
 1167              	.LVL80:
 234:src/kern_interrupts.cpp ****             uint64 volatile sstatus = r_sstatus();
 1168              		.loc 1 234 9 is_stmt 1
 1169              	.LBB205:
 234:src/kern_interrupts.cpp ****             uint64 volatile sstatus = r_sstatus();
 1170              		.loc 1 234 34 is_stmt 0
 1171 047c 97070000 		la	a5,running
 1171      83B70700 
 1172 0484 83B70700 		ld	a5,0(a5)
 1173 0488 03B78703 		ld	a4,56(a5)
 234:src/kern_interrupts.cpp ****             uint64 volatile sstatus = r_sstatus();
 1174              		.loc 1 234 23
 1175 048c 83B70400 		ld	a5,0(s1)
 234:src/kern_interrupts.cpp ****             uint64 volatile sstatus = r_sstatus();
 1176              		.loc 1 234 9
 1177 0490 E3EAE7FA 		bgtu	a4,a5,.L27
 1178              	.LBB206:
 235:src/kern_interrupts.cpp ****             uint64 volatile v_sepc = r_sepc();
 1179              		.loc 1 235 13 is_stmt 1
 1180              	.LBB207:
 1181              	.LBB208:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1182              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 1183              		.loc 2 146 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 1184              		.loc 2 146 76 is_stmt 0
 1185              	#APP
 1186              	# 146 "src/../h/kern_reg_util.h" 1
 1187              		csrr a5, sstatus
 1188              	# 0 "" 2
 1189              	#NO_APP
 1190 0498 233CF4FC 		sd	a5,-40(s0)
 147:src/../h/kern_reg_util.h **** }
 1191              		.loc 2 147 5 is_stmt 1
GAS LISTING /tmp/ccYYKFl0.s 			page 35


 147:src/../h/kern_reg_util.h **** }
 1192              		.loc 2 147 12 is_stmt 0
 1193 049c 833784FD 		ld	a5,-40(s0)
 1194              	.LBE208:
 1195              	.LBE207:
 235:src/kern_interrupts.cpp ****             uint64 volatile v_sepc = r_sepc();
 1196              		.loc 1 235 49
 1197 04a0 233CF4FA 		sd	a5,-72(s0)
 236:src/kern_interrupts.cpp ****             kern_thread_dispatch();
 1198              		.loc 1 236 13 is_stmt 1
 1199              	.LBB209:
 1200              	.LBB210:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1201              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 1202              		.loc 2 78 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 1203              		.loc 2 78 64 is_stmt 0
 1204              	#APP
 1205              	# 78 "src/../h/kern_reg_util.h" 1
 1206              		csrr a5, sepc
 1207              	# 0 "" 2
 1208              	#NO_APP
 1209 04a8 2338F4FC 		sd	a5,-48(s0)
  79:src/../h/kern_reg_util.h **** }
 1210              		.loc 2 79 5 is_stmt 1
  79:src/../h/kern_reg_util.h **** }
 1211              		.loc 2 79 12 is_stmt 0
 1212 04ac 833704FD 		ld	a5,-48(s0)
 1213              	.LBE210:
 1214              	.LBE209:
 236:src/kern_interrupts.cpp ****             kern_thread_dispatch();
 1215              		.loc 1 236 45
 1216 04b0 2330F4FC 		sd	a5,-64(s0)
 237:src/kern_interrupts.cpp ****             w_sstatus(sstatus);
 1217              		.loc 1 237 13 is_stmt 1
 237:src/kern_interrupts.cpp ****             w_sstatus(sstatus);
 1218              		.loc 1 237 33 is_stmt 0
 1219 04b4 97000000 		call	_Z20kern_thread_dispatchv@plt
 1219      E7800000 
 1220              	.LVL81:
 238:src/kern_interrupts.cpp ****             w_sepc(v_sepc);
 1221              		.loc 1 238 13 is_stmt 1
 238:src/kern_interrupts.cpp ****             w_sepc(v_sepc);
 1222              		.loc 1 238 22 is_stmt 0
 1223 04bc 833784FB 		ld	a5,-72(s0)
 1224              	.LVL82:
 1225              	.LBB211:
 1226              	.LBB212:
 152:src/../h/kern_reg_util.h **** }
 1227              		.loc 2 152 5 is_stmt 1
 152:src/../h/kern_reg_util.h **** }
 1228              		.loc 2 152 77 is_stmt 0
 1229              	#APP
 1230              	# 152 "src/../h/kern_reg_util.h" 1
 1231              		csrw sstatus, a5
 1232              	# 0 "" 2
GAS LISTING /tmp/ccYYKFl0.s 			page 36


 1233              	.LVL83:
 1234              	#NO_APP
 1235              	.LBE212:
 1236              	.LBE211:
 239:src/kern_interrupts.cpp ****             running->endTime=SYSTEM_TIME+running->timeslice;
 1237              		.loc 1 239 13 is_stmt 1
 239:src/kern_interrupts.cpp ****             running->endTime=SYSTEM_TIME+running->timeslice;
 1238              		.loc 1 239 19 is_stmt 0
 1239 04c4 833704FC 		ld	a5,-64(s0)
 1240              	.LVL84:
 1241              	.LBB213:
 1242              	.LBB214:
  84:src/../h/kern_reg_util.h **** }
 1243              		.loc 2 84 5 is_stmt 1
  84:src/../h/kern_reg_util.h **** }
 1244              		.loc 2 84 65 is_stmt 0
 1245              	#APP
 1246              	# 84 "src/../h/kern_reg_util.h" 1
 1247              		csrw sepc, a5
 1248              	# 0 "" 2
 1249              	.LVL85:
 1250              	#NO_APP
 1251              	.LBE214:
 1252              	.LBE213:
 240:src/kern_interrupts.cpp ****         }
 1253              		.loc 1 240 13 is_stmt 1
 240:src/kern_interrupts.cpp ****         }
 1254              		.loc 1 240 51 is_stmt 0
 1255 04cc 97070000 		la	a5,running
 1255      83B70700 
 1256 04d4 03B70700 		ld	a4,0(a5)
 1257 04d8 83370703 		ld	a5,48(a4)
 240:src/kern_interrupts.cpp ****         }
 1258              		.loc 1 240 41
 1259 04dc 97060000 		ld	a3,.LANCHOR0
 1259      83B60600 
 1260 04e4 B387D700 		add	a5,a5,a3
 240:src/kern_interrupts.cpp ****         }
 1261              		.loc 1 240 29
 1262 04e8 233CF702 		sd	a5,56(a4)
 1263              	.LBE206:
 1264 04ec 6FF09FF5 		j	.L27
 1265              	.LVL86:
 1266              	.L34:
 1267              	.LBE205:
 1268              	.LBE202:
 1269              	.LBB215:
 1270              	.LBB200:
 246:src/kern_interrupts.cpp ****         if(irq==CONSOLE_IRQ) {
 1271              		.loc 1 246 9 is_stmt 1
 246:src/kern_interrupts.cpp ****         if(irq==CONSOLE_IRQ) {
 1272              		.loc 1 246 29 is_stmt 0
 1273 04f0 97000000 		call	plic_claim@plt
 1273      E7800000 
 1274              	.LVL87:
 1275 04f8 93040500 		mv	s1,a0
 1276              	.LVL88:
GAS LISTING /tmp/ccYYKFl0.s 			page 37


 247:src/kern_interrupts.cpp ****             kern_uart_handler();
 1277              		.loc 1 247 9 is_stmt 1
 1278 04fc 9307A000 		li	a5,10
 1279 0500 630AF500 		beq	a0,a5,.L36
 1280              	.LVL89:
 1281              	.L31:
 250:src/kern_interrupts.cpp ****         // console_handler();
 1282              		.loc 1 250 9
 250:src/kern_interrupts.cpp ****         // console_handler();
 1283              		.loc 1 250 22 is_stmt 0
 1284 0504 13850400 		mv	a0,s1
 1285 0508 97000000 		call	plic_complete@plt
 1285      E7800000 
 1286              	.LVL90:
 1287              	.LBE200:
 1288 0510 6FF05FF3 		j	.L27
 1289              	.LVL91:
 1290              	.L36:
 1291              	.LBB201:
 248:src/kern_interrupts.cpp ****         }
 1292              		.loc 1 248 13 is_stmt 1
 248:src/kern_interrupts.cpp ****         }
 1293              		.loc 1 248 30 is_stmt 0
 1294 0514 97000000 		call	_Z17kern_uart_handlerv@plt
 1294      E7800000 
 1295              	.LVL92:
 1296 051c 6FF09FFE 		j	.L31
 1297              	.LVL93:
 1298              	.L35:
 1299              	.LBE201:
 256:src/kern_interrupts.cpp ****         kern_thread_end_running();
 1300              		.loc 1 256 9 is_stmt 1
 256:src/kern_interrupts.cpp ****         kern_thread_end_running();
 1301              		.loc 1 256 39 is_stmt 0
 1302 0520 97070000 		la	a5,running
 1302      83B70700 
 1303 0528 83B70700 		ld	a5,0(a5)
 256:src/kern_interrupts.cpp ****         kern_thread_end_running();
 1304              		.loc 1 256 22
 1305 052c 03B50704 		ld	a0,64(a5)
 1306 0530 97000000 		call	_Z13kern_mem_freePv@plt
 1306      E7800000 
 1307              	.LVL94:
 257:src/kern_interrupts.cpp ****     }
 1308              		.loc 1 257 9 is_stmt 1
 257:src/kern_interrupts.cpp ****     }
 1309              		.loc 1 257 32 is_stmt 0
 1310 0538 97000000 		call	_Z23kern_thread_end_runningv@plt
 1310      E7800000 
 1311              	.LVL95:
 1312              	.LBE215:
 1313              	.LBE217:
 1314              		.loc 1 266 1
 1315 0540 6FF05FF0 		j	.L27
 1316              		.cfi_endproc
 1317              	.LFE25:
 1319              		.globl	cbuf
GAS LISTING /tmp/ccYYKFl0.s 			page 38


 1320              		.globl	counter
 1321              		.globl	SYSTEM_TIME
 1322              		.bss
 1323              		.align	3
 1324              		.set	.LANCHOR0,. + 0
 1327              	SYSTEM_TIME:
 1328 0000 00000000 		.zero	8
 1328      00000000 
 1331              	cbuf:
 1332 0008 00000000 		.zero	1024
 1332      00000000 
 1332      00000000 
 1332      00000000 
 1332      00000000 
 1335              	counter:
 1336 0408 00000000 		.zero	4
 1337              		.text
 1338              	.Letext0:
 1339              		.file 3 "src/../lib/hw.h"
 1340              		.file 4 "src/../h/kern_interrupts.hpp"
 1341              		.file 5 "src/../h/kern_threads.hpp"
 1342              		.file 6 "src/../h/syscall_c.h"
 1343              		.file 7 "src/../h/kern_semaphore.hpp"
 1344              		.file 8 "src/../h/kern_console.hpp"
 1345              		.file 9 "src/../h/kern_memory.hpp"
GAS LISTING /tmp/ccYYKFl0.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kern_interrupts.cpp
     /tmp/ccYYKFl0.s:9      .text:0000000000000000 _Z19kern_interrupt_initv
     /tmp/ccYYKFl0.s:13     .text:0000000000000000 .L0 
     /tmp/ccYYKFl0.s:14     .text:0000000000000000 .L0 
     /tmp/ccYYKFl0.s:15     .text:0000000000000004 .L0 
     /tmp/ccYYKFl0.s:17     .text:0000000000000008 .L0 
     /tmp/ccYYKFl0.s:19     .text:000000000000000c .L0 
     /tmp/ccYYKFl0.s:21     .text:000000000000000c .L0 
     /tmp/ccYYKFl0.s:22     .text:000000000000000c .L0 
     /tmp/ccYYKFl0.s:24     .text:0000000000000014 .L0 
     /tmp/ccYYKFl0.s:25     .text:0000000000000014 .L0 
     /tmp/ccYYKFl0.s:31     .text:000000000000001c .L0 
src/../h/kern_reg_util.h:96     .text:000000000000001c .L0 
     /tmp/ccYYKFl0.s:43     .text:0000000000000020 .L0 
     /tmp/ccYYKFl0.s:44     .text:0000000000000020 .L0 
     /tmp/ccYYKFl0.s:45     .text:0000000000000020 .L0 
     /tmp/ccYYKFl0.s:55     .text:0000000000000028 .L0 
     /tmp/ccYYKFl0.s:56     .text:000000000000002c .L0 
     /tmp/ccYYKFl0.s:57     .text:000000000000002c .L0 
     /tmp/ccYYKFl0.s:59     .text:0000000000000030 .L0 
     /tmp/ccYYKFl0.s:61     .text:0000000000000034 .L0 
     /tmp/ccYYKFl0.s:67     .text:0000000000000034 _Z12kern_syscall13SyscallNumberz
     /tmp/ccYYKFl0.s:70     .text:0000000000000034 .L0 
     /tmp/ccYYKFl0.s:72     .text:0000000000000034 .L0 
     /tmp/ccYYKFl0.s:73     .text:0000000000000038 .L0 
     /tmp/ccYYKFl0.s:75     .text:000000000000003c .L0 
     /tmp/ccYYKFl0.s:77     .text:0000000000000040 .L0 
     /tmp/ccYYKFl0.s:86     .text:000000000000005c .L0 
src/kern_interrupts.cpp:46     .text:000000000000005c .L0 
     /tmp/ccYYKFl0.s:92     .text:0000000000000060 .L0 
     /tmp/ccYYKFl0.s:94     .text:0000000000000060 .L0 
     /tmp/ccYYKFl0.s:95     .text:0000000000000064 .L0 
     /tmp/ccYYKFl0.s:96     .text:0000000000000064 .L0 
     /tmp/ccYYKFl0.s:98     .text:0000000000000068 .L0 
     /tmp/ccYYKFl0.s:100    .text:000000000000006c .L0 
     /tmp/ccYYKFl0.s:106    .text:000000000000006c handleEcall
     /tmp/ccYYKFl0.s:109    .text:000000000000006c .L0 
     /tmp/ccYYKFl0.s:111    .text:000000000000006c .L0 
     /tmp/ccYYKFl0.s:112    .text:0000000000000070 .L0 
     /tmp/ccYYKFl0.s:117    .text:0000000000000080 .L0 
     /tmp/ccYYKFl0.s:118    .text:0000000000000080 .L0 
     /tmp/ccYYKFl0.s:119    .text:0000000000000080 .L0 
     /tmp/ccYYKFl0.s:120    .text:0000000000000080 .L0 
     /tmp/ccYYKFl0.s:122    .text:0000000000000084 .L0 
     /tmp/ccYYKFl0.s:129    .text:000000000000008c .L0 
     /tmp/ccYYKFl0.s:130    .text:000000000000008c .L0 
     /tmp/ccYYKFl0.s:131    .text:000000000000008c .L0 
src/../h/kern_reg_util.h:66     .text:000000000000008c .L0 
     /tmp/ccYYKFl0.s:139    .text:0000000000000094 .L0 
     /tmp/ccYYKFl0.s:140    .text:0000000000000094 .L0 
     /tmp/ccYYKFl0.s:146    .text:0000000000000098 .L0 
     /tmp/ccYYKFl0.s:147    .text:0000000000000098 .L0 
     /tmp/ccYYKFl0.s:150    .text:000000000000009c .L0 
     /tmp/ccYYKFl0.s:157    .text:00000000000000a4 .L0 
     /tmp/ccYYKFl0.s:158    .text:00000000000000a8 .L0 
     /tmp/ccYYKFl0.s:159    .text:00000000000000a8 .L0 
GAS LISTING /tmp/ccYYKFl0.s 			page 40


     /tmp/ccYYKFl0.s:161    .text:00000000000000ac .L0 
     /tmp/ccYYKFl0.s:162    .text:00000000000000ac .L0 
     /tmp/ccYYKFl0.s:164    .text:00000000000000b0 .L0 
     /tmp/ccYYKFl0.s:166    .text:00000000000000b4 .L0 
     /tmp/ccYYKFl0.s:168    .text:00000000000000b8 .L0 
     /tmp/ccYYKFl0.s:172    .text:00000000000000bc .L0 
     /tmp/ccYYKFl0.s:177    .text:00000000000000c0 .L0 
     /tmp/ccYYKFl0.s:179    .text:00000000000000c0 .L0 
     /tmp/ccYYKFl0.s:182    .text:00000000000000c0 .L0 
     /tmp/ccYYKFl0.s:183    .text:00000000000000c0 .L0 
     /tmp/ccYYKFl0.s:184    .text:00000000000000c0 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000000c0 .L0 
     /tmp/ccYYKFl0.s:193    .text:00000000000000c8 .L0 
     /tmp/ccYYKFl0.s:194    .text:00000000000000c8 .L0 
     /tmp/ccYYKFl0.s:198    .text:00000000000000cc .L0 
     /tmp/ccYYKFl0.s:201    .text:00000000000000d0 .L0 
     /tmp/ccYYKFl0.s:202    .text:00000000000000d0 .L0 
     /tmp/ccYYKFl0.s:205    .text:00000000000000d8 .L0 
     /tmp/ccYYKFl0.s:206    .text:00000000000000d8 .L0 
     /tmp/ccYYKFl0.s:209    .text:00000000000000d8 .L0 
     /tmp/ccYYKFl0.s:210    .text:00000000000000d8 .L0 
src/../h/kern_reg_util.h:84     .text:00000000000000d8 .L0 
     /tmp/ccYYKFl0.s:220    .text:00000000000000dc .L0 
     /tmp/ccYYKFl0.s:305    .text:0000000000000100 .L0 
     /tmp/ccYYKFl0.s:307    .text:0000000000000100 .L0 
     /tmp/ccYYKFl0.s:309    .text:0000000000000100 .L0 
     /tmp/ccYYKFl0.s:310    .text:0000000000000100 .L0 
     /tmp/ccYYKFl0.s:311    .text:0000000000000100 .L0 
     /tmp/ccYYKFl0.s:317    .text:000000000000010c .L0 
     /tmp/ccYYKFl0.s:318    .text:000000000000010c .L0 
src/../h/kern_reg_util.h:32     .text:000000000000010c .L0 
     /tmp/ccYYKFl0.s:325    .text:0000000000000110 .L0 
     /tmp/ccYYKFl0.s:332    .text:0000000000000114 .L0 
     /tmp/ccYYKFl0.s:334    .text:0000000000000114 .L0 
     /tmp/ccYYKFl0.s:335    .text:0000000000000114 .L0 
     /tmp/ccYYKFl0.s:336    .text:0000000000000114 .L0 
     /tmp/ccYYKFl0.s:337    .text:0000000000000114 .L0 
     /tmp/ccYYKFl0.s:343    .text:0000000000000120 .L0 
     /tmp/ccYYKFl0.s:344    .text:0000000000000120 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000120 .L0 
     /tmp/ccYYKFl0.s:351    .text:0000000000000124 .L0 
     /tmp/ccYYKFl0.s:358    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:360    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:361    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:362    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:363    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:364    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:365    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:366    .text:0000000000000128 .L0 
     /tmp/ccYYKFl0.s:373    .text:000000000000013c .L0 
     /tmp/ccYYKFl0.s:374    .text:000000000000013c .L0 
     /tmp/ccYYKFl0.s:376    .text:0000000000000140 .L0 
     /tmp/ccYYKFl0.s:379    .text:000000000000014c .L0 
     /tmp/ccYYKFl0.s:384    .text:0000000000000150 .L0 
     /tmp/ccYYKFl0.s:385    .text:0000000000000150 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000150 .L0 
     /tmp/ccYYKFl0.s:392    .text:0000000000000154 .L0 
GAS LISTING /tmp/ccYYKFl0.s 			page 41


     /tmp/ccYYKFl0.s:399    .text:0000000000000158 .L0 
     /tmp/ccYYKFl0.s:401    .text:0000000000000158 .L0 
     /tmp/ccYYKFl0.s:404    .text:0000000000000158 .L0 
     /tmp/ccYYKFl0.s:405    .text:0000000000000158 .L0 
     /tmp/ccYYKFl0.s:406    .text:0000000000000158 .L0 
src/../h/kern_reg_util.h:146    .text:0000000000000158 .L0 
     /tmp/ccYYKFl0.s:414    .text:0000000000000160 .L0 
     /tmp/ccYYKFl0.s:415    .text:0000000000000160 .L0 
     /tmp/ccYYKFl0.s:419    .text:0000000000000164 .L0 
     /tmp/ccYYKFl0.s:423    .text:0000000000000168 .L0 
     /tmp/ccYYKFl0.s:424    .text:0000000000000168 .L0 
     /tmp/ccYYKFl0.s:425    .text:0000000000000168 .L0 
src/../h/kern_reg_util.h:78     .text:0000000000000168 .L0 
     /tmp/ccYYKFl0.s:433    .text:0000000000000170 .L0 
     /tmp/ccYYKFl0.s:434    .text:0000000000000170 .L0 
     /tmp/ccYYKFl0.s:438    .text:0000000000000174 .L0 
     /tmp/ccYYKFl0.s:440    .text:0000000000000178 .L0 
     /tmp/ccYYKFl0.s:441    .text:0000000000000178 .L0 
     /tmp/ccYYKFl0.s:444    .text:0000000000000180 .L0 
     /tmp/ccYYKFl0.s:445    .text:0000000000000180 .L0 
     /tmp/ccYYKFl0.s:450    .text:0000000000000184 .L0 
src/../h/kern_reg_util.h:152    .text:0000000000000184 .L0 
     /tmp/ccYYKFl0.s:460    .text:0000000000000188 .L0 
     /tmp/ccYYKFl0.s:461    .text:0000000000000188 .L0 
     /tmp/ccYYKFl0.s:466    .text:000000000000018c .L0 
src/../h/kern_reg_util.h:84     .text:000000000000018c .L0 
     /tmp/ccYYKFl0.s:476    .text:0000000000000190 .L0 
     /tmp/ccYYKFl0.s:477    .text:0000000000000190 .L0 
     /tmp/ccYYKFl0.s:481    .text:00000000000001a0 .L0 
     /tmp/ccYYKFl0.s:484    .text:00000000000001ac .L0 
     /tmp/ccYYKFl0.s:486    .text:00000000000001b0 .L0 
     /tmp/ccYYKFl0.s:491    .text:00000000000001b4 .L0 
     /tmp/ccYYKFl0.s:493    .text:00000000000001b4 .L0 
     /tmp/ccYYKFl0.s:494    .text:00000000000001b4 .L0 
     /tmp/ccYYKFl0.s:497    .text:00000000000001b4 .L0 
     /tmp/ccYYKFl0.s:498    .text:00000000000001b4 .L0 
     /tmp/ccYYKFl0.s:499    .text:00000000000001b4 .L0 
src/../h/kern_reg_util.h:146    .text:00000000000001b4 .L0 
     /tmp/ccYYKFl0.s:507    .text:00000000000001bc .L0 
     /tmp/ccYYKFl0.s:508    .text:00000000000001bc .L0 
     /tmp/ccYYKFl0.s:512    .text:00000000000001c0 .L0 
     /tmp/ccYYKFl0.s:516    .text:00000000000001c4 .L0 
     /tmp/ccYYKFl0.s:517    .text:00000000000001c4 .L0 
     /tmp/ccYYKFl0.s:518    .text:00000000000001c4 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000001c4 .L0 
     /tmp/ccYYKFl0.s:526    .text:00000000000001cc .L0 
     /tmp/ccYYKFl0.s:527    .text:00000000000001cc .L0 
     /tmp/ccYYKFl0.s:531    .text:00000000000001d0 .L0 
     /tmp/ccYYKFl0.s:533    .text:00000000000001d4 .L0 
     /tmp/ccYYKFl0.s:534    .text:00000000000001d4 .L0 
     /tmp/ccYYKFl0.s:538    .text:00000000000001e0 .L0 
     /tmp/ccYYKFl0.s:539    .text:00000000000001e0 .L0 
     /tmp/ccYYKFl0.s:544    .text:00000000000001e4 .L0 
src/../h/kern_reg_util.h:152    .text:00000000000001e4 .L0 
     /tmp/ccYYKFl0.s:554    .text:00000000000001e8 .L0 
     /tmp/ccYYKFl0.s:555    .text:00000000000001e8 .L0 
     /tmp/ccYYKFl0.s:560    .text:00000000000001ec .L0 
GAS LISTING /tmp/ccYYKFl0.s 			page 42


src/../h/kern_reg_util.h:84     .text:00000000000001ec .L0 
     /tmp/ccYYKFl0.s:570    .text:00000000000001f0 .L0 
     /tmp/ccYYKFl0.s:571    .text:00000000000001f0 .L0 
     /tmp/ccYYKFl0.s:575    .text:0000000000000200 .L0 
     /tmp/ccYYKFl0.s:578    .text:000000000000020c .L0 
     /tmp/ccYYKFl0.s:580    .text:0000000000000210 .L0 
     /tmp/ccYYKFl0.s:585    .text:0000000000000214 .L0 
     /tmp/ccYYKFl0.s:586    .text:0000000000000214 .L0 
     /tmp/ccYYKFl0.s:587    .text:0000000000000214 .L0 
     /tmp/ccYYKFl0.s:588    .text:0000000000000214 .L0 
     /tmp/ccYYKFl0.s:592    .text:000000000000021c .L0 
     /tmp/ccYYKFl0.s:594    .text:000000000000021c .L0 
     /tmp/ccYYKFl0.s:595    .text:000000000000021c .L0 
     /tmp/ccYYKFl0.s:596    .text:000000000000021c .L0 
     /tmp/ccYYKFl0.s:597    .text:000000000000021c .L0 
     /tmp/ccYYKFl0.s:598    .text:000000000000021c .L0 
     /tmp/ccYYKFl0.s:605    .text:000000000000022c .L0 
     /tmp/ccYYKFl0.s:606    .text:000000000000022c .L0 
src/../h/kern_reg_util.h:32     .text:000000000000022c .L0 
     /tmp/ccYYKFl0.s:613    .text:0000000000000230 .L0 
     /tmp/ccYYKFl0.s:620    .text:0000000000000234 .L0 
     /tmp/ccYYKFl0.s:622    .text:0000000000000234 .L0 
     /tmp/ccYYKFl0.s:623    .text:0000000000000234 .L0 
     /tmp/ccYYKFl0.s:624    .text:0000000000000234 .L0 
     /tmp/ccYYKFl0.s:625    .text:0000000000000234 .L0 
     /tmp/ccYYKFl0.s:631    .text:0000000000000240 .L0 
     /tmp/ccYYKFl0.s:632    .text:0000000000000240 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000240 .L0 
     /tmp/ccYYKFl0.s:639    .text:0000000000000244 .L0 
     /tmp/ccYYKFl0.s:646    .text:0000000000000248 .L0 
     /tmp/ccYYKFl0.s:648    .text:0000000000000248 .L0 
     /tmp/ccYYKFl0.s:649    .text:0000000000000248 .L0 
     /tmp/ccYYKFl0.s:650    .text:0000000000000248 .L0 
     /tmp/ccYYKFl0.s:651    .text:0000000000000248 .L0 
     /tmp/ccYYKFl0.s:655    .text:0000000000000254 .L0 
     /tmp/ccYYKFl0.s:658    .text:0000000000000254 .L0 
     /tmp/ccYYKFl0.s:659    .text:0000000000000254 .L0 
     /tmp/ccYYKFl0.s:660    .text:0000000000000254 .L0 
     /tmp/ccYYKFl0.s:667    .text:000000000000025c .L0 
     /tmp/ccYYKFl0.s:674    .text:0000000000000260 .L0 
     /tmp/ccYYKFl0.s:676    .text:0000000000000260 .L0 
     /tmp/ccYYKFl0.s:677    .text:0000000000000260 .L0 
     /tmp/ccYYKFl0.s:678    .text:0000000000000260 .L0 
     /tmp/ccYYKFl0.s:679    .text:0000000000000260 .L0 
     /tmp/ccYYKFl0.s:683    .text:000000000000026c .L0 
     /tmp/ccYYKFl0.s:686    .text:0000000000000274 .L0 
     /tmp/ccYYKFl0.s:687    .text:0000000000000274 .L0 
     /tmp/ccYYKFl0.s:691    .text:0000000000000284 .L0 
     /tmp/ccYYKFl0.s:694    .text:0000000000000290 .L0 
     /tmp/ccYYKFl0.s:700    .text:0000000000000294 .L0 
     /tmp/ccYYKFl0.s:701    .text:0000000000000294 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000294 .L0 
     /tmp/ccYYKFl0.s:708    .text:0000000000000298 .L0 
     /tmp/ccYYKFl0.s:714    .text:000000000000029c .L0 
     /tmp/ccYYKFl0.s:721    .text:00000000000002a4 .L0 
     /tmp/ccYYKFl0.s:723    .text:00000000000002a4 .L0 
     /tmp/ccYYKFl0.s:724    .text:00000000000002a4 .L0 
GAS LISTING /tmp/ccYYKFl0.s 			page 43


     /tmp/ccYYKFl0.s:725    .text:00000000000002a4 .L0 
     /tmp/ccYYKFl0.s:726    .text:00000000000002a4 .L0 
     /tmp/ccYYKFl0.s:730    .text:00000000000002b0 .L0 
     /tmp/ccYYKFl0.s:734    .text:00000000000002b8 .L0 
     /tmp/ccYYKFl0.s:735    .text:00000000000002b8 .L0 
     /tmp/ccYYKFl0.s:738    .text:00000000000002bc .L0 
     /tmp/ccYYKFl0.s:742    .text:00000000000002c0 .L0 
     /tmp/ccYYKFl0.s:743    .text:00000000000002c0 .L0 
     /tmp/ccYYKFl0.s:744    .text:00000000000002c0 .L0 
src/../h/kern_reg_util.h:146    .text:00000000000002c0 .L0 
     /tmp/ccYYKFl0.s:752    .text:00000000000002c8 .L0 
     /tmp/ccYYKFl0.s:753    .text:00000000000002c8 .L0 
     /tmp/ccYYKFl0.s:757    .text:00000000000002cc .L0 
     /tmp/ccYYKFl0.s:761    .text:00000000000002d0 .L0 
     /tmp/ccYYKFl0.s:762    .text:00000000000002d0 .L0 
     /tmp/ccYYKFl0.s:763    .text:00000000000002d0 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000002d0 .L0 
     /tmp/ccYYKFl0.s:771    .text:00000000000002d8 .L0 
     /tmp/ccYYKFl0.s:772    .text:00000000000002d8 .L0 
     /tmp/ccYYKFl0.s:776    .text:00000000000002dc .L0 
     /tmp/ccYYKFl0.s:778    .text:00000000000002e0 .L0 
     /tmp/ccYYKFl0.s:779    .text:00000000000002e0 .L0 
     /tmp/ccYYKFl0.s:782    .text:00000000000002e8 .L0 
     /tmp/ccYYKFl0.s:783    .text:00000000000002e8 .L0 
     /tmp/ccYYKFl0.s:788    .text:00000000000002ec .L0 
src/../h/kern_reg_util.h:152    .text:00000000000002ec .L0 
     /tmp/ccYYKFl0.s:798    .text:00000000000002f0 .L0 
     /tmp/ccYYKFl0.s:799    .text:00000000000002f0 .L0 
     /tmp/ccYYKFl0.s:804    .text:00000000000002f4 .L0 
src/../h/kern_reg_util.h:84     .text:00000000000002f4 .L0 
     /tmp/ccYYKFl0.s:814    .text:00000000000002f8 .L0 
     /tmp/ccYYKFl0.s:815    .text:00000000000002f8 .L0 
     /tmp/ccYYKFl0.s:816    .text:00000000000002f8 .L0 
     /tmp/ccYYKFl0.s:819    .text:0000000000000300 .L0 
     /tmp/ccYYKFl0.s:822    .text:000000000000030c .L0 
     /tmp/ccYYKFl0.s:824    .text:0000000000000310 .L0 
     /tmp/ccYYKFl0.s:829    .text:0000000000000314 .L0 
     /tmp/ccYYKFl0.s:831    .text:0000000000000314 .L0 
     /tmp/ccYYKFl0.s:832    .text:0000000000000314 .L0 
     /tmp/ccYYKFl0.s:834    .text:0000000000000314 .L0 
     /tmp/ccYYKFl0.s:835    .text:0000000000000314 .L0 
     /tmp/ccYYKFl0.s:836    .text:0000000000000314 .L0 
     /tmp/ccYYKFl0.s:840    .text:000000000000031c .L0 
     /tmp/ccYYKFl0.s:846    .text:0000000000000324 .L0 
     /tmp/ccYYKFl0.s:847    .text:0000000000000324 .L0 
     /tmp/ccYYKFl0.s:848    .text:0000000000000324 .L0 
src/../h/kern_reg_util.h:146    .text:0000000000000324 .L0 
     /tmp/ccYYKFl0.s:856    .text:000000000000032c .L0 
     /tmp/ccYYKFl0.s:857    .text:000000000000032c .L0 
     /tmp/ccYYKFl0.s:861    .text:0000000000000330 .L0 
     /tmp/ccYYKFl0.s:865    .text:0000000000000334 .L0 
     /tmp/ccYYKFl0.s:866    .text:0000000000000334 .L0 
     /tmp/ccYYKFl0.s:867    .text:0000000000000334 .L0 
src/../h/kern_reg_util.h:78     .text:0000000000000334 .L0 
     /tmp/ccYYKFl0.s:875    .text:000000000000033c .L0 
     /tmp/ccYYKFl0.s:876    .text:000000000000033c .L0 
     /tmp/ccYYKFl0.s:880    .text:0000000000000340 .L0 
GAS LISTING /tmp/ccYYKFl0.s 			page 44


     /tmp/ccYYKFl0.s:882    .text:0000000000000344 .L0 
     /tmp/ccYYKFl0.s:883    .text:0000000000000344 .L0 
     /tmp/ccYYKFl0.s:886    .text:000000000000034c .L0 
     /tmp/ccYYKFl0.s:887    .text:000000000000034c .L0 
     /tmp/ccYYKFl0.s:892    .text:0000000000000350 .L0 
src/../h/kern_reg_util.h:152    .text:0000000000000350 .L0 
     /tmp/ccYYKFl0.s:902    .text:0000000000000354 .L0 
     /tmp/ccYYKFl0.s:903    .text:0000000000000354 .L0 
     /tmp/ccYYKFl0.s:908    .text:0000000000000358 .L0 
src/../h/kern_reg_util.h:84     .text:0000000000000358 .L0 
     /tmp/ccYYKFl0.s:918    .text:000000000000035c .L0 
     /tmp/ccYYKFl0.s:919    .text:000000000000035c .L0 
     /tmp/ccYYKFl0.s:923    .text:000000000000036c .L0 
     /tmp/ccYYKFl0.s:926    .text:0000000000000378 .L0 
     /tmp/ccYYKFl0.s:931    .text:000000000000037c .L0 
     /tmp/ccYYKFl0.s:932    .text:000000000000037c .L0 
     /tmp/ccYYKFl0.s:938    .text:0000000000000380 .L0 
     /tmp/ccYYKFl0.s:939    .text:0000000000000380 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000380 .L0 
     /tmp/ccYYKFl0.s:946    .text:0000000000000384 .L0 
     /tmp/ccYYKFl0.s:953    .text:0000000000000388 .L0 
     /tmp/ccYYKFl0.s:955    .text:0000000000000388 .L0 
     /tmp/ccYYKFl0.s:956    .text:0000000000000388 .L0 
     /tmp/ccYYKFl0.s:957    .text:0000000000000388 .L0 
     /tmp/ccYYKFl0.s:961    .text:000000000000038c .L0 
     /tmp/ccYYKFl0.s:963    .text:000000000000038c .L0 
     /tmp/ccYYKFl0.s:964    .text:000000000000038c .L0 
     /tmp/ccYYKFl0.s:965    .text:000000000000038c .L0 
     /tmp/ccYYKFl0.s:970    .text:0000000000000398 .L0 
     /tmp/ccYYKFl0.s:976    .text:00000000000003a0 .L0 
     /tmp/ccYYKFl0.s:977    .text:00000000000003a0 .L0 
     /tmp/ccYYKFl0.s:978    .text:00000000000003a0 .L0 
src/../h/kern_reg_util.h:146    .text:00000000000003a0 .L0 
     /tmp/ccYYKFl0.s:986    .text:00000000000003a8 .L0 
     /tmp/ccYYKFl0.s:987    .text:00000000000003a8 .L0 
     /tmp/ccYYKFl0.s:991    .text:00000000000003ac .L0 
     /tmp/ccYYKFl0.s:995    .text:00000000000003b0 .L0 
     /tmp/ccYYKFl0.s:996    .text:00000000000003b0 .L0 
     /tmp/ccYYKFl0.s:997    .text:00000000000003b0 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000003b0 .L0 
     /tmp/ccYYKFl0.s:1005   .text:00000000000003b8 .L0 
     /tmp/ccYYKFl0.s:1006   .text:00000000000003b8 .L0 
     /tmp/ccYYKFl0.s:1010   .text:00000000000003bc .L0 
     /tmp/ccYYKFl0.s:1012   .text:00000000000003c0 .L0 
     /tmp/ccYYKFl0.s:1013   .text:00000000000003c0 .L0 
     /tmp/ccYYKFl0.s:1016   .text:00000000000003c8 .L0 
     /tmp/ccYYKFl0.s:1017   .text:00000000000003c8 .L0 
     /tmp/ccYYKFl0.s:1022   .text:00000000000003cc .L0 
src/../h/kern_reg_util.h:152    .text:00000000000003cc .L0 
     /tmp/ccYYKFl0.s:1032   .text:00000000000003d0 .L0 
     /tmp/ccYYKFl0.s:1033   .text:00000000000003d0 .L0 
     /tmp/ccYYKFl0.s:1038   .text:00000000000003d4 .L0 
src/../h/kern_reg_util.h:84     .text:00000000000003d4 .L0 
     /tmp/ccYYKFl0.s:1048   .text:00000000000003d8 .L0 
     /tmp/ccYYKFl0.s:1049   .text:00000000000003d8 .L0 
     /tmp/ccYYKFl0.s:1053   .text:00000000000003e8 .L0 
     /tmp/ccYYKFl0.s:1056   .text:00000000000003f4 .L0 
GAS LISTING /tmp/ccYYKFl0.s 			page 45


     /tmp/ccYYKFl0.s:1061   .text:00000000000003f8 .L0 
     /tmp/ccYYKFl0.s:1062   .text:00000000000003f8 .L0 
     /tmp/ccYYKFl0.s:1067   .text:00000000000003fc .L0 
     /tmp/ccYYKFl0.s:1073   .text:00000000000003fc handleInterrupt
     /tmp/ccYYKFl0.s:1076   .text:00000000000003fc .L0 
     /tmp/ccYYKFl0.s:1077   .text:00000000000003fc .L0 
     /tmp/ccYYKFl0.s:1078   .text:0000000000000400 .L0 
     /tmp/ccYYKFl0.s:1082   .text:000000000000040c .L0 
     /tmp/ccYYKFl0.s:1083   .text:000000000000040c .L0 
     /tmp/ccYYKFl0.s:1084   .text:000000000000040c .L0 
     /tmp/ccYYKFl0.s:1086   .text:0000000000000410 .L0 
     /tmp/ccYYKFl0.s:1090   .text:0000000000000410 .L0 
     /tmp/ccYYKFl0.s:1091   .text:0000000000000410 .L0 
     /tmp/ccYYKFl0.s:1092   .text:0000000000000410 .L0 
src/../h/kern_reg_util.h:66     .text:0000000000000410 .L0 
     /tmp/ccYYKFl0.s:1100   .text:0000000000000418 .L0 
     /tmp/ccYYKFl0.s:1101   .text:0000000000000418 .L0 
     /tmp/ccYYKFl0.s:1107   .text:000000000000041c .L0 
     /tmp/ccYYKFl0.s:1115   .text:000000000000042c .L0 
     /tmp/ccYYKFl0.s:1120   .text:000000000000043c .L0 
     /tmp/ccYYKFl0.s:1127   .text:0000000000000444 .L0 
     /tmp/ccYYKFl0.s:1128   .text:0000000000000448 .L0 
     /tmp/ccYYKFl0.s:1129   .text:0000000000000448 .L0 
     /tmp/ccYYKFl0.s:1131   .text:000000000000044c .L0 
     /tmp/ccYYKFl0.s:1132   .text:000000000000044c .L0 
     /tmp/ccYYKFl0.s:1134   .text:0000000000000450 .L0 
     /tmp/ccYYKFl0.s:1136   .text:0000000000000454 .L0 
     /tmp/ccYYKFl0.s:1140   .text:0000000000000458 .L0 
     /tmp/ccYYKFl0.s:1144   .text:0000000000000458 .L0 
     /tmp/ccYYKFl0.s:1145   .text:0000000000000458 .L0 
     /tmp/ccYYKFl0.s:1153   .text:000000000000046c .L0 
     /tmp/ccYYKFl0.s:1154   .text:000000000000046c .L0 
     /tmp/ccYYKFl0.s:1155   .text:000000000000046c .L0 
     /tmp/ccYYKFl0.s:1165   .text:0000000000000474 .L0 
     /tmp/ccYYKFl0.s:1166   .text:0000000000000474 .L0 
     /tmp/ccYYKFl0.s:1170   .text:000000000000047c .L0 
     /tmp/ccYYKFl0.s:1171   .text:000000000000047c .L0 
     /tmp/ccYYKFl0.s:1175   .text:000000000000048c .L0 
     /tmp/ccYYKFl0.s:1177   .text:0000000000000490 .L0 
     /tmp/ccYYKFl0.s:1182   .text:0000000000000494 .L0 
     /tmp/ccYYKFl0.s:1183   .text:0000000000000494 .L0 
     /tmp/ccYYKFl0.s:1184   .text:0000000000000494 .L0 
src/../h/kern_reg_util.h:146    .text:0000000000000494 .L0 
     /tmp/ccYYKFl0.s:1192   .text:000000000000049c .L0 
     /tmp/ccYYKFl0.s:1193   .text:000000000000049c .L0 
     /tmp/ccYYKFl0.s:1197   .text:00000000000004a0 .L0 
     /tmp/ccYYKFl0.s:1201   .text:00000000000004a4 .L0 
     /tmp/ccYYKFl0.s:1202   .text:00000000000004a4 .L0 
     /tmp/ccYYKFl0.s:1203   .text:00000000000004a4 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000004a4 .L0 
     /tmp/ccYYKFl0.s:1211   .text:00000000000004ac .L0 
     /tmp/ccYYKFl0.s:1212   .text:00000000000004ac .L0 
     /tmp/ccYYKFl0.s:1216   .text:00000000000004b0 .L0 
     /tmp/ccYYKFl0.s:1218   .text:00000000000004b4 .L0 
     /tmp/ccYYKFl0.s:1219   .text:00000000000004b4 .L0 
     /tmp/ccYYKFl0.s:1222   .text:00000000000004bc .L0 
     /tmp/ccYYKFl0.s:1223   .text:00000000000004bc .L0 
GAS LISTING /tmp/ccYYKFl0.s 			page 46


     /tmp/ccYYKFl0.s:1228   .text:00000000000004c0 .L0 
src/../h/kern_reg_util.h:152    .text:00000000000004c0 .L0 
     /tmp/ccYYKFl0.s:1238   .text:00000000000004c4 .L0 
     /tmp/ccYYKFl0.s:1239   .text:00000000000004c4 .L0 
     /tmp/ccYYKFl0.s:1244   .text:00000000000004c8 .L0 
src/../h/kern_reg_util.h:84     .text:00000000000004c8 .L0 
     /tmp/ccYYKFl0.s:1254   .text:00000000000004cc .L0 
     /tmp/ccYYKFl0.s:1255   .text:00000000000004cc .L0 
     /tmp/ccYYKFl0.s:1259   .text:00000000000004dc .L0 
     /tmp/ccYYKFl0.s:1262   .text:00000000000004e8 .L0 
     /tmp/ccYYKFl0.s:1272   .text:00000000000004f0 .L0 
     /tmp/ccYYKFl0.s:1273   .text:00000000000004f0 .L0 
     /tmp/ccYYKFl0.s:1278   .text:00000000000004fc .L0 
     /tmp/ccYYKFl0.s:1283   .text:0000000000000504 .L0 
     /tmp/ccYYKFl0.s:1284   .text:0000000000000504 .L0 
     /tmp/ccYYKFl0.s:1293   .text:0000000000000514 .L0 
     /tmp/ccYYKFl0.s:1294   .text:0000000000000514 .L0 
     /tmp/ccYYKFl0.s:1301   .text:0000000000000520 .L0 
     /tmp/ccYYKFl0.s:1302   .text:0000000000000520 .L0 
     /tmp/ccYYKFl0.s:1305   .text:000000000000052c .L0 
     /tmp/ccYYKFl0.s:1309   .text:0000000000000538 .L0 
     /tmp/ccYYKFl0.s:1310   .text:0000000000000538 .L0 
     /tmp/ccYYKFl0.s:1315   .text:0000000000000540 .L0 
     /tmp/ccYYKFl0.s:1316   .text:0000000000000544 .L0 
     /tmp/ccYYKFl0.s:1331   .bss:0000000000000008 cbuf
     /tmp/ccYYKFl0.s:1335   .bss:0000000000000408 counter
     /tmp/ccYYKFl0.s:1327   .bss:0000000000000000 SYSTEM_TIME
     /tmp/ccYYKFl0.s:1324   .bss:0000000000000000 .LANCHOR0
     /tmp/ccYYKFl0.s:1346   .text:0000000000000544 .L0 
     /tmp/ccYYKFl0.s:22     .text:000000000000000c .L0 
     /tmp/ccYYKFl0.s:25     .text:0000000000000014 .L0 
     /tmp/ccYYKFl0.s:202    .text:00000000000000d0 .L0 
     /tmp/ccYYKFl0.s:233    .rodata:0000000000000000 .L8
     /tmp/ccYYKFl0.s:225    .text:00000000000000e8 .L0 
     /tmp/ccYYKFl0.s:376    .text:0000000000000140 .L0 
     /tmp/ccYYKFl0.s:477    .text:0000000000000190 .L0 
     /tmp/ccYYKFl0.s:481    .text:00000000000001a0 .L0 
     /tmp/ccYYKFl0.s:571    .text:00000000000001f0 .L0 
     /tmp/ccYYKFl0.s:575    .text:0000000000000200 .L0 
     /tmp/ccYYKFl0.s:687    .text:0000000000000274 .L0 
     /tmp/ccYYKFl0.s:691    .text:0000000000000284 .L0 
     /tmp/ccYYKFl0.s:726    .text:00000000000002a4 .L0 
     /tmp/ccYYKFl0.s:819    .text:0000000000000300 .L0 
     /tmp/ccYYKFl0.s:919    .text:000000000000035c .L0 
     /tmp/ccYYKFl0.s:923    .text:000000000000036c .L0 
     /tmp/ccYYKFl0.s:1049   .text:00000000000003d8 .L0 
     /tmp/ccYYKFl0.s:1053   .text:00000000000003e8 .L0 
     /tmp/ccYYKFl0.s:1145   .text:0000000000000458 .L0 
     /tmp/ccYYKFl0.s:1171   .text:000000000000047c .L0 
     /tmp/ccYYKFl0.s:1255   .text:00000000000004cc .L0 
     /tmp/ccYYKFl0.s:1259   .text:00000000000004dc .L0 
     /tmp/ccYYKFl0.s:1302   .text:0000000000000520 .L0 
     /tmp/ccYYKFl0.s:171    .text:00000000000000bc .L26
     /tmp/ccYYKFl0.s:154    .text:00000000000000a4 .L5
     /tmp/ccYYKFl0.s:710    .text:000000000000029c .L24
     /tmp/ccYYKFl0.s:696    .text:0000000000000294 .L21
     /tmp/ccYYKFl0.s:934    .text:0000000000000380 .L22
GAS LISTING /tmp/ccYYKFl0.s 			page 47


     /tmp/ccYYKFl0.s:826    .text:0000000000000314 .L9
     /tmp/ccYYKFl0.s:960    .text:000000000000038c .L23
     /tmp/ccYYKFl0.s:1139   .text:0000000000000458 .L33
     /tmp/ccYYKFl0.s:1266   .text:00000000000004f0 .L34
     /tmp/ccYYKFl0.s:1298   .text:0000000000000520 .L35
     /tmp/ccYYKFl0.s:1123   .text:0000000000000444 .L27
     /tmp/ccYYKFl0.s:1290   .text:0000000000000514 .L36
     /tmp/ccYYKFl0.s:1281   .text:0000000000000504 .L31
     /tmp/ccYYKFl0.s:302    .text:0000000000000100 .L20
     /tmp/ccYYKFl0.s:327    .text:0000000000000114 .L19
     /tmp/ccYYKFl0.s:353    .text:0000000000000128 .L18
     /tmp/ccYYKFl0.s:582    .text:0000000000000214 .L17
     /tmp/ccYYKFl0.s:394    .text:0000000000000158 .L16
     /tmp/ccYYKFl0.s:488    .text:00000000000001b4 .L15
     /tmp/ccYYKFl0.s:590    .text:000000000000021c .L14
     /tmp/ccYYKFl0.s:615    .text:0000000000000234 .L13
     /tmp/ccYYKFl0.s:669    .text:0000000000000260 .L12
     /tmp/ccYYKFl0.s:641    .text:0000000000000248 .L11
     /tmp/ccYYKFl0.s:718    .text:00000000000002a4 .L10
     /tmp/ccYYKFl0.s:948    .text:0000000000000388 .L7
     /tmp/ccYYKFl0.s:3150   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccYYKFl0.s:4888   .debug_str:000000000000060d .LASF139
     /tmp/ccYYKFl0.s:4670   .debug_str:000000000000006b .LASF140
     /tmp/ccYYKFl0.s:4836   .debug_str:00000000000004dd .LASF141
     /tmp/ccYYKFl0.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccYYKFl0.s:1338   .text:0000000000000544 .Letext0
     /tmp/ccYYKFl0.s:4648   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccYYKFl0.s:4812   .debug_str:0000000000000443 .LASF0
     /tmp/ccYYKFl0.s:4828   .debug_str:00000000000004ab .LASF1
     /tmp/ccYYKFl0.s:4794   .debug_str:00000000000003d6 .LASF2
     /tmp/ccYYKFl0.s:4764   .debug_str:0000000000000324 .LASF4
     /tmp/ccYYKFl0.s:4866   .debug_str:0000000000000585 .LASF3
     /tmp/ccYYKFl0.s:4676   .debug_str:00000000000000b0 .LASF5
     /tmp/ccYYKFl0.s:4832   .debug_str:00000000000004c5 .LASF6
     /tmp/ccYYKFl0.s:4810   .debug_str:0000000000000430 .LASF7
     /tmp/ccYYKFl0.s:4904   .debug_str:000000000000076c .LASF8
     /tmp/ccYYKFl0.s:4750   .debug_str:00000000000002d5 .LASF9
     /tmp/ccYYKFl0.s:4846   .debug_str:0000000000000519 .LASF10
     /tmp/ccYYKFl0.s:4892   .debug_str:00000000000006df .LASF11
     /tmp/ccYYKFl0.s:4682   .debug_str:00000000000000c9 .LASF12
     /tmp/ccYYKFl0.s:4656   .debug_str:0000000000000025 .LASF13
     /tmp/ccYYKFl0.s:4694   .debug_str:000000000000012b .LASF14
     /tmp/ccYYKFl0.s:4860   .debug_str:000000000000055f .LASF15
     /tmp/ccYYKFl0.s:4710   .debug_str:00000000000001c3 .LASF16
     /tmp/ccYYKFl0.s:4824   .debug_str:0000000000000494 .LASF30
     /tmp/ccYYKFl0.s:4874   .debug_str:00000000000005c5 .LASF17
     /tmp/ccYYKFl0.s:4854   .debug_str:0000000000000540 .LASF18
     /tmp/ccYYKFl0.s:4778   .debug_str:0000000000000360 .LASF19
     /tmp/ccYYKFl0.s:4730   .debug_str:000000000000025d .LASF20
     /tmp/ccYYKFl0.s:4700   .debug_str:000000000000015d .LASF21
     /tmp/ccYYKFl0.s:4816   .debug_str:000000000000045b .LASF22
     /tmp/ccYYKFl0.s:4902   .debug_str:0000000000000763 .LASF23
     /tmp/ccYYKFl0.s:4774   .debug_str:000000000000034b .LASF24
     /tmp/ccYYKFl0.s:4872   .debug_str:00000000000005bc .LASF25
     /tmp/ccYYKFl0.s:4684   .debug_str:00000000000000d9 .LASF26
     /tmp/ccYYKFl0.s:4770   .debug_str:0000000000000337 .LASF27
     /tmp/ccYYKFl0.s:4768   .debug_str:0000000000000332 .LASF28
GAS LISTING /tmp/ccYYKFl0.s 			page 48


     /tmp/ccYYKFl0.s:4928   .debug_str:00000000000007f9 .LASF29
     /tmp/ccYYKFl0.s:4714   .debug_str:00000000000001df .LASF31
     /tmp/ccYYKFl0.s:4704   .debug_str:0000000000000182 .LASF32
     /tmp/ccYYKFl0.s:4780   .debug_str:000000000000036e .LASF33
     /tmp/ccYYKFl0.s:4678   .debug_str:00000000000000b7 .LASF34
     /tmp/ccYYKFl0.s:4776   .debug_str:0000000000000355 .LASF35
     /tmp/ccYYKFl0.s:4878   .debug_str:00000000000005df .LASF36
     /tmp/ccYYKFl0.s:4826   .debug_str:00000000000004a2 .LASF37
     /tmp/ccYYKFl0.s:4772   .debug_str:0000000000000342 .LASF38
     /tmp/ccYYKFl0.s:4688   .debug_str:00000000000000f7 .LASF39
     /tmp/ccYYKFl0.s:4926   .debug_str:00000000000007f2 .LASF40
     /tmp/ccYYKFl0.s:4838   .debug_str:00000000000004f4 .LASF41
     /tmp/ccYYKFl0.s:4844   .debug_str:0000000000000513 .LASF42
     /tmp/ccYYKFl0.s:4804   .debug_str:0000000000000415 .LASF43
     /tmp/ccYYKFl0.s:4716   .debug_str:00000000000001ee .LASF44
     /tmp/ccYYKFl0.s:4662   .debug_str:0000000000000047 .LASF45
     /tmp/ccYYKFl0.s:4932   .debug_str:000000000000080a .LASF58
     /tmp/ccYYKFl0.s:4734   .debug_str:000000000000026f .LASF46
     /tmp/ccYYKFl0.s:4814   .debug_str:0000000000000450 .LASF47
     /tmp/ccYYKFl0.s:4746   .debug_str:00000000000002b2 .LASF48
     /tmp/ccYYKFl0.s:4864   .debug_str:000000000000057d .LASF49
     /tmp/ccYYKFl0.s:4930   .debug_str:00000000000007fe .LASF50
     /tmp/ccYYKFl0.s:4664   .debug_str:0000000000000050 .LASF51
     /tmp/ccYYKFl0.s:4830   .debug_str:00000000000004be .LASF52
     /tmp/ccYYKFl0.s:4922   .debug_str:00000000000007e2 .LASF53
     /tmp/ccYYKFl0.s:4650   .debug_str:0000000000000000 .LASF54
     /tmp/ccYYKFl0.s:4736   .debug_str:0000000000000274 .LASF55
     /tmp/ccYYKFl0.s:4840   .debug_str:00000000000004fc .LASF56
     /tmp/ccYYKFl0.s:4680   .debug_str:00000000000000c3 .LASF57
     /tmp/ccYYKFl0.s:4732   .debug_str:0000000000000269 .LASF59
     /tmp/ccYYKFl0.s:4910   .debug_str:000000000000079a .LASF60
     /tmp/ccYYKFl0.s:4896   .debug_str:000000000000071c .LASF61
     /tmp/ccYYKFl0.s:4660   .debug_str:000000000000003e .LASF62
     /tmp/ccYYKFl0.s:4784   .debug_str:0000000000000390 .LASF63
     /tmp/ccYYKFl0.s:4788   .debug_str:00000000000003b5 .LASF64
     /tmp/ccYYKFl0.s:4798   .debug_str:00000000000003f3 .LASF65
     /tmp/ccYYKFl0.s:4834   .debug_str:00000000000004d8 .LASF66
     /tmp/ccYYKFl0.s:4802   .debug_str:0000000000000410 .LASF67
     /tmp/ccYYKFl0.s:4822   .debug_str:0000000000000484 .LASF71
     /tmp/ccYYKFl0.s:1074   .text:00000000000003fc .LFB25
     /tmp/ccYYKFl0.s:1317   .text:0000000000000544 .LFE25
     /tmp/ccYYKFl0.s:4924   .debug_str:00000000000007eb .LASF68
     /tmp/ccYYKFl0.s:3815   .debug_loc:0000000000000000 .LLST45
     /tmp/ccYYKFl0.s:1178   .text:0000000000000494 .LBB206
     /tmp/ccYYKFl0.s:1263   .text:00000000000004ec .LBE206
     /tmp/ccYYKFl0.s:4852   .debug_str:0000000000000538 .LASF69
     /tmp/ccYYKFl0.s:4722   .debug_str:000000000000021b .LASF70
     /tmp/ccYYKFl0.s:1180   .text:0000000000000494 .LBB207
     /tmp/ccYYKFl0.s:1195   .text:00000000000004a0 .LBE207
     /tmp/ccYYKFl0.s:1199   .text:00000000000004a4 .LBB209
     /tmp/ccYYKFl0.s:1214   .text:00000000000004b0 .LBE209
     /tmp/ccYYKFl0.s:1225   .text:00000000000004c0 .LBB211
     /tmp/ccYYKFl0.s:1236   .text:00000000000004c4 .LBE211
     /tmp/ccYYKFl0.s:3834   .debug_loc:000000000000005c .LLST48
     /tmp/ccYYKFl0.s:1241   .text:00000000000004c8 .LBB213
     /tmp/ccYYKFl0.s:1252   .text:00000000000004cc .LBE213
     /tmp/ccYYKFl0.s:3841   .debug_loc:000000000000007f .LLST49
GAS LISTING /tmp/ccYYKFl0.s 			page 49


     /tmp/ccYYKFl0.s:1220   .text:00000000000004bc .LVL81
     /tmp/ccYYKFl0.s:4640   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccYYKFl0.s:3848   .debug_loc:00000000000000a2 .LLST46
     /tmp/ccYYKFl0.s:1274   .text:00000000000004f8 .LVL87
     /tmp/ccYYKFl0.s:1286   .text:0000000000000510 .LVL90
     /tmp/ccYYKFl0.s:1295   .text:000000000000051c .LVL92
     /tmp/ccYYKFl0.s:1088   .text:0000000000000410 .LBB196
     /tmp/ccYYKFl0.s:1104   .text:000000000000041c .LBE196
     /tmp/ccYYKFl0.s:1151   .text:000000000000046c .LBB203
     /tmp/ccYYKFl0.s:1163   .text:0000000000000474 .LBE203
     /tmp/ccYYKFl0.s:3859   .debug_loc:00000000000000d8 .LLST47
     /tmp/ccYYKFl0.s:1167   .text:000000000000047c .LVL80
     /tmp/ccYYKFl0.s:1307   .text:0000000000000538 .LVL94
     /tmp/ccYYKFl0.s:1311   .text:0000000000000540 .LVL95
     /tmp/ccYYKFl0.s:4666   .debug_str:0000000000000058 .LASF72
     /tmp/ccYYKFl0.s:107    .text:000000000000006c .LFB24
     /tmp/ccYYKFl0.s:1068   .text:00000000000003fc .LFE24
     /tmp/ccYYKFl0.s:3867   .debug_loc:00000000000000fc .LLST1
     /tmp/ccYYKFl0.s:3892   .debug_loc:000000000000015e .LLST2
     /tmp/ccYYKFl0.s:3921   .debug_loc:00000000000001d3 .LLST3
     /tmp/ccYYKFl0.s:3954   .debug_loc:000000000000025b .LLST4
     /tmp/ccYYKFl0.s:4093   .debug_loc:000000000000046a .LLST5
     /tmp/ccYYKFl0.s:4228   .debug_loc:0000000000000666 .LLST6
     /tmp/ccYYKFl0.s:175    .text:00000000000000c0 .LBB115
     /tmp/ccYYKFl0.s:1065   .text:00000000000003fc .LBE115
     /tmp/ccYYKFl0.s:4792   .debug_str:00000000000003cf .LASF73
     /tmp/ccYYKFl0.s:4247   .debug_loc:00000000000006b3 .LLST7
     /tmp/ccYYKFl0.s:4914   .debug_str:00000000000007b7 .LASF74
     /tmp/ccYYKFl0.s:4279   .debug_loc:0000000000000749 .LLST8
     /tmp/ccYYKFl0.s:4820   .debug_str:000000000000047f .LASF75
     /tmp/ccYYKFl0.s:4293   .debug_loc:0000000000000782 .LLST9
     /tmp/ccYYKFl0.s:4908   .debug_str:0000000000000795 .LASF76
     /tmp/ccYYKFl0.s:4300   .debug_loc:00000000000007a5 .LLST10
     /tmp/ccYYKFl0.s:306    .text:0000000000000100 .LBB121
     /tmp/ccYYKFl0.s:330    .text:0000000000000114 .LBE121
     /tmp/ccYYKFl0.s:4882   .debug_str:00000000000005ef .LASF77
     /tmp/ccYYKFl0.s:4362   .debug_loc:00000000000008d7 .LLST12
     /tmp/ccYYKFl0.s:315    .text:000000000000010c .LBB122
     /tmp/ccYYKFl0.s:329    .text:0000000000000114 .LBE122
     /tmp/ccYYKFl0.s:4369   .debug_loc:00000000000008fa .LLST13
     /tmp/ccYYKFl0.s:313    .text:000000000000010c .LVL19
     /tmp/ccYYKFl0.s:333    .text:0000000000000114 .LBB124
     /tmp/ccYYKFl0.s:356    .text:0000000000000128 .LBE124
     /tmp/ccYYKFl0.s:4848   .debug_str:0000000000000528 .LASF78
     /tmp/ccYYKFl0.s:4376   .debug_loc:000000000000091d .LLST14
     /tmp/ccYYKFl0.s:341    .text:0000000000000120 .LBB125
     /tmp/ccYYKFl0.s:355    .text:0000000000000128 .LBE125
     /tmp/ccYYKFl0.s:4383   .debug_loc:0000000000000940 .LLST15
     /tmp/ccYYKFl0.s:339    .text:0000000000000120 .LVL21
     /tmp/ccYYKFl0.s:359    .text:0000000000000128 .LBB127
     /tmp/ccYYKFl0.s:397    .text:0000000000000158 .LBE127
     /tmp/ccYYKFl0.s:4880   .debug_str:00000000000005e8 .LASF79
     /tmp/ccYYKFl0.s:4390   .debug_loc:0000000000000963 .LLST16
     /tmp/ccYYKFl0.s:4742   .debug_str:0000000000000299 .LASF80
     /tmp/ccYYKFl0.s:4397   .debug_loc:0000000000000986 .LLST17
     /tmp/ccYYKFl0.s:4404   .debug_loc:00000000000009a9 .LLST18
     /tmp/ccYYKFl0.s:4762   .debug_str:000000000000031e .LASF81
GAS LISTING /tmp/ccYYKFl0.s 			page 50


     /tmp/ccYYKFl0.s:4418   .debug_loc:00000000000009e2 .LLST19
     /tmp/ccYYKFl0.s:382    .text:0000000000000150 .LBB128
     /tmp/ccYYKFl0.s:396    .text:0000000000000158 .LBE128
     /tmp/ccYYKFl0.s:4432   .debug_loc:0000000000000a1b .LLST20
     /tmp/ccYYKFl0.s:371    .text:000000000000013c .LVL24
     /tmp/ccYYKFl0.s:400    .text:0000000000000158 .LBB130
     /tmp/ccYYKFl0.s:489    .text:00000000000001b4 .LBE130
     /tmp/ccYYKFl0.s:402    .text:0000000000000158 .LBB131
     /tmp/ccYYKFl0.s:417    .text:0000000000000164 .LBE131
     /tmp/ccYYKFl0.s:421    .text:0000000000000168 .LBB133
     /tmp/ccYYKFl0.s:436    .text:0000000000000174 .LBE133
     /tmp/ccYYKFl0.s:447    .text:0000000000000184 .LBB135
     /tmp/ccYYKFl0.s:458    .text:0000000000000188 .LBE135
     /tmp/ccYYKFl0.s:4439   .debug_loc:0000000000000a3e .LLST21
     /tmp/ccYYKFl0.s:463    .text:000000000000018c .LBB137
     /tmp/ccYYKFl0.s:474    .text:0000000000000190 .LBE137
     /tmp/ccYYKFl0.s:4446   .debug_loc:0000000000000a61 .LLST22
     /tmp/ccYYKFl0.s:442    .text:0000000000000180 .LVL27
     /tmp/ccYYKFl0.s:492    .text:00000000000001b4 .LBB139
     /tmp/ccYYKFl0.s:583    .text:0000000000000214 .LBE139
     /tmp/ccYYKFl0.s:4453   .debug_loc:0000000000000a84 .LLST23
     /tmp/ccYYKFl0.s:495    .text:00000000000001b4 .LBB140
     /tmp/ccYYKFl0.s:510    .text:00000000000001c0 .LBE140
     /tmp/ccYYKFl0.s:514    .text:00000000000001c4 .LBB142
     /tmp/ccYYKFl0.s:529    .text:00000000000001d0 .LBE142
     /tmp/ccYYKFl0.s:541    .text:00000000000001e4 .LBB144
     /tmp/ccYYKFl0.s:552    .text:00000000000001e8 .LBE144
     /tmp/ccYYKFl0.s:4460   .debug_loc:0000000000000aa7 .LLST24
     /tmp/ccYYKFl0.s:557    .text:00000000000001ec .LBB146
     /tmp/ccYYKFl0.s:568    .text:00000000000001f0 .LBE146
     /tmp/ccYYKFl0.s:4467   .debug_loc:0000000000000aca .LLST25
     /tmp/ccYYKFl0.s:536    .text:00000000000001e0 .LVL33
     /tmp/ccYYKFl0.s:593    .text:000000000000021c .LBB148
     /tmp/ccYYKFl0.s:618    .text:0000000000000234 .LBE148
     /tmp/ccYYKFl0.s:4474   .debug_loc:0000000000000aed .LLST26
     /tmp/ccYYKFl0.s:4756   .debug_str:00000000000002f5 .LASF82
     /tmp/ccYYKFl0.s:4481   .debug_loc:0000000000000b10 .LLST27
     /tmp/ccYYKFl0.s:603    .text:000000000000022c .LBB149
     /tmp/ccYYKFl0.s:617    .text:0000000000000234 .LBE149
     /tmp/ccYYKFl0.s:4488   .debug_loc:0000000000000b33 .LLST28
     /tmp/ccYYKFl0.s:601    .text:000000000000022c .LVL40
     /tmp/ccYYKFl0.s:621    .text:0000000000000234 .LBB151
     /tmp/ccYYKFl0.s:644    .text:0000000000000248 .LBE151
     /tmp/ccYYKFl0.s:4495   .debug_loc:0000000000000b56 .LLST29
     /tmp/ccYYKFl0.s:629    .text:0000000000000240 .LBB152
     /tmp/ccYYKFl0.s:643    .text:0000000000000248 .LBE152
     /tmp/ccYYKFl0.s:4502   .debug_loc:0000000000000b79 .LLST30
     /tmp/ccYYKFl0.s:627    .text:0000000000000240 .LVL42
     /tmp/ccYYKFl0.s:647    .text:0000000000000248 .LBB154
     /tmp/ccYYKFl0.s:672    .text:0000000000000260 .LBE154
     /tmp/ccYYKFl0.s:4509   .debug_loc:0000000000000b9c .LLST31
     /tmp/ccYYKFl0.s:656    .text:0000000000000254 .LBB155
     /tmp/ccYYKFl0.s:671    .text:0000000000000260 .LBE155
     /tmp/ccYYKFl0.s:4516   .debug_loc:0000000000000bbf .LLST32
     /tmp/ccYYKFl0.s:653    .text:0000000000000254 .LVL44
     /tmp/ccYYKFl0.s:675    .text:0000000000000260 .LBB157
     /tmp/ccYYKFl0.s:719    .text:00000000000002a4 .LBE157
GAS LISTING /tmp/ccYYKFl0.s 			page 51


     /tmp/ccYYKFl0.s:4524   .debug_loc:0000000000000be3 .LLST33
     /tmp/ccYYKFl0.s:698    .text:0000000000000294 .LBB158
     /tmp/ccYYKFl0.s:712    .text:000000000000029c .LBE158
     /tmp/ccYYKFl0.s:4531   .debug_loc:0000000000000c06 .LLST34
     /tmp/ccYYKFl0.s:681    .text:000000000000026c .LVL46
     /tmp/ccYYKFl0.s:722    .text:00000000000002a4 .LBB160
     /tmp/ccYYKFl0.s:827    .text:0000000000000314 .LBE160
     /tmp/ccYYKFl0.s:4766   .debug_str:000000000000032b .LASF83
     /tmp/ccYYKFl0.s:4538   .debug_loc:0000000000000c29 .LLST35
     /tmp/ccYYKFl0.s:740    .text:00000000000002c0 .LBB161
     /tmp/ccYYKFl0.s:755    .text:00000000000002cc .LBE161
     /tmp/ccYYKFl0.s:759    .text:00000000000002d0 .LBB163
     /tmp/ccYYKFl0.s:774    .text:00000000000002dc .LBE163
     /tmp/ccYYKFl0.s:785    .text:00000000000002ec .LBB165
     /tmp/ccYYKFl0.s:796    .text:00000000000002f0 .LBE165
     /tmp/ccYYKFl0.s:4545   .debug_loc:0000000000000c4c .LLST36
     /tmp/ccYYKFl0.s:801    .text:00000000000002f4 .LBB167
     /tmp/ccYYKFl0.s:812    .text:00000000000002f8 .LBE167
     /tmp/ccYYKFl0.s:4552   .debug_loc:0000000000000c6f .LLST37
     /tmp/ccYYKFl0.s:780    .text:00000000000002e8 .LVL54
     /tmp/ccYYKFl0.s:830    .text:0000000000000314 .LBB169
     /tmp/ccYYKFl0.s:951    .text:0000000000000388 .LBE169
     /tmp/ccYYKFl0.s:4559   .debug_loc:0000000000000c92 .LLST38
     /tmp/ccYYKFl0.s:842    .text:0000000000000324 .LBB172
     /tmp/ccYYKFl0.s:927    .text:000000000000037c .LBE172
     /tmp/ccYYKFl0.s:844    .text:0000000000000324 .LBB173
     /tmp/ccYYKFl0.s:859    .text:0000000000000330 .LBE173
     /tmp/ccYYKFl0.s:863    .text:0000000000000334 .LBB175
     /tmp/ccYYKFl0.s:878    .text:0000000000000340 .LBE175
     /tmp/ccYYKFl0.s:889    .text:0000000000000350 .LBB177
     /tmp/ccYYKFl0.s:900    .text:0000000000000354 .LBE177
     /tmp/ccYYKFl0.s:4570   .debug_loc:0000000000000cc8 .LLST39
     /tmp/ccYYKFl0.s:905    .text:0000000000000358 .LBB179
     /tmp/ccYYKFl0.s:916    .text:000000000000035c .LBE179
     /tmp/ccYYKFl0.s:4577   .debug_loc:0000000000000ceb .LLST40
     /tmp/ccYYKFl0.s:884    .text:000000000000034c .LVL61
     /tmp/ccYYKFl0.s:936    .text:0000000000000380 .LBB181
     /tmp/ccYYKFl0.s:950    .text:0000000000000388 .LBE181
     /tmp/ccYYKFl0.s:4584   .debug_loc:0000000000000d0e .LLST41
     /tmp/ccYYKFl0.s:837    .text:000000000000031c .LVL60
     /tmp/ccYYKFl0.s:954    .text:0000000000000388 .LBB183
     /tmp/ccYYKFl0.s:1063   .text:00000000000003fc .LBE183
     /tmp/ccYYKFl0.s:4591   .debug_loc:0000000000000d31 .LLST42
     /tmp/ccYYKFl0.s:972    .text:00000000000003a0 .LBB186
     /tmp/ccYYKFl0.s:1057   .text:00000000000003f8 .LBE186
     /tmp/ccYYKFl0.s:974    .text:00000000000003a0 .LBB187
     /tmp/ccYYKFl0.s:989    .text:00000000000003ac .LBE187
     /tmp/ccYYKFl0.s:993    .text:00000000000003b0 .LBB189
     /tmp/ccYYKFl0.s:1008   .text:00000000000003bc .LBE189
     /tmp/ccYYKFl0.s:1019   .text:00000000000003cc .LBB191
     /tmp/ccYYKFl0.s:1030   .text:00000000000003d0 .LBE191
     /tmp/ccYYKFl0.s:4598   .debug_loc:0000000000000d54 .LLST43
     /tmp/ccYYKFl0.s:1035   .text:00000000000003d4 .LBB193
     /tmp/ccYYKFl0.s:1046   .text:00000000000003d8 .LBE193
     /tmp/ccYYKFl0.s:4605   .debug_loc:0000000000000d77 .LLST44
     /tmp/ccYYKFl0.s:1014   .text:00000000000003c8 .LVL70
     /tmp/ccYYKFl0.s:967    .text:0000000000000398 .LVL69
GAS LISTING /tmp/ccYYKFl0.s 			page 52


     /tmp/ccYYKFl0.s:180    .text:00000000000000c0 .LBB116
     /tmp/ccYYKFl0.s:196    .text:00000000000000cc .LBE116
     /tmp/ccYYKFl0.s:207    .text:00000000000000d8 .LBB118
     /tmp/ccYYKFl0.s:218    .text:00000000000000dc .LBE118
     /tmp/ccYYKFl0.s:4612   .debug_loc:0000000000000d9a .LLST11
     /tmp/ccYYKFl0.s:589    .text:000000000000021c .LVL39
     /tmp/ccYYKFl0.s:127    .text:000000000000008c .LBB112
     /tmp/ccYYKFl0.s:143    .text:0000000000000098 .LBE112
     /tmp/ccYYKFl0.s:4692   .debug_str:000000000000011e .LASF84
     /tmp/ccYYKFl0.s:4900   .debug_str:0000000000000742 .LASF86
     /tmp/ccYYKFl0.s:68     .text:0000000000000034 .LFB23
     /tmp/ccYYKFl0.s:101    .text:000000000000006c .LFE23
     /tmp/ccYYKFl0.s:4870   .debug_str:00000000000005a8 .LASF85
     /tmp/ccYYKFl0.s:4906   .debug_str:000000000000077c .LASF87
     /tmp/ccYYKFl0.s:10     .text:0000000000000000 .LFB22
     /tmp/ccYYKFl0.s:62     .text:0000000000000034 .LFE22
     /tmp/ccYYKFl0.s:27     .text:000000000000001c .LBB108
     /tmp/ccYYKFl0.s:39     .text:0000000000000020 .LBE108
     /tmp/ccYYKFl0.s:41     .text:0000000000000020 .LBB110
     /tmp/ccYYKFl0.s:53     .text:0000000000000028 .LBE110
     /tmp/ccYYKFl0.s:4619   .debug_loc:0000000000000dbd .LLST0
     /tmp/ccYYKFl0.s:4738   .debug_str:000000000000027c .LASF88
     /tmp/ccYYKFl0.s:4790   .debug_str:00000000000003c1 .LASF90
     /tmp/ccYYKFl0.s:4760   .debug_str:0000000000000314 .LASF100
     /tmp/ccYYKFl0.s:4674   .debug_str:00000000000000a2 .LASF102
     /tmp/ccYYKFl0.s:4808   .debug_str:0000000000000425 .LASF89
     /tmp/ccYYKFl0.s:4654   .debug_str:0000000000000015 .LASF91
     /tmp/ccYYKFl0.s:4886   .debug_str:0000000000000608 .LASF92
     /tmp/ccYYKFl0.s:4668   .debug_str:0000000000000064 .LASF93
     /tmp/ccYYKFl0.s:4920   .debug_str:00000000000007d7 .LASF94
     /tmp/ccYYKFl0.s:4862   .debug_str:0000000000000575 .LASF95
     /tmp/ccYYKFl0.s:4652   .debug_str:0000000000000009 .LASF96
     /tmp/ccYYKFl0.s:4806   .debug_str:000000000000041f .LASF97
     /tmp/ccYYKFl0.s:4858   .debug_str:0000000000000558 .LASF98
     /tmp/ccYYKFl0.s:4918   .debug_str:00000000000007cc .LASF99
     /tmp/ccYYKFl0.s:4728   .debug_str:0000000000000256 .LASF101
     /tmp/ccYYKFl0.s:4744   .debug_str:00000000000002a7 .LASF103
     /tmp/ccYYKFl0.s:4658   .debug_str:0000000000000035 .LASF104
     /tmp/ccYYKFl0.s:4754   .debug_str:00000000000002e8 .LASF105
     /tmp/ccYYKFl0.s:4752   .debug_str:00000000000002e3 .LASF106
     /tmp/ccYYKFl0.s:4916   .debug_str:00000000000007c3 .LASF107
     /tmp/ccYYKFl0.s:4712   .debug_str:00000000000001d9 .LASF108
     /tmp/ccYYKFl0.s:4690   .debug_str:0000000000000104 .LASF109
     /tmp/ccYYKFl0.s:4702   .debug_str:000000000000016d .LASF111
     /tmp/ccYYKFl0.s:4850   .debug_str:000000000000052d .LASF110
     /tmp/ccYYKFl0.s:4912   .debug_str:00000000000007a9 .LASF112
     /tmp/ccYYKFl0.s:4726   .debug_str:000000000000023f .LASF113
     /tmp/ccYYKFl0.s:4720   .debug_str:0000000000000209 .LASF114
     /tmp/ccYYKFl0.s:4698   .debug_str:0000000000000145 .LASF115
     /tmp/ccYYKFl0.s:4740   .debug_str:0000000000000286 .LASF116
     /tmp/ccYYKFl0.s:4718   .debug_str:00000000000001f5 .LASF117
     /tmp/ccYYKFl0.s:4842   .debug_str:0000000000000505 .LASF118
     /tmp/ccYYKFl0.s:4724   .debug_str:0000000000000222 .LASF119
     /tmp/ccYYKFl0.s:4818   .debug_str:0000000000000467 .LASF120
     /tmp/ccYYKFl0.s:4884   .debug_str:00000000000005f4 .LASF121
     /tmp/ccYYKFl0.s:4796   .debug_str:00000000000003e4 .LASF122
     /tmp/ccYYKFl0.s:4894   .debug_str:00000000000006ee .LASF123
GAS LISTING /tmp/ccYYKFl0.s 			page 53


     /tmp/ccYYKFl0.s:4686   .debug_str:00000000000000e4 .LASF124
     /tmp/ccYYKFl0.s:4672   .debug_str:0000000000000083 .LASF125
     /tmp/ccYYKFl0.s:4868   .debug_str:0000000000000597 .LASF126
     /tmp/ccYYKFl0.s:4706   .debug_str:000000000000018e .LASF127
     /tmp/ccYYKFl0.s:4890   .debug_str:00000000000006d1 .LASF128
     /tmp/ccYYKFl0.s:4708   .debug_str:00000000000001a9 .LASF129
     /tmp/ccYYKFl0.s:4856   .debug_str:0000000000000549 .LASF130
     /tmp/ccYYKFl0.s:4898   .debug_str:0000000000000727 .LASF131
     /tmp/ccYYKFl0.s:4876   .debug_str:00000000000005cf .LASF132
     /tmp/ccYYKFl0.s:4748   .debug_str:00000000000002bc .LASF133
     /tmp/ccYYKFl0.s:4696   .debug_str:0000000000000137 .LASF134
     /tmp/ccYYKFl0.s:4786   .debug_str:000000000000039b .LASF135
     /tmp/ccYYKFl0.s:4782   .debug_str:000000000000037b .LASF136
     /tmp/ccYYKFl0.s:4758   .debug_str:00000000000002fa .LASF137
     /tmp/ccYYKFl0.s:4800   .debug_str:00000000000003fb .LASF138
     /tmp/ccYYKFl0.s:1102   .text:000000000000041c .LVL75
     /tmp/ccYYKFl0.s:1122   .text:0000000000000444 .LVL76
     /tmp/ccYYKFl0.s:1138   .text:0000000000000458 .LVL77
     /tmp/ccYYKFl0.s:1265   .text:00000000000004f0 .LVL86
     /tmp/ccYYKFl0.s:1297   .text:0000000000000520 .LVL93
     /tmp/ccYYKFl0.s:1224   .text:00000000000004c0 .LVL82
     /tmp/ccYYKFl0.s:1233   .text:00000000000004c4 .LVL83
     /tmp/ccYYKFl0.s:1240   .text:00000000000004c8 .LVL84
     /tmp/ccYYKFl0.s:1249   .text:00000000000004cc .LVL85
     /tmp/ccYYKFl0.s:1276   .text:00000000000004fc .LVL88
     /tmp/ccYYKFl0.s:1280   .text:0000000000000504 .LVL89
     /tmp/ccYYKFl0.s:1289   .text:0000000000000514 .LVL91
     /tmp/ccYYKFl0.s:1150   .text:000000000000046c .LVL78
     /tmp/ccYYKFl0.s:1160   .text:0000000000000474 .LVL79
     /tmp/ccYYKFl0.s:110    .text:000000000000006c .LVL4
     /tmp/ccYYKFl0.s:153    .text:00000000000000a4 .LVL9
     /tmp/ccYYKFl0.s:170    .text:00000000000000bc .LVL10
     /tmp/ccYYKFl0.s:224    .text:00000000000000e8 .LVL17
     /tmp/ccYYKFl0.s:203    .text:00000000000000d8 .LVL14
     /tmp/ccYYKFl0.s:958    .text:000000000000038c .LVL68
     /tmp/ccYYKFl0.s:125    .text:000000000000008c .LVL5
     /tmp/ccYYKFl0.s:727    .text:00000000000002ac .LVL51
     /tmp/ccYYKFl0.s:825    .text:0000000000000314 .LVL59
     /tmp/ccYYKFl0.s:151    .text:00000000000000a0 .LVL8
     /tmp/ccYYKFl0.s:326    .text:0000000000000114 .LVL20
     /tmp/ccYYKFl0.s:352    .text:0000000000000128 .LVL22
     /tmp/ccYYKFl0.s:393    .text:0000000000000158 .LVL26
     /tmp/ccYYKFl0.s:487    .text:00000000000001b4 .LVL32
     /tmp/ccYYKFl0.s:581    .text:0000000000000214 .LVL38
     /tmp/ccYYKFl0.s:614    .text:0000000000000234 .LVL41
     /tmp/ccYYKFl0.s:640    .text:0000000000000248 .LVL43
     /tmp/ccYYKFl0.s:668    .text:0000000000000260 .LVL45
     /tmp/ccYYKFl0.s:717    .text:00000000000002a4 .LVL50
     /tmp/ccYYKFl0.s:947    .text:0000000000000388 .LVL67
     /tmp/ccYYKFl0.s:731    .text:00000000000002b4 .LVL52
     /tmp/ccYYKFl0.s:141    .text:0000000000000098 .LVL6
     /tmp/ccYYKFl0.s:148    .text:000000000000009c .LVL7
     /tmp/ccYYKFl0.s:189    .text:00000000000000c4 .LVL12
     /tmp/ccYYKFl0.s:715    .text:00000000000002a0 .LVL49
     /tmp/ccYYKFl0.s:178    .text:00000000000000c0 .LVL11
     /tmp/ccYYKFl0.s:199    .text:00000000000000d0 .LVL13
     /tmp/ccYYKFl0.s:221    .text:00000000000000e0 .LVL16
GAS LISTING /tmp/ccYYKFl0.s 			page 54


     /tmp/ccYYKFl0.s:368    .text:0000000000000130 .LVL23
     /tmp/ccYYKFl0.s:736    .text:00000000000002bc .LVL53
     /tmp/ccYYKFl0.s:809    .text:00000000000002f8 .LVL58
     /tmp/ccYYKFl0.s:308    .text:0000000000000100 .LVL18
     /tmp/ccYYKFl0.s:381    .text:0000000000000150 .LVL25
     /tmp/ccYYKFl0.s:446    .text:0000000000000184 .LVL28
     /tmp/ccYYKFl0.s:455    .text:0000000000000188 .LVL29
     /tmp/ccYYKFl0.s:462    .text:000000000000018c .LVL30
     /tmp/ccYYKFl0.s:471    .text:0000000000000190 .LVL31
     /tmp/ccYYKFl0.s:540    .text:00000000000001e4 .LVL34
     /tmp/ccYYKFl0.s:549    .text:00000000000001e8 .LVL35
     /tmp/ccYYKFl0.s:556    .text:00000000000001ec .LVL36
     /tmp/ccYYKFl0.s:565    .text:00000000000001f0 .LVL37
     /tmp/ccYYKFl0.s:695    .text:0000000000000294 .LVL47
     /tmp/ccYYKFl0.s:709    .text:000000000000029c .LVL48
     /tmp/ccYYKFl0.s:784    .text:00000000000002ec .LVL55
     /tmp/ccYYKFl0.s:793    .text:00000000000002f0 .LVL56
     /tmp/ccYYKFl0.s:800    .text:00000000000002f4 .LVL57
     /tmp/ccYYKFl0.s:933    .text:0000000000000380 .LVL66
     /tmp/ccYYKFl0.s:888    .text:0000000000000350 .LVL62
     /tmp/ccYYKFl0.s:897    .text:0000000000000354 .LVL63
     /tmp/ccYYKFl0.s:904    .text:0000000000000358 .LVL64
     /tmp/ccYYKFl0.s:913    .text:000000000000035c .LVL65
     /tmp/ccYYKFl0.s:1018   .text:00000000000003cc .LVL71
     /tmp/ccYYKFl0.s:1027   .text:00000000000003d0 .LVL72
     /tmp/ccYYKFl0.s:1034   .text:00000000000003d4 .LVL73
     /tmp/ccYYKFl0.s:1043   .text:00000000000003d8 .LVL74
     /tmp/ccYYKFl0.s:215    .text:00000000000000dc .LVL15
     /tmp/ccYYKFl0.s:36     .text:0000000000000020 .LVL1
     /tmp/ccYYKFl0.s:50     .text:0000000000000028 .LVL2
     /tmp/ccYYKFl0.s:1347   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccYYKFl0.s:1270   .text:00000000000004f0 .LBB200
     /tmp/ccYYKFl0.s:1287   .text:0000000000000510 .LBE200
     /tmp/ccYYKFl0.s:1291   .text:0000000000000514 .LBB201
     /tmp/ccYYKFl0.s:1299   .text:0000000000000520 .LBE201

UNDEFINED SYMBOLS
supervisorTrap
_Z14kern_mem_alloci
_Z13kern_mem_freePv
_Z18kern_thread_createPP8thread_sPFvPvES2_S2_
_Z20kern_thread_dispatchv
running
_Z16kern_thread_joinP8thread_s
_Z23kern_thread_end_runningv
_Z13kern_sem_openPP5sem_sj
_Z14kern_sem_closeP5sem_s
_Z15kern_sem_signalP5sem_s
_Z13kern_sem_waitP5sem_s
_Z20kern_console_getcharv
_Z20kern_console_putcharc
_Z18kern_thread_wakeupm
plic_claim
plic_complete
_Z17kern_uart_handlerv
