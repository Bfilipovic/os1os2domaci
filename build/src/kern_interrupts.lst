GAS LISTING /tmp/ccMs1K2h.s 			page 1


   1              		.file	"kern_interrupts.c"
   2              		.option nopic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.cfi_sections	.debug_frame
   7              		.align	2
   8              		.globl	kern_syscall
  10              	kern_syscall:
  11              	.LFB22:
  12              		.file 1 "src/kern_interrupts.c"
   1:src/kern_interrupts.c **** //
   2:src/kern_interrupts.c **** // Created by os on 5/22/23.
   3:src/kern_interrupts.c **** //
   4:src/kern_interrupts.c **** 
   5:src/kern_interrupts.c **** #include "../lib/hw.h"
   6:src/kern_interrupts.c **** #include "../lib/console.h"
   7:src/kern_interrupts.c **** #include "../h/kern_interrupts.h"
   8:src/kern_interrupts.c **** #include "../h/kern_reg_util.h"
   9:src/kern_interrupts.c **** #include "../h/kern_memory.h"
  10:src/kern_interrupts.c **** #include "../h/kern_threads.h"
  11:src/kern_interrupts.c **** #include "../h/syscall_c.h"
  12:src/kern_interrupts.c **** #include "../h/kern_semaphore.h"
  13:src/kern_interrupts.c **** 
  14:src/kern_interrupts.c **** #define INTR_ILLEGAL_INSTRUCTION 0x0000000000000002UL
  15:src/kern_interrupts.c **** #define INTR_ILLEGAL_ADDR_RD 0x0000000000000005UL
  16:src/kern_interrupts.c **** #define INTR_ILLEGAL_ADDR_WR 0x0000000000000007UL
  17:src/kern_interrupts.c **** #define INTR_USER_ECALL 0x0000000000000008UL
  18:src/kern_interrupts.c **** #define INTR_KERNEL_ECALL 0x0000000000000009UL
  19:src/kern_interrupts.c **** #define INTR_TIMER 0x8000000000000001UL
  20:src/kern_interrupts.c **** #define INTR_CONSOLE 0x8000000000000009UL
  21:src/kern_interrupts.c **** 
  22:src/kern_interrupts.c **** 
  23:src/kern_interrupts.c **** extern void supervisorTrap();
  24:src/kern_interrupts.c **** 
  25:src/kern_interrupts.c **** 
  26:src/kern_interrupts.c **** uint64 SYSTEM_TIME;
  27:src/kern_interrupts.c **** 
  28:src/kern_interrupts.c **** 
  29:src/kern_interrupts.c **** void kern_syscall(enum SyscallNumber num, ...)
  30:src/kern_interrupts.c **** {
  13              		.loc 1 30 1
  14              		.cfi_startproc
  15              	.LVL0:
  16 0000 130101FB 		addi	sp,sp,-80
  17              		.cfi_def_cfa_offset 80
  18 0004 23348100 		sd	s0,8(sp)
  19              		.cfi_offset 8, -72
  20 0008 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 64
  22 000c 2334B400 		sd	a1,8(s0)
  23 0010 2338C400 		sd	a2,16(s0)
  24 0014 233CD400 		sd	a3,24(s0)
  25 0018 2330E402 		sd	a4,32(s0)
  26 001c 2334F402 		sd	a5,40(s0)
  27 0020 23380403 		sd	a6,48(s0)
  28 0024 233C1403 		sd	a7,56(s0)
GAS LISTING /tmp/ccMs1K2h.s 			page 2


  31:src/kern_interrupts.c ****     __asm__ volatile ("ecall");
  29              		.loc 1 31 5
  30              	#APP
  31              	# 31 "src/kern_interrupts.c" 1
  32              	    return;
  32              		ecall
  33              	# 0 "" 2
  34              		.loc 1 32 5
  33:src/kern_interrupts.c **** }
  35              		.loc 1 33 1 is_stmt 0
  36              	#NO_APP
  37 002c 03348100 		ld	s0,8(sp)
  38              		.cfi_restore 8
  39              		.cfi_def_cfa 2, 80
  40 0030 13010105 		addi	sp,sp,80
  41              		.cfi_def_cfa_offset 0
  42 0034 67800000 		jr	ra
  43              		.cfi_endproc
  44              	.LFE22:
  46              		.align	2
  47              		.globl	kern_interrupt_init
  49              	kern_interrupt_init:
  50              	.LFB23:
  34:src/kern_interrupts.c **** 
  35:src/kern_interrupts.c **** void kern_interrupt_init()
  36:src/kern_interrupts.c **** {
  51              		.loc 1 36 1 is_stmt 1
  52              		.cfi_startproc
  53 0038 130101FF 		addi	sp,sp,-16
  54              		.cfi_def_cfa_offset 16
  55 003c 23348100 		sd	s0,8(sp)
  56              		.cfi_offset 8, -8
  57 0040 13040101 		addi	s0,sp,16
  58              		.cfi_def_cfa 8, 0
  37:src/kern_interrupts.c ****     SYSTEM_TIME=0;
  59              		.loc 1 37 5
  60              		.loc 1 37 16 is_stmt 0
  61 0044 97070000 		sd	zero,SYSTEM_TIME,a5
  61      23B00700 
  38:src/kern_interrupts.c ****     w_stvec((uint64) &supervisorTrap);
  62              		.loc 1 38 5 is_stmt 1
  63 004c 97070000 		lla	a5,supervisorTrap
  63      93870700 
  64              	.LVL1:
  65              	.LBB84:
  66              	.LBB85:
  67              		.file 2 "src/../h/kern_reg_util.h"
   1:src/../h/kern_reg_util.h **** //
   2:src/../h/kern_reg_util.h **** // Created by os on 5/23/23.
   3:src/../h/kern_reg_util.h **** //
   4:src/../h/kern_reg_util.h **** 
   5:src/../h/kern_reg_util.h **** #ifndef OS1_KERN_REG_UTIL_H
   6:src/../h/kern_reg_util.h **** #define OS1_KERN_REG_UTIL_H
   7:src/../h/kern_reg_util.h **** 
   8:src/../h/kern_reg_util.h **** #include "../lib/hw.h"
   9:src/../h/kern_reg_util.h **** 
  10:src/../h/kern_reg_util.h **** enum BitMaskSstatus
GAS LISTING /tmp/ccMs1K2h.s 			page 3


  11:src/../h/kern_reg_util.h **** {
  12:src/../h/kern_reg_util.h ****     SSTATUS_SIE = (1 << 1),
  13:src/../h/kern_reg_util.h ****     SSTATUS_SPIE = (1 << 5),
  14:src/../h/kern_reg_util.h ****     SSTATUS_SPP = (1 << 8),
  15:src/../h/kern_reg_util.h **** };
  16:src/../h/kern_reg_util.h **** 
  17:src/../h/kern_reg_util.h **** enum BitMaskSip
  18:src/../h/kern_reg_util.h **** {
  19:src/../h/kern_reg_util.h ****     SIP_SSIP = (1 << 1),
  20:src/../h/kern_reg_util.h ****     SIP_STIP = (1 << 5),
  21:src/../h/kern_reg_util.h ****     SIP_SEIP = (1 << 9),
  22:src/../h/kern_reg_util.h **** };
  23:src/../h/kern_reg_util.h **** 
  24:src/../h/kern_reg_util.h **** inline uint64 r_a0()
  25:src/../h/kern_reg_util.h **** {
  26:src/../h/kern_reg_util.h ****     uint64 volatile a0;
  27:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
  28:src/../h/kern_reg_util.h ****     return a0;
  29:src/../h/kern_reg_util.h **** }
  30:src/../h/kern_reg_util.h **** inline void w_a0(uint64 value)
  31:src/../h/kern_reg_util.h **** {
  32:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv a0, %[value]" :: [value] "r"(value));
  33:src/../h/kern_reg_util.h **** }
  34:src/../h/kern_reg_util.h **** 
  35:src/../h/kern_reg_util.h **** inline uint64 r_a1()
  36:src/../h/kern_reg_util.h **** {
  37:src/../h/kern_reg_util.h ****     uint64 volatile a1;
  38:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a1], a1" : [a1] "=r"(a1));
  39:src/../h/kern_reg_util.h ****     return a1;
  40:src/../h/kern_reg_util.h **** }
  41:src/../h/kern_reg_util.h **** 
  42:src/../h/kern_reg_util.h **** inline uint64 r_a2()
  43:src/../h/kern_reg_util.h **** {
  44:src/../h/kern_reg_util.h ****     uint64 volatile a2;
  45:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a2], a2" : [a2] "=r"(a2));
  46:src/../h/kern_reg_util.h ****     return a2;
  47:src/../h/kern_reg_util.h **** }
  48:src/../h/kern_reg_util.h **** 
  49:src/../h/kern_reg_util.h **** inline uint64 r_a3()
  50:src/../h/kern_reg_util.h **** {
  51:src/../h/kern_reg_util.h ****     uint64 volatile a3;
  52:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a3], a3" : [a3] "=r"(a3));
  53:src/../h/kern_reg_util.h ****     return a3;
  54:src/../h/kern_reg_util.h **** }
  55:src/../h/kern_reg_util.h **** 
  56:src/../h/kern_reg_util.h **** inline uint64 r_a4()
  57:src/../h/kern_reg_util.h **** {
  58:src/../h/kern_reg_util.h ****     uint64 volatile a4;
  59:src/../h/kern_reg_util.h ****     __asm__ volatile ("mv %[a4], a4" : [a4] "=r"(a4));
  60:src/../h/kern_reg_util.h ****     return a4;
  61:src/../h/kern_reg_util.h **** }
  62:src/../h/kern_reg_util.h **** 
  63:src/../h/kern_reg_util.h **** inline uint64 r_scause()
  64:src/../h/kern_reg_util.h **** {
  65:src/../h/kern_reg_util.h ****     uint64 volatile scause;
  66:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  67:src/../h/kern_reg_util.h ****     return scause;
GAS LISTING /tmp/ccMs1K2h.s 			page 4


  68:src/../h/kern_reg_util.h **** }
  69:src/../h/kern_reg_util.h **** 
  70:src/../h/kern_reg_util.h **** inline void w_scause(uint64 scause)
  71:src/../h/kern_reg_util.h **** {
  72:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  73:src/../h/kern_reg_util.h **** }
  74:src/../h/kern_reg_util.h **** 
  75:src/../h/kern_reg_util.h **** inline uint64 r_sepc()
  76:src/../h/kern_reg_util.h **** {
  77:src/../h/kern_reg_util.h ****     uint64 volatile sepc;
  78:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  79:src/../h/kern_reg_util.h ****     return sepc;
  80:src/../h/kern_reg_util.h **** }
  81:src/../h/kern_reg_util.h **** 
  82:src/../h/kern_reg_util.h **** inline void w_sepc(uint64 sepc)
  83:src/../h/kern_reg_util.h **** {
  84:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  85:src/../h/kern_reg_util.h **** }
  86:src/../h/kern_reg_util.h **** 
  87:src/../h/kern_reg_util.h **** inline uint64 r_stvec()
  88:src/../h/kern_reg_util.h **** {
  89:src/../h/kern_reg_util.h ****     uint64 volatile stvec;
  90:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  91:src/../h/kern_reg_util.h ****     return stvec;
  92:src/../h/kern_reg_util.h **** }
  93:src/../h/kern_reg_util.h **** 
  94:src/../h/kern_reg_util.h **** inline void w_stvec(uint64 stvec)
  95:src/../h/kern_reg_util.h **** {
  96:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  68              		.loc 2 96 5
  69              	#APP
  70              	# 96 "src/../h/kern_reg_util.h" 1
  97              	}
  71              		csrw stvec, a5
  72              	# 0 "" 2
  73              	.LVL2:
  74              	#NO_APP
  75              	.LBE85:
  76              	.LBE84:
  39:src/kern_interrupts.c ****     ms_sstatus(SSTATUS_SIE);
  77              		.loc 1 39 5
  78              	.LBB86:
  79              	.LBB87:
  98:src/../h/kern_reg_util.h **** 
  99:src/../h/kern_reg_util.h **** inline uint64 r_stval()
 100:src/../h/kern_reg_util.h **** {
 101:src/../h/kern_reg_util.h ****     uint64 volatile stval;
 102:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 103:src/../h/kern_reg_util.h ****     return stval;
 104:src/../h/kern_reg_util.h **** }
 105:src/../h/kern_reg_util.h **** 
 106:src/../h/kern_reg_util.h **** inline void w_stval(uint64 stval)
 107:src/../h/kern_reg_util.h **** {
 108:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 109:src/../h/kern_reg_util.h **** }
 110:src/../h/kern_reg_util.h **** 
 111:src/../h/kern_reg_util.h **** inline void ms_sip(uint64 mask)
GAS LISTING /tmp/ccMs1K2h.s 			page 5


 112:src/../h/kern_reg_util.h **** {
 113:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 114:src/../h/kern_reg_util.h **** }
 115:src/../h/kern_reg_util.h **** 
 116:src/../h/kern_reg_util.h **** inline void mc_sip(uint64 mask)
 117:src/../h/kern_reg_util.h **** {
 118:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 119:src/../h/kern_reg_util.h **** }
 120:src/../h/kern_reg_util.h **** 
 121:src/../h/kern_reg_util.h **** inline uint64 r_sip()
 122:src/../h/kern_reg_util.h **** {
 123:src/../h/kern_reg_util.h ****     uint64 volatile sip;
 124:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 125:src/../h/kern_reg_util.h ****     return sip;
 126:src/../h/kern_reg_util.h **** }
 127:src/../h/kern_reg_util.h **** 
 128:src/../h/kern_reg_util.h **** inline void w_sip(uint64 sip)
 129:src/../h/kern_reg_util.h **** {
 130:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 131:src/../h/kern_reg_util.h **** }
 132:src/../h/kern_reg_util.h **** 
 133:src/../h/kern_reg_util.h **** inline void ms_sstatus(uint64 mask)
 134:src/../h/kern_reg_util.h **** {
 135:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  80              		.loc 2 135 5
  81 0058 93072000 		li	a5,2
  82              	#APP
  83              	# 135 "src/../h/kern_reg_util.h" 1
 136              	}
  84              		csrs sstatus, a5
  85              	# 0 "" 2
  86              	.LVL3:
  87              	#NO_APP
  88              	.LBE87:
  89              	.LBE86:
  40:src/kern_interrupts.c **** }
  90              		.loc 1 40 1 is_stmt 0
  91 0060 03348100 		ld	s0,8(sp)
  92              		.cfi_restore 8
  93              		.cfi_def_cfa 2, 16
  94 0064 13010101 		addi	sp,sp,16
  95              		.cfi_def_cfa_offset 0
  96 0068 67800000 		jr	ra
  97              		.cfi_endproc
  98              	.LFE23:
 100              		.align	2
 101              		.globl	handleEcall
 103              	handleEcall:
 104              	.LFB24:
  41:src/kern_interrupts.c **** 
  42:src/kern_interrupts.c **** 
  43:src/kern_interrupts.c **** int time=0;
  44:src/kern_interrupts.c **** 
  45:src/kern_interrupts.c **** void handleEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4) {
 105              		.loc 1 45 73 is_stmt 1
 106              		.cfi_startproc
 107              	.LVL4:
GAS LISTING /tmp/ccMs1K2h.s 			page 6


 108 006c 130101F5 		addi	sp,sp,-176
 109              		.cfi_def_cfa_offset 176
 110 0070 2334110A 		sd	ra,168(sp)
 111 0074 2330810A 		sd	s0,160(sp)
 112 0078 233C9108 		sd	s1,152(sp)
 113 007c 23382109 		sd	s2,144(sp)
 114              		.cfi_offset 1, -8
 115              		.cfi_offset 8, -16
 116              		.cfi_offset 9, -24
 117              		.cfi_offset 18, -32
 118 0080 1304010B 		addi	s0,sp,176
 119              		.cfi_def_cfa 8, 0
 120 0084 13090600 		mv	s2,a2
 121 0088 13860600 		mv	a2,a3
 122              	.LVL5:
  46:src/kern_interrupts.c ****     /*uint64 a0, a1, a2, a3, a4;
  47:src/kern_interrupts.c ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
  48:src/kern_interrupts.c ****     __asm__ volatile ("mv %[a1], a1" : [a1] "=r"(a1));
  49:src/kern_interrupts.c ****     __asm__ volatile ("mv %[a2], a2" : [a2] "=r"(a2));
  50:src/kern_interrupts.c ****     __asm__ volatile ("mv %[a3], a3" : [a3] "=r"(a3));
  51:src/kern_interrupts.c ****     __asm__ volatile ("mv %[a4], a4" : [a4] "=r"(a4));
  52:src/kern_interrupts.c ****      */
  53:src/kern_interrupts.c ****     uint64 scause = r_scause();
 123              		.loc 1 53 5
 124              	.LBB88:
 125              	.LBB89:
  65:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 126              		.loc 2 65 5
  66:src/../h/kern_reg_util.h ****     return scause;
 127              		.loc 2 66 5
 128              	#APP
 129              	# 66 "src/../h/kern_reg_util.h" 1
 130              		csrr a5, scause
 131              	# 0 "" 2
 132              	#NO_APP
 133 0090 2338F4F8 		sd	a5,-112(s0)
  67:src/../h/kern_reg_util.h **** }
 134              		.loc 2 67 5
  67:src/../h/kern_reg_util.h **** }
 135              		.loc 2 67 12 is_stmt 0
 136 0094 833704F9 		ld	a5,-112(s0)
 137              	.LVL6:
 138              	.LBE89:
 139              	.LBE88:
  54:src/kern_interrupts.c ****     if (scause == INTR_USER_ECALL || scause == INTR_KERNEL_ECALL) {
 140              		.loc 1 54 5 is_stmt 1
 141              		.loc 1 54 35 is_stmt 0
 142 0098 938787FF 		addi	a5,a5,-8
 143              	.LVL7:
 144              		.loc 1 54 8
 145 009c 93061000 		li	a3,1
 146              	.LVL8:
 147 00a0 63FEF600 		bleu	a5,a3,.L23
 148              	.LVL9:
 149              	.L5:
  55:src/kern_interrupts.c ****         uint64 retval;
  56:src/kern_interrupts.c ****         uint64 syscall_num = a0;
GAS LISTING /tmp/ccMs1K2h.s 			page 7


  57:src/kern_interrupts.c ****         uint64 sepc = r_sepc() + 4;
  58:src/kern_interrupts.c ****         w_sepc(sepc);
  59:src/kern_interrupts.c ****         switch (syscall_num) {
  60:src/kern_interrupts.c ****             case MEM_ALLOC: {
  61:src/kern_interrupts.c ****                 uint64 size = a1;
  62:src/kern_interrupts.c ****                 retval = (uint64) kern_mem_alloc(size);
  63:src/kern_interrupts.c ****                 w_a0(retval);
  64:src/kern_interrupts.c ****                 break;
  65:src/kern_interrupts.c ****             }
  66:src/kern_interrupts.c **** 
  67:src/kern_interrupts.c ****             case MEM_FREE: {
  68:src/kern_interrupts.c ****                 uint64 addr = a1;
  69:src/kern_interrupts.c ****                 retval = (uint64) kern_mem_free((void *) addr);
  70:src/kern_interrupts.c ****                 w_a0(retval);
  71:src/kern_interrupts.c ****                 break;
  72:src/kern_interrupts.c ****             }
  73:src/kern_interrupts.c **** 
  74:src/kern_interrupts.c ****             case THREAD_CREATE: {
  75:src/kern_interrupts.c ****                 uint64 handle = a1;
  76:src/kern_interrupts.c ****                 uint64 start_routine = a2;
  77:src/kern_interrupts.c ****                 uint64 arg = a3;
  78:src/kern_interrupts.c ****                 uint64 stack = a4;
  79:src/kern_interrupts.c ****                 retval = (uint64) kern_thread_create((thread_t *) handle,
  80:src/kern_interrupts.c ****                                                      (void (*)(void *)) start_routine,
  81:src/kern_interrupts.c ****                                                      (void *) arg,
  82:src/kern_interrupts.c ****                                                      (void *) stack);
  83:src/kern_interrupts.c ****                 (*(thread_t *) handle)->endTime = SYSTEM_TIME + DEFAULT_TIME_SLICE;
  84:src/kern_interrupts.c ****                 w_a0(retval);
  85:src/kern_interrupts.c ****                 break;
  86:src/kern_interrupts.c ****             }
  87:src/kern_interrupts.c **** 
  88:src/kern_interrupts.c ****             case THREAD_DISPATCH: {
  89:src/kern_interrupts.c ****                 uint64 volatile sstatus = r_sstatus();
  90:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
  91:src/kern_interrupts.c ****                 kern_thread_dispatch();
  92:src/kern_interrupts.c ****                 w_sstatus(sstatus);
  93:src/kern_interrupts.c ****                 w_sepc(v_sepc);
  94:src/kern_interrupts.c ****                 running->endTime = time + running->timeslice;
  95:src/kern_interrupts.c ****                 break;
  96:src/kern_interrupts.c ****             }
  97:src/kern_interrupts.c **** 
  98:src/kern_interrupts.c ****             case THREAD_JOIN: {
  99:src/kern_interrupts.c ****                 thread_t handle = (thread_t) a1;
 100:src/kern_interrupts.c ****                 uint64 volatile sstatus = r_sstatus();
 101:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 102:src/kern_interrupts.c ****                 kern_thread_join(handle);
 103:src/kern_interrupts.c ****                 w_sstatus(sstatus);
 104:src/kern_interrupts.c ****                 w_sepc(v_sepc);
 105:src/kern_interrupts.c ****                 running->endTime = time + running->timeslice;
 106:src/kern_interrupts.c ****                 break;
 107:src/kern_interrupts.c ****             }
 108:src/kern_interrupts.c **** 
 109:src/kern_interrupts.c ****             case THREAD_EXIT: {
 110:src/kern_interrupts.c ****                 kern_thread_end_running();
 111:src/kern_interrupts.c ****             }
 112:src/kern_interrupts.c **** 
 113:src/kern_interrupts.c ****             case SEM_OPEN: {
GAS LISTING /tmp/ccMs1K2h.s 			page 8


 114:src/kern_interrupts.c ****                 sem_t *handle = (sem_t *) a1;
 115:src/kern_interrupts.c ****                 uint64 init = a2;
 116:src/kern_interrupts.c ****                 retval = kern_sem_open(handle, init);
 117:src/kern_interrupts.c ****                 w_a0(retval);
 118:src/kern_interrupts.c ****                 break;
 119:src/kern_interrupts.c ****             }
 120:src/kern_interrupts.c **** 
 121:src/kern_interrupts.c ****             case SEM_CLOSE: {
 122:src/kern_interrupts.c ****                 sem_t handle = (sem_t) a1;
 123:src/kern_interrupts.c ****                 retval = kern_sem_close(handle);
 124:src/kern_interrupts.c ****                 w_a0(retval);
 125:src/kern_interrupts.c ****                 break;
 126:src/kern_interrupts.c ****             }
 127:src/kern_interrupts.c **** 
 128:src/kern_interrupts.c ****             case SEM_SIGNAL: {
 129:src/kern_interrupts.c ****                 sem_t handle = (sem_t) a1;
 130:src/kern_interrupts.c ****                 kern_sem_signal(handle);
 131:src/kern_interrupts.c ****                 retval = 0;
 132:src/kern_interrupts.c ****                 w_a0(retval);
 133:src/kern_interrupts.c ****                 break;
 134:src/kern_interrupts.c ****             }
 135:src/kern_interrupts.c **** 
 136:src/kern_interrupts.c ****             case SEM_WAIT: {
 137:src/kern_interrupts.c ****                 sem_t handle = (sem_t) a1;
 138:src/kern_interrupts.c ****                 int res = kern_sem_wait(handle);
 139:src/kern_interrupts.c ****                 if (res == 1) retval = 0;
 140:src/kern_interrupts.c ****                 else {
 141:src/kern_interrupts.c ****                     uint64 volatile sstatus = r_sstatus();
 142:src/kern_interrupts.c ****                     uint64 volatile v_sepc = r_sepc();
 143:src/kern_interrupts.c ****                     kern_thread_dispatch();
 144:src/kern_interrupts.c ****                     w_sstatus(sstatus);
 145:src/kern_interrupts.c ****                     w_sepc(v_sepc);
 146:src/kern_interrupts.c ****                     running->endTime = time + running->timeslice;
 147:src/kern_interrupts.c ****                     if (running->mailbox == 0) retval = 0;
 148:src/kern_interrupts.c ****                     else retval = -1;
 149:src/kern_interrupts.c ****                 }
 150:src/kern_interrupts.c ****                 w_a0(retval);
 151:src/kern_interrupts.c ****                 break;
 152:src/kern_interrupts.c ****             }
 153:src/kern_interrupts.c **** 
 154:src/kern_interrupts.c ****             case TIME_SLEEP : {
 155:src/kern_interrupts.c ****                 uint64 period = a1;
 156:src/kern_interrupts.c ****                 running->status = SLEEPING;
 157:src/kern_interrupts.c ****                 running->endTime = SYSTEM_TIME + period;
 158:src/kern_interrupts.c ****                 uint64 volatile sstatus = r_sstatus();
 159:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 160:src/kern_interrupts.c ****                 kern_thread_dispatch();
 161:src/kern_interrupts.c ****                 w_sstatus(sstatus);
 162:src/kern_interrupts.c ****                 w_sepc(v_sepc);
 163:src/kern_interrupts.c ****                 running->endTime = time + running->timeslice;
 164:src/kern_interrupts.c ****             }
 165:src/kern_interrupts.c **** 
 166:src/kern_interrupts.c **** 
 167:src/kern_interrupts.c ****         }
 168:src/kern_interrupts.c ****     }
 169:src/kern_interrupts.c **** }
 150              		.loc 1 169 1
GAS LISTING /tmp/ccMs1K2h.s 			page 9


 151 00a4 8330810A 		ld	ra,168(sp)
 152              		.cfi_remember_state
 153              		.cfi_restore 1
 154 00a8 0334010A 		ld	s0,160(sp)
 155              		.cfi_restore 8
 156              		.cfi_def_cfa 2, 176
 157 00ac 83348109 		ld	s1,152(sp)
 158              		.cfi_restore 9
 159 00b0 03390109 		ld	s2,144(sp)
 160              		.cfi_restore 18
 161 00b4 1301010B 		addi	sp,sp,176
 162              		.cfi_def_cfa_offset 0
 163 00b8 67800000 		jr	ra
 164              	.LVL10:
 165              	.L23:
 166              		.cfi_restore_state
 167 00bc 93840500 		mv	s1,a1
 168              	.LBB90:
  55:src/kern_interrupts.c ****         uint64 retval;
 169              		.loc 1 55 9 is_stmt 1
  56:src/kern_interrupts.c ****         uint64 sepc = r_sepc() + 4;
 170              		.loc 1 56 9
 171              	.LVL11:
  57:src/kern_interrupts.c ****         w_sepc(sepc);
 172              		.loc 1 57 9
 173              	.LBB91:
 174              	.LBB92:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 175              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 176              		.loc 2 78 5
 177              	#APP
 178              	# 78 "src/../h/kern_reg_util.h" 1
 179              		csrr a5, sepc
 180              	# 0 "" 2
 181              	.LVL12:
 182              	#NO_APP
 183 00c4 233CF4F8 		sd	a5,-104(s0)
  79:src/../h/kern_reg_util.h **** }
 184              		.loc 2 79 5
  79:src/../h/kern_reg_util.h **** }
 185              		.loc 2 79 12 is_stmt 0
 186 00c8 833784F9 		ld	a5,-104(s0)
 187              	.LBE92:
 188              	.LBE91:
  57:src/kern_interrupts.c ****         w_sepc(sepc);
 189              		.loc 1 57 16
 190 00cc 93874700 		addi	a5,a5,4
 191              	.LVL13:
  58:src/kern_interrupts.c ****         switch (syscall_num) {
 192              		.loc 1 58 9 is_stmt 1
 193              	.LBB93:
 194              	.LBB94:
  84:src/../h/kern_reg_util.h **** }
 195              		.loc 2 84 5
 196              	#APP
 197              	# 84 "src/../h/kern_reg_util.h" 1
GAS LISTING /tmp/ccMs1K2h.s 			page 10


 198              		csrw sepc, a5
 199              	# 0 "" 2
 200              	.LVL14:
 201              	#NO_APP
 202              	.LBE94:
 203              	.LBE93:
  59:src/kern_interrupts.c ****             case MEM_ALLOC: {
 204              		.loc 1 59 9
 205 00d4 93071003 		li	a5,49
 206              	.LVL15:
 207 00d8 E3E6A7FC 		bgtu	a0,a5,.L5
 208              	.LVL16:
 209 00dc 13152500 		slli	a0,a0,2
 210              	.LVL17:
 211 00e0 97060000 		lla	a3,.L8
 211      93860600 
 212 00e8 3305D500 		add	a0,a0,a3
 213 00ec 83270500 		lw	a5,0(a0)
 214 00f0 B387D700 		add	a5,a5,a3
 215 00f4 67800700 		jr	a5
 216              		.section	.rodata
 217              		.align	2
 218              		.align	2
 219              	.L8:
 220 0000 00000000 		.word	.L5-.L8
 221 0004 00000000 		.word	.L18-.L8
 222 0008 00000000 		.word	.L17-.L8
 223 000c 00000000 		.word	.L5-.L8
 224 0010 00000000 		.word	.L5-.L8
 225 0014 00000000 		.word	.L5-.L8
 226 0018 00000000 		.word	.L5-.L8
 227 001c 00000000 		.word	.L5-.L8
 228 0020 00000000 		.word	.L5-.L8
 229 0024 00000000 		.word	.L5-.L8
 230 0028 00000000 		.word	.L5-.L8
 231 002c 00000000 		.word	.L5-.L8
 232 0030 00000000 		.word	.L5-.L8
 233 0034 00000000 		.word	.L5-.L8
 234 0038 00000000 		.word	.L5-.L8
 235 003c 00000000 		.word	.L5-.L8
 236 0040 00000000 		.word	.L5-.L8
 237 0044 00000000 		.word	.L16-.L8
 238 0048 00000000 		.word	.L15-.L8
 239 004c 00000000 		.word	.L14-.L8
 240 0050 00000000 		.word	.L13-.L8
 241 0054 00000000 		.word	.L5-.L8
 242 0058 00000000 		.word	.L5-.L8
 243 005c 00000000 		.word	.L5-.L8
 244 0060 00000000 		.word	.L5-.L8
 245 0064 00000000 		.word	.L5-.L8
 246 0068 00000000 		.word	.L5-.L8
 247 006c 00000000 		.word	.L5-.L8
 248 0070 00000000 		.word	.L5-.L8
 249 0074 00000000 		.word	.L5-.L8
 250 0078 00000000 		.word	.L5-.L8
 251 007c 00000000 		.word	.L5-.L8
 252 0080 00000000 		.word	.L5-.L8
GAS LISTING /tmp/ccMs1K2h.s 			page 11


 253 0084 00000000 		.word	.L12-.L8
 254 0088 00000000 		.word	.L11-.L8
 255 008c 00000000 		.word	.L10-.L8
 256 0090 00000000 		.word	.L9-.L8
 257 0094 00000000 		.word	.L5-.L8
 258 0098 00000000 		.word	.L5-.L8
 259 009c 00000000 		.word	.L5-.L8
 260 00a0 00000000 		.word	.L5-.L8
 261 00a4 00000000 		.word	.L5-.L8
 262 00a8 00000000 		.word	.L5-.L8
 263 00ac 00000000 		.word	.L5-.L8
 264 00b0 00000000 		.word	.L5-.L8
 265 00b4 00000000 		.word	.L5-.L8
 266 00b8 00000000 		.word	.L5-.L8
 267 00bc 00000000 		.word	.L5-.L8
 268 00c0 00000000 		.word	.L5-.L8
 269 00c4 00000000 		.word	.L7-.L8
 270              		.text
 271              	.L18:
 272              	.LBB95:
  61:src/kern_interrupts.c ****                 retval = (uint64) kern_mem_alloc(size);
 273              		.loc 1 61 17
 274              	.LVL18:
  62:src/kern_interrupts.c ****                 w_a0(retval);
 275              		.loc 1 62 17
  62:src/kern_interrupts.c ****                 w_a0(retval);
 276              		.loc 1 62 35 is_stmt 0
 277 00f8 1B850500 		sext.w	a0,a1
 278 00fc 97000000 		call	kern_mem_alloc
 278      E7800000 
 279              	.LVL19:
  63:src/kern_interrupts.c ****                 break;
 280              		.loc 1 63 17 is_stmt 1
 281              	.LBB96:
 282              	.LBB97:
  32:src/../h/kern_reg_util.h **** }
 283              		.loc 2 32 5
 284              	#APP
 285              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 286              		mv a0, a0
 287              	# 0 "" 2
 288              		.loc 2 33 1 is_stmt 0
 289              	#NO_APP
 290 0108 6FF0DFF9 		j	.L5
 291              	.LVL20:
 292              	.L17:
 293              	.LBE97:
 294              	.LBE96:
 295              	.LBE95:
 296              	.LBB98:
  68:src/kern_interrupts.c ****                 retval = (uint64) kern_mem_free((void *) addr);
 297              		.loc 1 68 17 is_stmt 1
  69:src/kern_interrupts.c ****                 w_a0(retval);
 298              		.loc 1 69 17
  69:src/kern_interrupts.c ****                 w_a0(retval);
 299              		.loc 1 69 35 is_stmt 0
GAS LISTING /tmp/ccMs1K2h.s 			page 12


 300 010c 13850500 		mv	a0,a1
 301 0110 97000000 		call	kern_mem_free
 301      E7800000 
 302              	.LVL21:
  70:src/kern_interrupts.c ****                 break;
 303              		.loc 1 70 17 is_stmt 1
 304              	.LBB99:
 305              	.LBB100:
  32:src/../h/kern_reg_util.h **** }
 306              		.loc 2 32 5
 307              	#APP
 308              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 309              		mv a0, a0
 310              	# 0 "" 2
 311              		.loc 2 33 1 is_stmt 0
 312              	#NO_APP
 313 011c 6FF09FF8 		j	.L5
 314              	.LVL22:
 315              	.L16:
 316              	.LBE100:
 317              	.LBE99:
 318              	.LBE98:
 319              	.LBB101:
  75:src/kern_interrupts.c ****                 uint64 start_routine = a2;
 320              		.loc 1 75 17 is_stmt 1
  76:src/kern_interrupts.c ****                 uint64 arg = a3;
 321              		.loc 1 76 17
  77:src/kern_interrupts.c ****                 uint64 stack = a4;
 322              		.loc 1 77 17
  78:src/kern_interrupts.c ****                 retval = (uint64) kern_thread_create((thread_t *) handle,
 323              		.loc 1 78 17
  79:src/kern_interrupts.c ****                                                      (void (*)(void *)) start_routine,
 324              		.loc 1 79 17
  79:src/kern_interrupts.c ****                                                      (void (*)(void *)) start_routine,
 325              		.loc 1 79 35 is_stmt 0
 326 0120 93060700 		mv	a3,a4
 327 0124 93050900 		mv	a1,s2
 328 0128 13850400 		mv	a0,s1
 329 012c 97000000 		call	kern_thread_create
 329      E7800000 
 330              	.LVL23:
  83:src/kern_interrupts.c ****                 w_a0(retval);
 331              		.loc 1 83 17 is_stmt 1
  83:src/kern_interrupts.c ****                 w_a0(retval);
 332              		.loc 1 83 18 is_stmt 0
 333 0134 03B70400 		ld	a4,0(s1)
  83:src/kern_interrupts.c ****                 w_a0(retval);
 334              		.loc 1 83 63
 335 0138 97070000 		ld	a5,SYSTEM_TIME
 335      83B70700 
 336 0140 93872700 		addi	a5,a5,2
  83:src/kern_interrupts.c ****                 w_a0(retval);
 337              		.loc 1 83 49
 338 0144 233CF702 		sd	a5,56(a4)
  84:src/kern_interrupts.c ****                 break;
 339              		.loc 1 84 17 is_stmt 1
GAS LISTING /tmp/ccMs1K2h.s 			page 13


 340              	.LVL24:
 341              	.LBB102:
 342              	.LBB103:
  32:src/../h/kern_reg_util.h **** }
 343              		.loc 2 32 5
 344              	#APP
 345              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 346              		mv a0, a0
 347              	# 0 "" 2
 348              		.loc 2 33 1 is_stmt 0
 349              	#NO_APP
 350 014c 6FF09FF5 		j	.L5
 351              	.LVL25:
 352              	.L14:
 353              	.LBE103:
 354              	.LBE102:
 355              	.LBE101:
 356              	.LBB104:
  89:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 357              		.loc 1 89 17 is_stmt 1
 358              	.LBB105:
 359              	.LBB106:
 137:src/../h/kern_reg_util.h **** 
 138:src/../h/kern_reg_util.h **** inline void mc_sstatus(uint64 mask)
 139:src/../h/kern_reg_util.h **** {
 140:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 141:src/../h/kern_reg_util.h **** }
 142:src/../h/kern_reg_util.h **** 
 143:src/../h/kern_reg_util.h **** inline uint64 r_sstatus()
 144:src/../h/kern_reg_util.h **** {
 145:src/../h/kern_reg_util.h ****     uint64 volatile sstatus;
 360              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 361              		.loc 2 146 5
 362              	#APP
 363              	# 146 "src/../h/kern_reg_util.h" 1
 147              	    return sstatus;
 364              		csrr a5, sstatus
 365              	# 0 "" 2
 366              	#NO_APP
 367 0154 2334F4FA 		sd	a5,-88(s0)
 368              		.loc 2 147 5
 369              		.loc 2 147 12 is_stmt 0
 370 0158 833784FA 		ld	a5,-88(s0)
 371              	.LBE106:
 372              	.LBE105:
  89:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 373              		.loc 1 89 33
 374 015c 2338F4F4 		sd	a5,-176(s0)
  90:src/kern_interrupts.c ****                 kern_thread_dispatch();
 375              		.loc 1 90 17 is_stmt 1
 376              	.LBB107:
 377              	.LBB108:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 378              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
GAS LISTING /tmp/ccMs1K2h.s 			page 14


 379              		.loc 2 78 5
 380              	#APP
 381              	# 78 "src/../h/kern_reg_util.h" 1
 382              		csrr a5, sepc
 383              	# 0 "" 2
 384              	#NO_APP
 385 0164 2330F4FA 		sd	a5,-96(s0)
  79:src/../h/kern_reg_util.h **** }
 386              		.loc 2 79 5
  79:src/../h/kern_reg_util.h **** }
 387              		.loc 2 79 12 is_stmt 0
 388 0168 833704FA 		ld	a5,-96(s0)
 389              	.LBE108:
 390              	.LBE107:
  90:src/kern_interrupts.c ****                 kern_thread_dispatch();
 391              		.loc 1 90 33
 392 016c 233CF4F4 		sd	a5,-168(s0)
  91:src/kern_interrupts.c ****                 w_sstatus(sstatus);
 393              		.loc 1 91 17 is_stmt 1
 394 0170 97000000 		call	kern_thread_dispatch
 394      E7800000 
 395              	.LVL26:
  92:src/kern_interrupts.c ****                 w_sepc(v_sepc);
 396              		.loc 1 92 17
 397 0178 833704F5 		ld	a5,-176(s0)
 398              	.LVL27:
 399              	.LBB109:
 400              	.LBB110:
 148:src/../h/kern_reg_util.h **** }
 149:src/../h/kern_reg_util.h **** 
 150:src/../h/kern_reg_util.h **** inline void w_sstatus(uint64 sstatus)
 151:src/../h/kern_reg_util.h **** {
 152:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 401              		.loc 2 152 5
 402              	#APP
 403              	# 152 "src/../h/kern_reg_util.h" 1
 153              	}
 404              		csrw sstatus, a5
 405              	# 0 "" 2
 406              	.LVL28:
 407              	#NO_APP
 408              	.LBE110:
 409              	.LBE109:
  93:src/kern_interrupts.c ****                 running->endTime = time + running->timeslice;
 410              		.loc 1 93 17
 411 0180 833784F5 		ld	a5,-168(s0)
 412              	.LVL29:
 413              	.LBB111:
 414              	.LBB112:
  84:src/../h/kern_reg_util.h **** }
 415              		.loc 2 84 5
 416              	#APP
 417              	# 84 "src/../h/kern_reg_util.h" 1
 418              		csrw sepc, a5
 419              	# 0 "" 2
 420              	.LVL30:
 421              	#NO_APP
GAS LISTING /tmp/ccMs1K2h.s 			page 15


 422              	.LBE112:
 423              	.LBE111:
  94:src/kern_interrupts.c ****                 break;
 424              		.loc 1 94 17
  94:src/kern_interrupts.c ****                 break;
 425              		.loc 1 94 50 is_stmt 0
 426 0188 17070000 		ld	a4,running
 426      03370700 
 427 0190 83360703 		ld	a3,48(a4)
  94:src/kern_interrupts.c ****                 break;
 428              		.loc 1 94 41
 429 0194 97070000 		lw	a5,time
 429      83A70700 
 430 019c B387D700 		add	a5,a5,a3
  94:src/kern_interrupts.c ****                 break;
 431              		.loc 1 94 34
 432 01a0 233CF702 		sd	a5,56(a4)
  95:src/kern_interrupts.c ****             }
 433              		.loc 1 95 17 is_stmt 1
 434 01a4 6FF01FF0 		j	.L5
 435              	.LVL31:
 436              	.L13:
 437              	.LBE104:
 438              	.LBB113:
  99:src/kern_interrupts.c ****                 uint64 volatile sstatus = r_sstatus();
 439              		.loc 1 99 17
 100:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 440              		.loc 1 100 17
 441              	.LBB114:
 442              	.LBB115:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 443              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 444              		.loc 2 146 5
 445              	#APP
 446              	# 146 "src/../h/kern_reg_util.h" 1
 447              		csrr a5, sstatus
 448              	# 0 "" 2
 449              	#NO_APP
 450 01ac 233CF4FA 		sd	a5,-72(s0)
 147:src/../h/kern_reg_util.h **** }
 451              		.loc 2 147 5
 147:src/../h/kern_reg_util.h **** }
 452              		.loc 2 147 12 is_stmt 0
 453 01b0 833784FB 		ld	a5,-72(s0)
 454              	.LBE115:
 455              	.LBE114:
 100:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 456              		.loc 1 100 33
 457 01b4 2330F4F6 		sd	a5,-160(s0)
 101:src/kern_interrupts.c ****                 kern_thread_join(handle);
 458              		.loc 1 101 17 is_stmt 1
 459              	.LBB116:
 460              	.LBB117:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 461              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
GAS LISTING /tmp/ccMs1K2h.s 			page 16


 462              		.loc 2 78 5
 463              	#APP
 464              	# 78 "src/../h/kern_reg_util.h" 1
 465              		csrr a5, sepc
 466              	# 0 "" 2
 467              	#NO_APP
 468 01bc 2338F4FA 		sd	a5,-80(s0)
  79:src/../h/kern_reg_util.h **** }
 469              		.loc 2 79 5
  79:src/../h/kern_reg_util.h **** }
 470              		.loc 2 79 12 is_stmt 0
 471 01c0 833704FB 		ld	a5,-80(s0)
 472              	.LBE117:
 473              	.LBE116:
 101:src/kern_interrupts.c ****                 kern_thread_join(handle);
 474              		.loc 1 101 33
 475 01c4 2334F4F6 		sd	a5,-152(s0)
 102:src/kern_interrupts.c ****                 w_sstatus(sstatus);
 476              		.loc 1 102 17 is_stmt 1
 477 01c8 13850500 		mv	a0,a1
 478 01cc 97000000 		call	kern_thread_join
 478      E7800000 
 479              	.LVL32:
 103:src/kern_interrupts.c ****                 w_sepc(v_sepc);
 480              		.loc 1 103 17
 481 01d4 833704F6 		ld	a5,-160(s0)
 482              	.LVL33:
 483              	.LBB118:
 484              	.LBB119:
 152:src/../h/kern_reg_util.h **** }
 485              		.loc 2 152 5
 486              	#APP
 487              	# 152 "src/../h/kern_reg_util.h" 1
 488              		csrw sstatus, a5
 489              	# 0 "" 2
 490              	.LVL34:
 491              	#NO_APP
 492              	.LBE119:
 493              	.LBE118:
 104:src/kern_interrupts.c ****                 running->endTime = time + running->timeslice;
 494              		.loc 1 104 17
 495 01dc 833784F6 		ld	a5,-152(s0)
 496              	.LVL35:
 497              	.LBB120:
 498              	.LBB121:
  84:src/../h/kern_reg_util.h **** }
 499              		.loc 2 84 5
 500              	#APP
 501              	# 84 "src/../h/kern_reg_util.h" 1
 502              		csrw sepc, a5
 503              	# 0 "" 2
 504              	.LVL36:
 505              	#NO_APP
 506              	.LBE121:
 507              	.LBE120:
 105:src/kern_interrupts.c ****                 break;
 508              		.loc 1 105 17
GAS LISTING /tmp/ccMs1K2h.s 			page 17


 105:src/kern_interrupts.c ****                 break;
 509              		.loc 1 105 50 is_stmt 0
 510 01e4 17070000 		ld	a4,running
 510      03370700 
 511 01ec 83360703 		ld	a3,48(a4)
 105:src/kern_interrupts.c ****                 break;
 512              		.loc 1 105 41
 513 01f0 97070000 		lw	a5,time
 513      83A70700 
 514 01f8 B387D700 		add	a5,a5,a3
 105:src/kern_interrupts.c ****                 break;
 515              		.loc 1 105 34
 516 01fc 233CF702 		sd	a5,56(a4)
 106:src/kern_interrupts.c ****             }
 517              		.loc 1 106 17 is_stmt 1
 518 0200 6FF05FEA 		j	.L5
 519              	.LVL37:
 520              	.L15:
 521              	.LBE113:
 110:src/kern_interrupts.c ****             }
 522              		.loc 1 110 17
 523 0204 97000000 		call	kern_thread_end_running
 523      E7800000 
 524              	.LVL38:
 525              	.L12:
 526              	.LBB122:
 114:src/kern_interrupts.c ****                 uint64 init = a2;
 527              		.loc 1 114 17
 115:src/kern_interrupts.c ****                 retval = kern_sem_open(handle, init);
 528              		.loc 1 115 17
 116:src/kern_interrupts.c ****                 w_a0(retval);
 529              		.loc 1 116 17
 116:src/kern_interrupts.c ****                 w_a0(retval);
 530              		.loc 1 116 26 is_stmt 0
 531 020c 9B050900 		sext.w	a1,s2
 532 0210 13850400 		mv	a0,s1
 533 0214 97000000 		call	kern_sem_open
 533      E7800000 
 534              	.LVL39:
 117:src/kern_interrupts.c ****                 break;
 535              		.loc 1 117 17 is_stmt 1
 536              	.LBB123:
 537              	.LBB124:
  32:src/../h/kern_reg_util.h **** }
 538              		.loc 2 32 5
 539              	#APP
 540              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 541              		mv a0, a0
 542              	# 0 "" 2
 543              		.loc 2 33 1 is_stmt 0
 544              	#NO_APP
 545 0220 6FF05FE8 		j	.L5
 546              	.LVL40:
 547              	.L11:
 548              	.LBE124:
 549              	.LBE123:
GAS LISTING /tmp/ccMs1K2h.s 			page 18


 550              	.LBE122:
 551              	.LBB125:
 122:src/kern_interrupts.c ****                 retval = kern_sem_close(handle);
 552              		.loc 1 122 17 is_stmt 1
 123:src/kern_interrupts.c ****                 w_a0(retval);
 553              		.loc 1 123 17
 123:src/kern_interrupts.c ****                 w_a0(retval);
 554              		.loc 1 123 26 is_stmt 0
 555 0224 13850500 		mv	a0,a1
 556 0228 97000000 		call	kern_sem_close
 556      E7800000 
 557              	.LVL41:
 124:src/kern_interrupts.c ****                 break;
 558              		.loc 1 124 17 is_stmt 1
 559              	.LBB126:
 560              	.LBB127:
  32:src/../h/kern_reg_util.h **** }
 561              		.loc 2 32 5
 562              	#APP
 563              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 564              		mv a0, a0
 565              	# 0 "" 2
 566              		.loc 2 33 1 is_stmt 0
 567              	#NO_APP
 568 0234 6FF01FE7 		j	.L5
 569              	.LVL42:
 570              	.L9:
 571              	.LBE127:
 572              	.LBE126:
 573              	.LBE125:
 574              	.LBB128:
 129:src/kern_interrupts.c ****                 kern_sem_signal(handle);
 575              		.loc 1 129 17 is_stmt 1
 130:src/kern_interrupts.c ****                 retval = 0;
 576              		.loc 1 130 17
 577 0238 13850500 		mv	a0,a1
 578 023c 97000000 		call	kern_sem_signal
 578      E7800000 
 579              	.LVL43:
 131:src/kern_interrupts.c ****                 w_a0(retval);
 580              		.loc 1 131 17
 132:src/kern_interrupts.c ****                 break;
 581              		.loc 1 132 17
 582              	.LBB129:
 583              	.LBB130:
  32:src/../h/kern_reg_util.h **** }
 584              		.loc 2 32 5
 585 0244 93070000 		li	a5,0
 586              	#APP
 587              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 588              		mv a0, a5
 589              	# 0 "" 2
 590              		.loc 2 33 1 is_stmt 0
 591              	#NO_APP
 592 024c 6FF09FE5 		j	.L5
GAS LISTING /tmp/ccMs1K2h.s 			page 19


 593              	.LVL44:
 594              	.L10:
 595              	.LBE130:
 596              	.LBE129:
 597              	.LBE128:
 598              	.LBB131:
 137:src/kern_interrupts.c ****                 int res = kern_sem_wait(handle);
 599              		.loc 1 137 17 is_stmt 1
 138:src/kern_interrupts.c ****                 if (res == 1) retval = 0;
 600              		.loc 1 138 17
 138:src/kern_interrupts.c ****                 if (res == 1) retval = 0;
 601              		.loc 1 138 27 is_stmt 0
 602 0250 13850500 		mv	a0,a1
 603 0254 97000000 		call	kern_sem_wait
 603      E7800000 
 604              	.LVL45:
 139:src/kern_interrupts.c ****                 else {
 605              		.loc 1 139 17 is_stmt 1
 139:src/kern_interrupts.c ****                 else {
 606              		.loc 1 139 20 is_stmt 0
 607 025c 93071000 		li	a5,1
 608 0260 6318F500 		bne	a0,a5,.L24
 139:src/kern_interrupts.c ****                 else {
 609              		.loc 1 139 38
 610 0264 93070000 		li	a5,0
 611              	.LVL46:
 612              	.L19:
 150:src/kern_interrupts.c ****                 break;
 613              		.loc 1 150 17 is_stmt 1
 614              	.LBB132:
 615              	.LBB133:
  32:src/../h/kern_reg_util.h **** }
 616              		.loc 2 32 5
 617              	#APP
 618              	# 32 "src/../h/kern_reg_util.h" 1
  33:src/../h/kern_reg_util.h **** 
 619              		mv a0, a5
 620              	# 0 "" 2
 621              		.loc 2 33 1 is_stmt 0
 622              	#NO_APP
 623 026c 6FF09FE3 		j	.L5
 624              	.LVL47:
 625              	.L24:
 626              	.LBE133:
 627              	.LBE132:
 628              	.LBB134:
 141:src/kern_interrupts.c ****                     uint64 volatile v_sepc = r_sepc();
 629              		.loc 1 141 21 is_stmt 1
 630              	.LBB135:
 631              	.LBB136:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 632              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 633              		.loc 2 146 5
 634              	#APP
 635              	# 146 "src/../h/kern_reg_util.h" 1
 636              		csrr a5, sstatus
GAS LISTING /tmp/ccMs1K2h.s 			page 20


 637              	# 0 "" 2
 638              	#NO_APP
 639 0274 2334F4FC 		sd	a5,-56(s0)
 147:src/../h/kern_reg_util.h **** }
 640              		.loc 2 147 5
 147:src/../h/kern_reg_util.h **** }
 641              		.loc 2 147 12 is_stmt 0
 642 0278 833784FC 		ld	a5,-56(s0)
 643              	.LBE136:
 644              	.LBE135:
 141:src/kern_interrupts.c ****                     uint64 volatile v_sepc = r_sepc();
 645              		.loc 1 141 37
 646 027c 2338F4F6 		sd	a5,-144(s0)
 142:src/kern_interrupts.c ****                     kern_thread_dispatch();
 647              		.loc 1 142 21 is_stmt 1
 648              	.LBB137:
 649              	.LBB138:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 650              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 651              		.loc 2 78 5
 652              	#APP
 653              	# 78 "src/../h/kern_reg_util.h" 1
 654              		csrr a5, sepc
 655              	# 0 "" 2
 656              	#NO_APP
 657 0284 2330F4FC 		sd	a5,-64(s0)
  79:src/../h/kern_reg_util.h **** }
 658              		.loc 2 79 5
  79:src/../h/kern_reg_util.h **** }
 659              		.loc 2 79 12 is_stmt 0
 660 0288 833704FC 		ld	a5,-64(s0)
 661              	.LBE138:
 662              	.LBE137:
 142:src/kern_interrupts.c ****                     kern_thread_dispatch();
 663              		.loc 1 142 37
 664 028c 233CF4F6 		sd	a5,-136(s0)
 143:src/kern_interrupts.c ****                     w_sstatus(sstatus);
 665              		.loc 1 143 21 is_stmt 1
 666 0290 97000000 		call	kern_thread_dispatch
 666      E7800000 
 667              	.LVL48:
 144:src/kern_interrupts.c ****                     w_sepc(v_sepc);
 668              		.loc 1 144 21
 669 0298 833704F7 		ld	a5,-144(s0)
 670              	.LVL49:
 671              	.LBB139:
 672              	.LBB140:
 152:src/../h/kern_reg_util.h **** }
 673              		.loc 2 152 5
 674              	#APP
 675              	# 152 "src/../h/kern_reg_util.h" 1
 676              		csrw sstatus, a5
 677              	# 0 "" 2
 678              	.LVL50:
 679              	#NO_APP
 680              	.LBE140:
GAS LISTING /tmp/ccMs1K2h.s 			page 21


 681              	.LBE139:
 145:src/kern_interrupts.c ****                     running->endTime = time + running->timeslice;
 682              		.loc 1 145 21
 683 02a0 833784F7 		ld	a5,-136(s0)
 684              	.LVL51:
 685              	.LBB141:
 686              	.LBB142:
  84:src/../h/kern_reg_util.h **** }
 687              		.loc 2 84 5
 688              	#APP
 689              	# 84 "src/../h/kern_reg_util.h" 1
 690              		csrw sepc, a5
 691              	# 0 "" 2
 692              	.LVL52:
 693              	#NO_APP
 694              	.LBE142:
 695              	.LBE141:
 146:src/kern_interrupts.c ****                     if (running->mailbox == 0) retval = 0;
 696              		.loc 1 146 21
 146:src/kern_interrupts.c ****                     if (running->mailbox == 0) retval = 0;
 697              		.loc 1 146 54 is_stmt 0
 698 02a8 97070000 		ld	a5,running
 698      83B70700 
 699 02b0 83B60703 		ld	a3,48(a5)
 146:src/kern_interrupts.c ****                     if (running->mailbox == 0) retval = 0;
 700              		.loc 1 146 45
 701 02b4 17070000 		lw	a4,time
 701      03270700 
 702 02bc 3307D700 		add	a4,a4,a3
 146:src/kern_interrupts.c ****                     if (running->mailbox == 0) retval = 0;
 703              		.loc 1 146 38
 704 02c0 23BCE702 		sd	a4,56(a5)
 147:src/kern_interrupts.c ****                     else retval = -1;
 705              		.loc 1 147 21 is_stmt 1
 147:src/kern_interrupts.c ****                     else retval = -1;
 706              		.loc 1 147 32 is_stmt 0
 707 02c4 83B78704 		ld	a5,72(a5)
 147:src/kern_interrupts.c ****                     else retval = -1;
 708              		.loc 1 147 24
 709 02c8 E38007FA 		beqz	a5,.L19
 148:src/kern_interrupts.c ****                 }
 710              		.loc 1 148 33
 711 02cc 9307F0FF 		li	a5,-1
 712 02d0 6FF09FF9 		j	.L19
 713              	.LVL53:
 714              	.L7:
 715              	.LBE134:
 716              	.LBE131:
 717              	.LBB143:
 155:src/kern_interrupts.c ****                 running->status = SLEEPING;
 718              		.loc 1 155 17 is_stmt 1
 156:src/kern_interrupts.c ****                 running->endTime = SYSTEM_TIME + period;
 719              		.loc 1 156 17
 156:src/kern_interrupts.c ****                 running->endTime = SYSTEM_TIME + period;
 720              		.loc 1 156 24 is_stmt 0
 721 02d4 17090000 		lla	s2,running
 721      13090900 
GAS LISTING /tmp/ccMs1K2h.s 			page 22


 722              	.LVL54:
 723 02dc 83370900 		ld	a5,0(s2)
 156:src/kern_interrupts.c ****                 running->endTime = SYSTEM_TIME + period;
 724              		.loc 1 156 33
 725 02e0 13075000 		li	a4,5
 726              	.LVL55:
 727 02e4 23A8E704 		sw	a4,80(a5)
 157:src/kern_interrupts.c ****                 uint64 volatile sstatus = r_sstatus();
 728              		.loc 1 157 17 is_stmt 1
 157:src/kern_interrupts.c ****                 uint64 volatile sstatus = r_sstatus();
 729              		.loc 1 157 48 is_stmt 0
 730 02e8 17070000 		ld	a4,SYSTEM_TIME
 730      03370700 
 731 02f0 B384E500 		add	s1,a1,a4
 732              	.LVL56:
 157:src/kern_interrupts.c ****                 uint64 volatile sstatus = r_sstatus();
 733              		.loc 1 157 34
 734 02f4 23BC9702 		sd	s1,56(a5)
 158:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 735              		.loc 1 158 17 is_stmt 1
 736              	.LBB144:
 737              	.LBB145:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 738              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 739              		.loc 2 146 5
 740              	#APP
 741              	# 146 "src/../h/kern_reg_util.h" 1
 742              		csrr a5, sstatus
 743              	# 0 "" 2
 744              	#NO_APP
 745 02fc 233CF4FC 		sd	a5,-40(s0)
 147:src/../h/kern_reg_util.h **** }
 746              		.loc 2 147 5
 147:src/../h/kern_reg_util.h **** }
 747              		.loc 2 147 12 is_stmt 0
 748 0300 833784FD 		ld	a5,-40(s0)
 749              	.LBE145:
 750              	.LBE144:
 158:src/kern_interrupts.c ****                 uint64 volatile v_sepc = r_sepc();
 751              		.loc 1 158 33
 752 0304 2330F4F8 		sd	a5,-128(s0)
 159:src/kern_interrupts.c ****                 kern_thread_dispatch();
 753              		.loc 1 159 17 is_stmt 1
 754              	.LBB146:
 755              	.LBB147:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 756              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 757              		.loc 2 78 5
 758              	#APP
 759              	# 78 "src/../h/kern_reg_util.h" 1
 760              		csrr a5, sepc
 761              	# 0 "" 2
 762              	#NO_APP
 763 030c 2338F4FC 		sd	a5,-48(s0)
  79:src/../h/kern_reg_util.h **** }
GAS LISTING /tmp/ccMs1K2h.s 			page 23


 764              		.loc 2 79 5
  79:src/../h/kern_reg_util.h **** }
 765              		.loc 2 79 12 is_stmt 0
 766 0310 833704FD 		ld	a5,-48(s0)
 767              	.LBE147:
 768              	.LBE146:
 159:src/kern_interrupts.c ****                 kern_thread_dispatch();
 769              		.loc 1 159 33
 770 0314 2334F4F8 		sd	a5,-120(s0)
 160:src/kern_interrupts.c ****                 w_sstatus(sstatus);
 771              		.loc 1 160 17 is_stmt 1
 772 0318 97000000 		call	kern_thread_dispatch
 772      E7800000 
 773              	.LVL57:
 161:src/kern_interrupts.c ****                 w_sepc(v_sepc);
 774              		.loc 1 161 17
 775 0320 833704F8 		ld	a5,-128(s0)
 776              	.LVL58:
 777              	.LBB148:
 778              	.LBB149:
 152:src/../h/kern_reg_util.h **** }
 779              		.loc 2 152 5
 780              	#APP
 781              	# 152 "src/../h/kern_reg_util.h" 1
 782              		csrw sstatus, a5
 783              	# 0 "" 2
 784              	.LVL59:
 785              	#NO_APP
 786              	.LBE149:
 787              	.LBE148:
 162:src/kern_interrupts.c ****                 running->endTime = time + running->timeslice;
 788              		.loc 1 162 17
 789 0328 833784F8 		ld	a5,-120(s0)
 790              	.LVL60:
 791              	.LBB150:
 792              	.LBB151:
  84:src/../h/kern_reg_util.h **** }
 793              		.loc 2 84 5
 794              	#APP
 795              	# 84 "src/../h/kern_reg_util.h" 1
 796              		csrw sepc, a5
 797              	# 0 "" 2
 798              	.LVL61:
 799              	#NO_APP
 800              	.LBE151:
 801              	.LBE150:
 163:src/kern_interrupts.c ****             }
 802              		.loc 1 163 17
 163:src/kern_interrupts.c ****             }
 803              		.loc 1 163 50 is_stmt 0
 804 0330 03370900 		ld	a4,0(s2)
 805 0334 83360703 		ld	a3,48(a4)
 163:src/kern_interrupts.c ****             }
 806              		.loc 1 163 41
 807 0338 97070000 		lw	a5,time
 807      83A70700 
 808 0340 B387D700 		add	a5,a5,a3
GAS LISTING /tmp/ccMs1K2h.s 			page 24


 163:src/kern_interrupts.c ****             }
 809              		.loc 1 163 34
 810 0344 233CF702 		sd	a5,56(a4)
 811              	.LBE143:
 812              	.LBE90:
 813              		.loc 1 169 1
 814 0348 6FF0DFD5 		j	.L5
 815              		.cfi_endproc
 816              	.LFE24:
 818              		.align	2
 819              		.globl	handleInterrupt
 821              	handleInterrupt:
 822              	.LFB25:
 170:src/kern_interrupts.c **** 
 171:src/kern_interrupts.c **** void handleInterrupt()
 172:src/kern_interrupts.c **** {
 823              		.loc 1 172 1 is_stmt 1
 824              		.cfi_startproc
 825 034c 130101FB 		addi	sp,sp,-80
 826              		.cfi_def_cfa_offset 80
 827 0350 23341104 		sd	ra,72(sp)
 828 0354 23308104 		sd	s0,64(sp)
 829 0358 233C9102 		sd	s1,56(sp)
 830              		.cfi_offset 1, -8
 831              		.cfi_offset 8, -16
 832              		.cfi_offset 9, -24
 833 035c 13040105 		addi	s0,sp,80
 834              		.cfi_def_cfa 8, 0
 173:src/kern_interrupts.c ****     uint64 scause = r_scause();
 835              		.loc 1 173 5
 836              	.LBB152:
 837              	.LBB153:
  65:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 838              		.loc 2 65 5
  66:src/../h/kern_reg_util.h ****     return scause;
 839              		.loc 2 66 5
 840              	#APP
 841              	# 66 "src/../h/kern_reg_util.h" 1
 842              		csrr a5, scause
 843              	# 0 "" 2
 844              	#NO_APP
 845 0364 2334F4FC 		sd	a5,-56(s0)
  67:src/../h/kern_reg_util.h **** }
 846              		.loc 2 67 5
  67:src/../h/kern_reg_util.h **** }
 847              		.loc 2 67 12 is_stmt 0
 848 0368 033784FC 		ld	a4,-56(s0)
 849              	.LVL62:
 850              	.LBE153:
 851              	.LBE152:
 174:src/kern_interrupts.c ****     if (scause == INTR_TIMER)
 852              		.loc 1 174 5 is_stmt 1
 853              		.loc 1 174 8 is_stmt 0
 854 036c 9307F0FF 		li	a5,-1
 855 0370 9397F703 		slli	a5,a5,63
 856 0374 93871700 		addi	a5,a5,1
 857 0378 6304F702 		beq	a4,a5,.L30
GAS LISTING /tmp/ccMs1K2h.s 			page 25


 175:src/kern_interrupts.c ****     {
 176:src/kern_interrupts.c ****         SYSTEM_TIME++;
 177:src/kern_interrupts.c ****         mc_sip(SIP_SSIP);
 178:src/kern_interrupts.c **** 
 179:src/kern_interrupts.c **** 
 180:src/kern_interrupts.c ****         kern_thread_wakeup(SYSTEM_TIME);
 181:src/kern_interrupts.c **** 
 182:src/kern_interrupts.c ****         if(SYSTEM_TIME>=running->endTime){
 183:src/kern_interrupts.c ****             //__putc('(');
 184:src/kern_interrupts.c ****             //__putc('0'+running->id);
 185:src/kern_interrupts.c ****             //__putc('-');
 186:src/kern_interrupts.c ****             //__putc('>');
 187:src/kern_interrupts.c ****             uint64 volatile sstatus = r_sstatus();
 188:src/kern_interrupts.c ****             uint64 volatile v_sepc = r_sepc();
 189:src/kern_interrupts.c ****             kern_thread_dispatch();
 190:src/kern_interrupts.c ****             w_sstatus(sstatus);
 191:src/kern_interrupts.c ****             w_sepc(v_sepc);
 192:src/kern_interrupts.c ****             running->endTime=SYSTEM_TIME+running->timeslice;
 193:src/kern_interrupts.c ****             //__putc('0'+running->id);
 194:src/kern_interrupts.c ****             //__putc(')');
 195:src/kern_interrupts.c ****         }
 196:src/kern_interrupts.c **** 
 197:src/kern_interrupts.c ****     }
 198:src/kern_interrupts.c ****     else if (scause == INTR_CONSOLE)
 858              		.loc 1 198 10 is_stmt 1
 859              		.loc 1 198 13 is_stmt 0
 860 037c 9307F0FF 		li	a5,-1
 861 0380 9397F703 		slli	a5,a5,63
 862 0384 93879700 		addi	a5,a5,9
 863 0388 6304F70A 		beq	a4,a5,.L31
 864              	.LVL63:
 865              	.L25:
 199:src/kern_interrupts.c ****     {
 200:src/kern_interrupts.c ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 201:src/kern_interrupts.c ****         int i = plic_claim();
 202:src/kern_interrupts.c ****         if(i==10){
 203:src/kern_interrupts.c ****             plic_complete(i);
 204:src/kern_interrupts.c ****             i--;
 205:src/kern_interrupts.c ****         }
 206:src/kern_interrupts.c ****         else {
 207:src/kern_interrupts.c ****             i++;
 208:src/kern_interrupts.c ****         }
 209:src/kern_interrupts.c ****         console_handler();
 210:src/kern_interrupts.c ****     }
 211:src/kern_interrupts.c ****     else if(scause == INTR_ILLEGAL_INSTRUCTION)
 212:src/kern_interrupts.c ****     {
 213:src/kern_interrupts.c ****         // unexpected trap cause
 214:src/kern_interrupts.c ****     }
 215:src/kern_interrupts.c ****     else if(scause == INTR_ILLEGAL_ADDR_RD)
 216:src/kern_interrupts.c ****     {
 217:src/kern_interrupts.c **** 
 218:src/kern_interrupts.c ****     }
 219:src/kern_interrupts.c ****     else if(scause==INTR_ILLEGAL_ADDR_WR){
 220:src/kern_interrupts.c **** 
 221:src/kern_interrupts.c ****     }
 222:src/kern_interrupts.c **** }
 866              		.loc 1 222 1
GAS LISTING /tmp/ccMs1K2h.s 			page 26


 867 038c 83308104 		ld	ra,72(sp)
 868              		.cfi_remember_state
 869              		.cfi_restore 1
 870 0390 03340104 		ld	s0,64(sp)
 871              		.cfi_restore 8
 872              		.cfi_def_cfa 2, 80
 873 0394 83348103 		ld	s1,56(sp)
 874              		.cfi_restore 9
 875 0398 13010105 		addi	sp,sp,80
 876              		.cfi_def_cfa_offset 0
 877 039c 67800000 		jr	ra
 878              	.LVL64:
 879              	.L30:
 880              		.cfi_restore_state
 176:src/kern_interrupts.c ****         mc_sip(SIP_SSIP);
 881              		.loc 1 176 9 is_stmt 1
 176:src/kern_interrupts.c ****         mc_sip(SIP_SSIP);
 882              		.loc 1 176 20 is_stmt 0
 883 03a0 97040000 		lla	s1,SYSTEM_TIME
 883      93840400 
 884 03a8 03B50400 		ld	a0,0(s1)
 885 03ac 13051500 		addi	a0,a0,1
 886 03b0 23B0A400 		sd	a0,0(s1)
 177:src/kern_interrupts.c **** 
 887              		.loc 1 177 9 is_stmt 1
 888              	.LVL65:
 889              	.LBB154:
 890              	.LBB155:
 118:src/../h/kern_reg_util.h **** }
 891              		.loc 2 118 5
 892 03b4 93072000 		li	a5,2
 893              	#APP
 894              	# 118 "src/../h/kern_reg_util.h" 1
 895              		csrc sip, a5
 896              	# 0 "" 2
 897              	.LVL66:
 898              	#NO_APP
 899              	.LBE155:
 900              	.LBE154:
 180:src/kern_interrupts.c **** 
 901              		.loc 1 180 9
 902 03bc 97000000 		call	kern_thread_wakeup
 902      E7800000 
 903              	.LVL67:
 182:src/kern_interrupts.c ****             //__putc('(');
 904              		.loc 1 182 9
 182:src/kern_interrupts.c ****             //__putc('(');
 905              		.loc 1 182 32 is_stmt 0
 906 03c4 97070000 		ld	a5,running
 906      83B70700 
 907 03cc 03B78703 		ld	a4,56(a5)
 182:src/kern_interrupts.c ****             //__putc('(');
 908              		.loc 1 182 23
 909 03d0 83B70400 		ld	a5,0(s1)
 182:src/kern_interrupts.c ****             //__putc('(');
 910              		.loc 1 182 11
 911 03d4 E3ECE7FA 		bgtu	a4,a5,.L25
GAS LISTING /tmp/ccMs1K2h.s 			page 27


 912              	.LBB156:
 187:src/kern_interrupts.c ****             uint64 volatile v_sepc = r_sepc();
 913              		.loc 1 187 13 is_stmt 1
 914              	.LBB157:
 915              	.LBB158:
 145:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 916              		.loc 2 145 5
 146:src/../h/kern_reg_util.h ****     return sstatus;
 917              		.loc 2 146 5
 918              	#APP
 919              	# 146 "src/../h/kern_reg_util.h" 1
 920              		csrr a5, sstatus
 921              	# 0 "" 2
 922              	#NO_APP
 923 03dc 233CF4FC 		sd	a5,-40(s0)
 147:src/../h/kern_reg_util.h **** }
 924              		.loc 2 147 5
 147:src/../h/kern_reg_util.h **** }
 925              		.loc 2 147 12 is_stmt 0
 926 03e0 833784FD 		ld	a5,-40(s0)
 927              	.LBE158:
 928              	.LBE157:
 187:src/kern_interrupts.c ****             uint64 volatile v_sepc = r_sepc();
 929              		.loc 1 187 29
 930 03e4 233CF4FA 		sd	a5,-72(s0)
 188:src/kern_interrupts.c ****             kern_thread_dispatch();
 931              		.loc 1 188 13 is_stmt 1
 932              	.LBB159:
 933              	.LBB160:
  77:src/../h/kern_reg_util.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 934              		.loc 2 77 5
  78:src/../h/kern_reg_util.h ****     return sepc;
 935              		.loc 2 78 5
 936              	#APP
 937              	# 78 "src/../h/kern_reg_util.h" 1
 938              		csrr a5, sepc
 939              	# 0 "" 2
 940              	#NO_APP
 941 03ec 2338F4FC 		sd	a5,-48(s0)
  79:src/../h/kern_reg_util.h **** }
 942              		.loc 2 79 5
  79:src/../h/kern_reg_util.h **** }
 943              		.loc 2 79 12 is_stmt 0
 944 03f0 833704FD 		ld	a5,-48(s0)
 945              	.LBE160:
 946              	.LBE159:
 188:src/kern_interrupts.c ****             kern_thread_dispatch();
 947              		.loc 1 188 29
 948 03f4 2330F4FC 		sd	a5,-64(s0)
 189:src/kern_interrupts.c ****             w_sstatus(sstatus);
 949              		.loc 1 189 13 is_stmt 1
 950 03f8 97000000 		call	kern_thread_dispatch
 950      E7800000 
 951              	.LVL68:
 190:src/kern_interrupts.c ****             w_sepc(v_sepc);
 952              		.loc 1 190 13
 953 0400 833784FB 		ld	a5,-72(s0)
GAS LISTING /tmp/ccMs1K2h.s 			page 28


 954              	.LVL69:
 955              	.LBB161:
 956              	.LBB162:
 152:src/../h/kern_reg_util.h **** }
 957              		.loc 2 152 5
 958              	#APP
 959              	# 152 "src/../h/kern_reg_util.h" 1
 960              		csrw sstatus, a5
 961              	# 0 "" 2
 962              	.LVL70:
 963              	#NO_APP
 964              	.LBE162:
 965              	.LBE161:
 191:src/kern_interrupts.c ****             running->endTime=SYSTEM_TIME+running->timeslice;
 966              		.loc 1 191 13
 967 0408 833704FC 		ld	a5,-64(s0)
 968              	.LVL71:
 969              	.LBB163:
 970              	.LBB164:
  84:src/../h/kern_reg_util.h **** }
 971              		.loc 2 84 5
 972              	#APP
 973              	# 84 "src/../h/kern_reg_util.h" 1
 974              		csrw sepc, a5
 975              	# 0 "" 2
 976              	.LVL72:
 977              	#NO_APP
 978              	.LBE164:
 979              	.LBE163:
 192:src/kern_interrupts.c ****             //__putc('0'+running->id);
 980              		.loc 1 192 13
 192:src/kern_interrupts.c ****             //__putc('0'+running->id);
 981              		.loc 1 192 49 is_stmt 0
 982 0410 17070000 		ld	a4,running
 982      03370700 
 983 0418 83370703 		ld	a5,48(a4)
 192:src/kern_interrupts.c ****             //__putc('0'+running->id);
 984              		.loc 1 192 41
 985 041c 97060000 		ld	a3,SYSTEM_TIME
 985      83B60600 
 986 0424 B387D700 		add	a5,a5,a3
 192:src/kern_interrupts.c ****             //__putc('0'+running->id);
 987              		.loc 1 192 29
 988 0428 233CF702 		sd	a5,56(a4)
 989 042c 6FF01FF6 		j	.L25
 990              	.LVL73:
 991              	.L31:
 992              	.LBE156:
 993              	.LBB165:
 201:src/kern_interrupts.c ****         if(i==10){
 994              		.loc 1 201 9 is_stmt 1
 201:src/kern_interrupts.c ****         if(i==10){
 995              		.loc 1 201 17 is_stmt 0
 996 0430 97000000 		call	plic_claim
 996      E7800000 
 997              	.LVL74:
 202:src/kern_interrupts.c ****             plic_complete(i);
GAS LISTING /tmp/ccMs1K2h.s 			page 29


 998              		.loc 1 202 9 is_stmt 1
 202:src/kern_interrupts.c ****             plic_complete(i);
 999              		.loc 1 202 11 is_stmt 0
 1000 0438 9307A000 		li	a5,10
 1001 043c 6308F500 		beq	a0,a5,.L32
 1002              	.L28:
 209:src/kern_interrupts.c ****     }
 1003              		.loc 1 209 9 is_stmt 1
 1004 0440 97000000 		call	console_handler
 1004      E7800000 
 1005              	.LVL75:
 1006              	.LBE165:
 221:src/kern_interrupts.c **** }
 1007              		.loc 1 221 5
 1008              		.loc 1 222 1 is_stmt 0
 1009 0448 6FF05FF4 		j	.L25
 1010              	.L32:
 1011              	.LBB166:
 203:src/kern_interrupts.c ****             i--;
 1012              		.loc 1 203 13 is_stmt 1
 1013 044c 97000000 		call	plic_complete
 1013      E7800000 
 1014              	.LVL76:
 204:src/kern_interrupts.c ****         }
 1015              		.loc 1 204 13
 1016 0454 6FF0DFFE 		j	.L28
 1017              	.LBE166:
 1018              		.cfi_endproc
 1019              	.LFE25:
 1021              		.globl	time
 1022              		.globl	SYSTEM_TIME
 1023              		.section	.sbss,"aw",@nobits
 1024              		.align	3
 1027              	time:
 1028 0000 00000000 		.zero	4
 1029 0004 00000000 		.zero	4
 1032              	SYSTEM_TIME:
 1033 0008 00000000 		.zero	8
 1033      00000000 
 1034              		.text
 1035              	.Letext0:
 1036              		.file 3 "src/../lib/hw.h"
 1037              		.file 4 "src/../h/kern_interrupts.h"
 1038              		.file 5 "src/../h/kern_threads.h"
 1039              		.file 6 "src/../h/syscall_c.h"
 1040              		.file 7 "src/../h/kern_semaphore.h"
 1041              		.file 8 "src/../lib/console.h"
 1042              		.file 9 "src/../h/kern_memory.h"
GAS LISTING /tmp/ccMs1K2h.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kern_interrupts.c
     /tmp/ccMs1K2h.s:10     .text:0000000000000000 kern_syscall
     /tmp/ccMs1K2h.s:14     .text:0000000000000000 .L0 
     /tmp/ccMs1K2h.s:16     .text:0000000000000000 .L0 
     /tmp/ccMs1K2h.s:17     .text:0000000000000004 .L0 
     /tmp/ccMs1K2h.s:19     .text:0000000000000008 .L0 
     /tmp/ccMs1K2h.s:21     .text:000000000000000c .L0 
src/kern_interrupts.c:31     .text:0000000000000028 .L0 
     /tmp/ccMs1K2h.s:35     .text:000000000000002c .L0 
     /tmp/ccMs1K2h.s:37     .text:000000000000002c .L0 
     /tmp/ccMs1K2h.s:38     .text:0000000000000030 .L0 
     /tmp/ccMs1K2h.s:39     .text:0000000000000030 .L0 
     /tmp/ccMs1K2h.s:41     .text:0000000000000034 .L0 
     /tmp/ccMs1K2h.s:43     .text:0000000000000038 .L0 
     /tmp/ccMs1K2h.s:49     .text:0000000000000038 kern_interrupt_init
     /tmp/ccMs1K2h.s:52     .text:0000000000000038 .L0 
     /tmp/ccMs1K2h.s:53     .text:0000000000000038 .L0 
     /tmp/ccMs1K2h.s:54     .text:000000000000003c .L0 
     /tmp/ccMs1K2h.s:56     .text:0000000000000040 .L0 
     /tmp/ccMs1K2h.s:58     .text:0000000000000044 .L0 
     /tmp/ccMs1K2h.s:60     .text:0000000000000044 .L0 
     /tmp/ccMs1K2h.s:1032   .sbss:0000000000000008 SYSTEM_TIME
     /tmp/ccMs1K2h.s:61     .text:0000000000000044 .L0 
     /tmp/ccMs1K2h.s:63     .text:000000000000004c .L0 
src/../h/kern_reg_util.h:96     .text:0000000000000054 .L0 
     /tmp/ccMs1K2h.s:80     .text:0000000000000058 .L0 
     /tmp/ccMs1K2h.s:81     .text:0000000000000058 .L0 
     /tmp/ccMs1K2h.s:91     .text:0000000000000060 .L0 
     /tmp/ccMs1K2h.s:92     .text:0000000000000064 .L0 
     /tmp/ccMs1K2h.s:93     .text:0000000000000064 .L0 
     /tmp/ccMs1K2h.s:95     .text:0000000000000068 .L0 
     /tmp/ccMs1K2h.s:97     .text:000000000000006c .L0 
     /tmp/ccMs1K2h.s:103    .text:000000000000006c handleEcall
     /tmp/ccMs1K2h.s:106    .text:000000000000006c .L0 
     /tmp/ccMs1K2h.s:108    .text:000000000000006c .L0 
     /tmp/ccMs1K2h.s:109    .text:0000000000000070 .L0 
     /tmp/ccMs1K2h.s:114    .text:0000000000000080 .L0 
     /tmp/ccMs1K2h.s:115    .text:0000000000000080 .L0 
     /tmp/ccMs1K2h.s:116    .text:0000000000000080 .L0 
     /tmp/ccMs1K2h.s:117    .text:0000000000000080 .L0 
     /tmp/ccMs1K2h.s:119    .text:0000000000000084 .L0 
     /tmp/ccMs1K2h.s:126    .text:000000000000008c .L0 
     /tmp/ccMs1K2h.s:127    .text:000000000000008c .L0 
src/../h/kern_reg_util.h:66     .text:000000000000008c .L0 
     /tmp/ccMs1K2h.s:135    .text:0000000000000094 .L0 
     /tmp/ccMs1K2h.s:136    .text:0000000000000094 .L0 
     /tmp/ccMs1K2h.s:141    .text:0000000000000098 .L0 
     /tmp/ccMs1K2h.s:142    .text:0000000000000098 .L0 
     /tmp/ccMs1K2h.s:145    .text:000000000000009c .L0 
     /tmp/ccMs1K2h.s:151    .text:00000000000000a4 .L0 
     /tmp/ccMs1K2h.s:152    .text:00000000000000a8 .L0 
     /tmp/ccMs1K2h.s:153    .text:00000000000000a8 .L0 
     /tmp/ccMs1K2h.s:155    .text:00000000000000ac .L0 
     /tmp/ccMs1K2h.s:156    .text:00000000000000ac .L0 
     /tmp/ccMs1K2h.s:158    .text:00000000000000b0 .L0 
     /tmp/ccMs1K2h.s:160    .text:00000000000000b4 .L0 
GAS LISTING /tmp/ccMs1K2h.s 			page 31


     /tmp/ccMs1K2h.s:162    .text:00000000000000b8 .L0 
     /tmp/ccMs1K2h.s:166    .text:00000000000000bc .L0 
     /tmp/ccMs1K2h.s:170    .text:00000000000000c0 .L0 
     /tmp/ccMs1K2h.s:172    .text:00000000000000c0 .L0 
     /tmp/ccMs1K2h.s:175    .text:00000000000000c0 .L0 
     /tmp/ccMs1K2h.s:176    .text:00000000000000c0 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000000c0 .L0 
     /tmp/ccMs1K2h.s:185    .text:00000000000000c8 .L0 
     /tmp/ccMs1K2h.s:186    .text:00000000000000c8 .L0 
     /tmp/ccMs1K2h.s:190    .text:00000000000000cc .L0 
     /tmp/ccMs1K2h.s:195    .text:00000000000000d0 .L0 
src/../h/kern_reg_util.h:84     .text:00000000000000d0 .L0 
     /tmp/ccMs1K2h.s:205    .text:00000000000000d4 .L0 
     /tmp/ccMs1K2h.s:275    .text:00000000000000f8 .L0 
     /tmp/ccMs1K2h.s:276    .text:00000000000000f8 .L0 
     /tmp/ccMs1K2h.s:277    .text:00000000000000f8 .L0 
     /tmp/ccMs1K2h.s:283    .text:0000000000000104 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000104 .L0 
     /tmp/ccMs1K2h.s:290    .text:0000000000000108 .L0 
     /tmp/ccMs1K2h.s:298    .text:000000000000010c .L0 
     /tmp/ccMs1K2h.s:299    .text:000000000000010c .L0 
     /tmp/ccMs1K2h.s:300    .text:000000000000010c .L0 
     /tmp/ccMs1K2h.s:306    .text:0000000000000118 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000118 .L0 
     /tmp/ccMs1K2h.s:313    .text:000000000000011c .L0 
     /tmp/ccMs1K2h.s:321    .text:0000000000000120 .L0 
     /tmp/ccMs1K2h.s:322    .text:0000000000000120 .L0 
     /tmp/ccMs1K2h.s:323    .text:0000000000000120 .L0 
     /tmp/ccMs1K2h.s:324    .text:0000000000000120 .L0 
     /tmp/ccMs1K2h.s:325    .text:0000000000000120 .L0 
     /tmp/ccMs1K2h.s:326    .text:0000000000000120 .L0 
     /tmp/ccMs1K2h.s:332    .text:0000000000000134 .L0 
     /tmp/ccMs1K2h.s:333    .text:0000000000000134 .L0 
     /tmp/ccMs1K2h.s:335    .text:0000000000000138 .L0 
     /tmp/ccMs1K2h.s:338    .text:0000000000000144 .L0 
     /tmp/ccMs1K2h.s:343    .text:0000000000000148 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000148 .L0 
     /tmp/ccMs1K2h.s:350    .text:000000000000014c .L0 
     /tmp/ccMs1K2h.s:360    .text:0000000000000150 .L0 
     /tmp/ccMs1K2h.s:361    .text:0000000000000150 .L0 
src/../h/kern_reg_util.h:146    .text:0000000000000150 .L0 
     /tmp/ccMs1K2h.s:369    .text:0000000000000158 .L0 
     /tmp/ccMs1K2h.s:370    .text:0000000000000158 .L0 
     /tmp/ccMs1K2h.s:374    .text:000000000000015c .L0 
     /tmp/ccMs1K2h.s:378    .text:0000000000000160 .L0 
     /tmp/ccMs1K2h.s:379    .text:0000000000000160 .L0 
src/../h/kern_reg_util.h:78     .text:0000000000000160 .L0 
     /tmp/ccMs1K2h.s:387    .text:0000000000000168 .L0 
     /tmp/ccMs1K2h.s:388    .text:0000000000000168 .L0 
     /tmp/ccMs1K2h.s:392    .text:000000000000016c .L0 
     /tmp/ccMs1K2h.s:394    .text:0000000000000170 .L0 
     /tmp/ccMs1K2h.s:397    .text:0000000000000178 .L0 
src/../h/kern_reg_util.h:152    .text:000000000000017c .L0 
     /tmp/ccMs1K2h.s:411    .text:0000000000000180 .L0 
src/../h/kern_reg_util.h:84     .text:0000000000000184 .L0 
     /tmp/ccMs1K2h.s:425    .text:0000000000000188 .L0 
     /tmp/ccMs1K2h.s:426    .text:0000000000000188 .L0 
GAS LISTING /tmp/ccMs1K2h.s 			page 32


     /tmp/ccMs1K2h.s:1027   .sbss:0000000000000000 time
     /tmp/ccMs1K2h.s:429    .text:0000000000000194 .L0 
     /tmp/ccMs1K2h.s:432    .text:00000000000001a0 .L0 
     /tmp/ccMs1K2h.s:434    .text:00000000000001a4 .L0 
     /tmp/ccMs1K2h.s:440    .text:00000000000001a8 .L0 
     /tmp/ccMs1K2h.s:443    .text:00000000000001a8 .L0 
     /tmp/ccMs1K2h.s:444    .text:00000000000001a8 .L0 
src/../h/kern_reg_util.h:146    .text:00000000000001a8 .L0 
     /tmp/ccMs1K2h.s:452    .text:00000000000001b0 .L0 
     /tmp/ccMs1K2h.s:453    .text:00000000000001b0 .L0 
     /tmp/ccMs1K2h.s:457    .text:00000000000001b4 .L0 
     /tmp/ccMs1K2h.s:461    .text:00000000000001b8 .L0 
     /tmp/ccMs1K2h.s:462    .text:00000000000001b8 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000001b8 .L0 
     /tmp/ccMs1K2h.s:470    .text:00000000000001c0 .L0 
     /tmp/ccMs1K2h.s:471    .text:00000000000001c0 .L0 
     /tmp/ccMs1K2h.s:475    .text:00000000000001c4 .L0 
     /tmp/ccMs1K2h.s:477    .text:00000000000001c8 .L0 
     /tmp/ccMs1K2h.s:481    .text:00000000000001d4 .L0 
src/../h/kern_reg_util.h:152    .text:00000000000001d8 .L0 
     /tmp/ccMs1K2h.s:495    .text:00000000000001dc .L0 
src/../h/kern_reg_util.h:84     .text:00000000000001e0 .L0 
     /tmp/ccMs1K2h.s:509    .text:00000000000001e4 .L0 
     /tmp/ccMs1K2h.s:510    .text:00000000000001e4 .L0 
     /tmp/ccMs1K2h.s:513    .text:00000000000001f0 .L0 
     /tmp/ccMs1K2h.s:516    .text:00000000000001fc .L0 
     /tmp/ccMs1K2h.s:518    .text:0000000000000200 .L0 
     /tmp/ccMs1K2h.s:523    .text:0000000000000204 .L0 
     /tmp/ccMs1K2h.s:528    .text:000000000000020c .L0 
     /tmp/ccMs1K2h.s:529    .text:000000000000020c .L0 
     /tmp/ccMs1K2h.s:530    .text:000000000000020c .L0 
     /tmp/ccMs1K2h.s:531    .text:000000000000020c .L0 
     /tmp/ccMs1K2h.s:538    .text:000000000000021c .L0 
src/../h/kern_reg_util.h:32     .text:000000000000021c .L0 
     /tmp/ccMs1K2h.s:545    .text:0000000000000220 .L0 
     /tmp/ccMs1K2h.s:553    .text:0000000000000224 .L0 
     /tmp/ccMs1K2h.s:554    .text:0000000000000224 .L0 
     /tmp/ccMs1K2h.s:555    .text:0000000000000224 .L0 
     /tmp/ccMs1K2h.s:561    .text:0000000000000230 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000230 .L0 
     /tmp/ccMs1K2h.s:568    .text:0000000000000234 .L0 
     /tmp/ccMs1K2h.s:576    .text:0000000000000238 .L0 
     /tmp/ccMs1K2h.s:577    .text:0000000000000238 .L0 
     /tmp/ccMs1K2h.s:581    .text:0000000000000244 .L0 
     /tmp/ccMs1K2h.s:584    .text:0000000000000244 .L0 
     /tmp/ccMs1K2h.s:585    .text:0000000000000244 .L0 
     /tmp/ccMs1K2h.s:592    .text:000000000000024c .L0 
     /tmp/ccMs1K2h.s:600    .text:0000000000000250 .L0 
     /tmp/ccMs1K2h.s:601    .text:0000000000000250 .L0 
     /tmp/ccMs1K2h.s:602    .text:0000000000000250 .L0 
     /tmp/ccMs1K2h.s:606    .text:000000000000025c .L0 
     /tmp/ccMs1K2h.s:607    .text:000000000000025c .L0 
     /tmp/ccMs1K2h.s:610    .text:0000000000000264 .L0 
     /tmp/ccMs1K2h.s:616    .text:0000000000000268 .L0 
src/../h/kern_reg_util.h:32     .text:0000000000000268 .L0 
     /tmp/ccMs1K2h.s:623    .text:000000000000026c .L0 
     /tmp/ccMs1K2h.s:632    .text:0000000000000270 .L0 
GAS LISTING /tmp/ccMs1K2h.s 			page 33


     /tmp/ccMs1K2h.s:633    .text:0000000000000270 .L0 
src/../h/kern_reg_util.h:146    .text:0000000000000270 .L0 
     /tmp/ccMs1K2h.s:641    .text:0000000000000278 .L0 
     /tmp/ccMs1K2h.s:642    .text:0000000000000278 .L0 
     /tmp/ccMs1K2h.s:646    .text:000000000000027c .L0 
     /tmp/ccMs1K2h.s:650    .text:0000000000000280 .L0 
     /tmp/ccMs1K2h.s:651    .text:0000000000000280 .L0 
src/../h/kern_reg_util.h:78     .text:0000000000000280 .L0 
     /tmp/ccMs1K2h.s:659    .text:0000000000000288 .L0 
     /tmp/ccMs1K2h.s:660    .text:0000000000000288 .L0 
     /tmp/ccMs1K2h.s:664    .text:000000000000028c .L0 
     /tmp/ccMs1K2h.s:666    .text:0000000000000290 .L0 
     /tmp/ccMs1K2h.s:669    .text:0000000000000298 .L0 
src/../h/kern_reg_util.h:152    .text:000000000000029c .L0 
     /tmp/ccMs1K2h.s:683    .text:00000000000002a0 .L0 
src/../h/kern_reg_util.h:84     .text:00000000000002a4 .L0 
     /tmp/ccMs1K2h.s:697    .text:00000000000002a8 .L0 
     /tmp/ccMs1K2h.s:698    .text:00000000000002a8 .L0 
     /tmp/ccMs1K2h.s:701    .text:00000000000002b4 .L0 
     /tmp/ccMs1K2h.s:704    .text:00000000000002c0 .L0 
     /tmp/ccMs1K2h.s:706    .text:00000000000002c4 .L0 
     /tmp/ccMs1K2h.s:707    .text:00000000000002c4 .L0 
     /tmp/ccMs1K2h.s:709    .text:00000000000002c8 .L0 
     /tmp/ccMs1K2h.s:711    .text:00000000000002cc .L0 
     /tmp/ccMs1K2h.s:719    .text:00000000000002d4 .L0 
     /tmp/ccMs1K2h.s:720    .text:00000000000002d4 .L0 
     /tmp/ccMs1K2h.s:721    .text:00000000000002d4 .L0 
     /tmp/ccMs1K2h.s:725    .text:00000000000002e0 .L0 
     /tmp/ccMs1K2h.s:729    .text:00000000000002e8 .L0 
     /tmp/ccMs1K2h.s:730    .text:00000000000002e8 .L0 
     /tmp/ccMs1K2h.s:734    .text:00000000000002f4 .L0 
     /tmp/ccMs1K2h.s:738    .text:00000000000002f8 .L0 
     /tmp/ccMs1K2h.s:739    .text:00000000000002f8 .L0 
src/../h/kern_reg_util.h:146    .text:00000000000002f8 .L0 
     /tmp/ccMs1K2h.s:747    .text:0000000000000300 .L0 
     /tmp/ccMs1K2h.s:748    .text:0000000000000300 .L0 
     /tmp/ccMs1K2h.s:752    .text:0000000000000304 .L0 
     /tmp/ccMs1K2h.s:756    .text:0000000000000308 .L0 
     /tmp/ccMs1K2h.s:757    .text:0000000000000308 .L0 
src/../h/kern_reg_util.h:78     .text:0000000000000308 .L0 
     /tmp/ccMs1K2h.s:765    .text:0000000000000310 .L0 
     /tmp/ccMs1K2h.s:766    .text:0000000000000310 .L0 
     /tmp/ccMs1K2h.s:770    .text:0000000000000314 .L0 
     /tmp/ccMs1K2h.s:772    .text:0000000000000318 .L0 
     /tmp/ccMs1K2h.s:775    .text:0000000000000320 .L0 
src/../h/kern_reg_util.h:152    .text:0000000000000324 .L0 
     /tmp/ccMs1K2h.s:789    .text:0000000000000328 .L0 
src/../h/kern_reg_util.h:84     .text:000000000000032c .L0 
     /tmp/ccMs1K2h.s:803    .text:0000000000000330 .L0 
     /tmp/ccMs1K2h.s:804    .text:0000000000000330 .L0 
     /tmp/ccMs1K2h.s:807    .text:0000000000000338 .L0 
     /tmp/ccMs1K2h.s:810    .text:0000000000000344 .L0 
     /tmp/ccMs1K2h.s:814    .text:0000000000000348 .L0 
     /tmp/ccMs1K2h.s:815    .text:000000000000034c .L0 
     /tmp/ccMs1K2h.s:821    .text:000000000000034c handleInterrupt
     /tmp/ccMs1K2h.s:824    .text:000000000000034c .L0 
     /tmp/ccMs1K2h.s:825    .text:000000000000034c .L0 
GAS LISTING /tmp/ccMs1K2h.s 			page 34


     /tmp/ccMs1K2h.s:826    .text:0000000000000350 .L0 
     /tmp/ccMs1K2h.s:830    .text:000000000000035c .L0 
     /tmp/ccMs1K2h.s:831    .text:000000000000035c .L0 
     /tmp/ccMs1K2h.s:832    .text:000000000000035c .L0 
     /tmp/ccMs1K2h.s:834    .text:0000000000000360 .L0 
     /tmp/ccMs1K2h.s:838    .text:0000000000000360 .L0 
     /tmp/ccMs1K2h.s:839    .text:0000000000000360 .L0 
src/../h/kern_reg_util.h:66     .text:0000000000000360 .L0 
     /tmp/ccMs1K2h.s:847    .text:0000000000000368 .L0 
     /tmp/ccMs1K2h.s:848    .text:0000000000000368 .L0 
     /tmp/ccMs1K2h.s:853    .text:000000000000036c .L0 
     /tmp/ccMs1K2h.s:854    .text:000000000000036c .L0 
     /tmp/ccMs1K2h.s:859    .text:000000000000037c .L0 
     /tmp/ccMs1K2h.s:860    .text:000000000000037c .L0 
     /tmp/ccMs1K2h.s:867    .text:000000000000038c .L0 
     /tmp/ccMs1K2h.s:868    .text:0000000000000390 .L0 
     /tmp/ccMs1K2h.s:869    .text:0000000000000390 .L0 
     /tmp/ccMs1K2h.s:871    .text:0000000000000394 .L0 
     /tmp/ccMs1K2h.s:872    .text:0000000000000394 .L0 
     /tmp/ccMs1K2h.s:874    .text:0000000000000398 .L0 
     /tmp/ccMs1K2h.s:876    .text:000000000000039c .L0 
     /tmp/ccMs1K2h.s:880    .text:00000000000003a0 .L0 
     /tmp/ccMs1K2h.s:882    .text:00000000000003a0 .L0 
     /tmp/ccMs1K2h.s:883    .text:00000000000003a0 .L0 
     /tmp/ccMs1K2h.s:891    .text:00000000000003b4 .L0 
     /tmp/ccMs1K2h.s:892    .text:00000000000003b4 .L0 
     /tmp/ccMs1K2h.s:902    .text:00000000000003bc .L0 
     /tmp/ccMs1K2h.s:905    .text:00000000000003c4 .L0 
     /tmp/ccMs1K2h.s:906    .text:00000000000003c4 .L0 
     /tmp/ccMs1K2h.s:909    .text:00000000000003d0 .L0 
     /tmp/ccMs1K2h.s:911    .text:00000000000003d4 .L0 
     /tmp/ccMs1K2h.s:916    .text:00000000000003d8 .L0 
     /tmp/ccMs1K2h.s:917    .text:00000000000003d8 .L0 
src/../h/kern_reg_util.h:146    .text:00000000000003d8 .L0 
     /tmp/ccMs1K2h.s:925    .text:00000000000003e0 .L0 
     /tmp/ccMs1K2h.s:926    .text:00000000000003e0 .L0 
     /tmp/ccMs1K2h.s:930    .text:00000000000003e4 .L0 
     /tmp/ccMs1K2h.s:934    .text:00000000000003e8 .L0 
     /tmp/ccMs1K2h.s:935    .text:00000000000003e8 .L0 
src/../h/kern_reg_util.h:78     .text:00000000000003e8 .L0 
     /tmp/ccMs1K2h.s:943    .text:00000000000003f0 .L0 
     /tmp/ccMs1K2h.s:944    .text:00000000000003f0 .L0 
     /tmp/ccMs1K2h.s:948    .text:00000000000003f4 .L0 
     /tmp/ccMs1K2h.s:950    .text:00000000000003f8 .L0 
     /tmp/ccMs1K2h.s:953    .text:0000000000000400 .L0 
src/../h/kern_reg_util.h:152    .text:0000000000000404 .L0 
     /tmp/ccMs1K2h.s:967    .text:0000000000000408 .L0 
src/../h/kern_reg_util.h:84     .text:000000000000040c .L0 
     /tmp/ccMs1K2h.s:981    .text:0000000000000410 .L0 
     /tmp/ccMs1K2h.s:982    .text:0000000000000410 .L0 
     /tmp/ccMs1K2h.s:985    .text:000000000000041c .L0 
     /tmp/ccMs1K2h.s:988    .text:0000000000000428 .L0 
     /tmp/ccMs1K2h.s:995    .text:0000000000000430 .L0 
     /tmp/ccMs1K2h.s:996    .text:0000000000000430 .L0 
     /tmp/ccMs1K2h.s:999    .text:0000000000000438 .L0 
     /tmp/ccMs1K2h.s:1000   .text:0000000000000438 .L0 
     /tmp/ccMs1K2h.s:1004   .text:0000000000000440 .L0 
GAS LISTING /tmp/ccMs1K2h.s 			page 35


     /tmp/ccMs1K2h.s:1008   .text:0000000000000448 .L0 
     /tmp/ccMs1K2h.s:1009   .text:0000000000000448 .L0 
     /tmp/ccMs1K2h.s:1013   .text:000000000000044c .L0 
     /tmp/ccMs1K2h.s:1016   .text:0000000000000454 .L0 
     /tmp/ccMs1K2h.s:1018   .text:0000000000000458 .L0 
     /tmp/ccMs1K2h.s:1043   .text:0000000000000458 .L0 
                     .debug_frame:0000000000000000 .L0 
     /tmp/ccMs1K2h.s:61     .text:0000000000000044 .L0 
     /tmp/ccMs1K2h.s:63     .text:000000000000004c .L0 
     /tmp/ccMs1K2h.s:219    .rodata:0000000000000000 .L8
     /tmp/ccMs1K2h.s:211    .text:00000000000000e0 .L0 
     /tmp/ccMs1K2h.s:335    .text:0000000000000138 .L0 
     /tmp/ccMs1K2h.s:426    .text:0000000000000188 .L0 
     /tmp/ccMs1K2h.s:429    .text:0000000000000194 .L0 
     /tmp/ccMs1K2h.s:510    .text:00000000000001e4 .L0 
     /tmp/ccMs1K2h.s:513    .text:00000000000001f0 .L0 
     /tmp/ccMs1K2h.s:698    .text:00000000000002a8 .L0 
     /tmp/ccMs1K2h.s:701    .text:00000000000002b4 .L0 
     /tmp/ccMs1K2h.s:721    .text:00000000000002d4 .L0 
     /tmp/ccMs1K2h.s:730    .text:00000000000002e8 .L0 
     /tmp/ccMs1K2h.s:807    .text:0000000000000338 .L0 
     /tmp/ccMs1K2h.s:883    .text:00000000000003a0 .L0 
     /tmp/ccMs1K2h.s:906    .text:00000000000003c4 .L0 
     /tmp/ccMs1K2h.s:982    .text:0000000000000410 .L0 
     /tmp/ccMs1K2h.s:985    .text:000000000000041c .L0 
     /tmp/ccMs1K2h.s:165    .text:00000000000000bc .L23
     /tmp/ccMs1K2h.s:149    .text:00000000000000a4 .L5
     /tmp/ccMs1K2h.s:625    .text:0000000000000270 .L24
     /tmp/ccMs1K2h.s:612    .text:0000000000000268 .L19
     /tmp/ccMs1K2h.s:879    .text:00000000000003a0 .L30
     /tmp/ccMs1K2h.s:991    .text:0000000000000430 .L31
     /tmp/ccMs1K2h.s:865    .text:000000000000038c .L25
     /tmp/ccMs1K2h.s:1010   .text:000000000000044c .L32
     /tmp/ccMs1K2h.s:1002   .text:0000000000000440 .L28
     /tmp/ccMs1K2h.s:271    .text:00000000000000f8 .L18
     /tmp/ccMs1K2h.s:292    .text:000000000000010c .L17
     /tmp/ccMs1K2h.s:315    .text:0000000000000120 .L16
     /tmp/ccMs1K2h.s:520    .text:0000000000000204 .L15
     /tmp/ccMs1K2h.s:352    .text:0000000000000150 .L14
     /tmp/ccMs1K2h.s:436    .text:00000000000001a8 .L13
     /tmp/ccMs1K2h.s:525    .text:000000000000020c .L12
     /tmp/ccMs1K2h.s:547    .text:0000000000000224 .L11
     /tmp/ccMs1K2h.s:594    .text:0000000000000250 .L10
     /tmp/ccMs1K2h.s:570    .text:0000000000000238 .L9
     /tmp/ccMs1K2h.s:714    .text:00000000000002d4 .L7
     /tmp/ccMs1K2h.s:2647   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccMs1K2h.s:4011   .debug_str:0000000000000009 .LASF109
     /tmp/ccMs1K2h.s:4135   .debug_str:000000000000035c .LASF110
     /tmp/ccMs1K2h.s:4199   .debug_str:00000000000004c0 .LASF111
     /tmp/ccMs1K2h.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccMs1K2h.s:1035   .text:0000000000000458 .Letext0
     /tmp/ccMs1K2h.s:4007   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccMs1K2h.s:4127   .debug_str:0000000000000320 .LASF0
     /tmp/ccMs1K2h.s:4145   .debug_str:0000000000000393 .LASF1
     /tmp/ccMs1K2h.s:4113   .debug_str:00000000000002cb .LASF2
     /tmp/ccMs1K2h.s:4091   .debug_str:000000000000025b .LASF4
     /tmp/ccMs1K2h.s:4181   .debug_str:000000000000045d .LASF3
GAS LISTING /tmp/ccMs1K2h.s 			page 36


     /tmp/ccMs1K2h.s:4029   .debug_str:00000000000000f2 .LASF5
     /tmp/ccMs1K2h.s:4151   .debug_str:00000000000003bd .LASF6
     /tmp/ccMs1K2h.s:4125   .debug_str:000000000000030d .LASF7
     /tmp/ccMs1K2h.s:4209   .debug_str:0000000000000508 .LASF8
     /tmp/ccMs1K2h.s:4083   .debug_str:0000000000000238 .LASF9
     /tmp/ccMs1K2h.s:4161   .debug_str:00000000000003f1 .LASF10
     /tmp/ccMs1K2h.s:4203   .debug_str:00000000000004e5 .LASF11
     /tmp/ccMs1K2h.s:4035   .debug_str:000000000000010b .LASF12
     /tmp/ccMs1K2h.s:4013   .debug_str:00000000000000a7 .LASF13
     /tmp/ccMs1K2h.s:4045   .debug_str:0000000000000153 .LASF14
     /tmp/ccMs1K2h.s:4175   .debug_str:0000000000000437 .LASF15
     /tmp/ccMs1K2h.s:4055   .debug_str:000000000000019e .LASF16
     /tmp/ccMs1K2h.s:4141   .debug_str:000000000000037c .LASF30
     /tmp/ccMs1K2h.s:4187   .debug_str:000000000000048c .LASF17
     /tmp/ccMs1K2h.s:4169   .debug_str:0000000000000418 .LASF18
     /tmp/ccMs1K2h.s:4103   .debug_str:0000000000000292 .LASF19
     /tmp/ccMs1K2h.s:4069   .debug_str:00000000000001ee .LASF20
     /tmp/ccMs1K2h.s:4049   .debug_str:000000000000016d .LASF21
     /tmp/ccMs1K2h.s:4131   .debug_str:0000000000000338 .LASF22
     /tmp/ccMs1K2h.s:4207   .debug_str:00000000000004ff .LASF23
     /tmp/ccMs1K2h.s:4099   .debug_str:000000000000027d .LASF24
     /tmp/ccMs1K2h.s:4185   .debug_str:0000000000000483 .LASF25
     /tmp/ccMs1K2h.s:4037   .debug_str:000000000000011b .LASF26
     /tmp/ccMs1K2h.s:4095   .debug_str:0000000000000269 .LASF27
     /tmp/ccMs1K2h.s:4027   .debug_str:00000000000000ed .LASF28
     /tmp/ccMs1K2h.s:4227   .debug_str:0000000000000571 .LASF29
     /tmp/ccMs1K2h.s:4059   .debug_str:00000000000001ba .LASF31
     /tmp/ccMs1K2h.s:4053   .debug_str:0000000000000192 .LASF32
     /tmp/ccMs1K2h.s:4105   .debug_str:00000000000002a0 .LASF33
     /tmp/ccMs1K2h.s:4031   .debug_str:00000000000000f9 .LASF34
     /tmp/ccMs1K2h.s:4101   .debug_str:0000000000000287 .LASF35
     /tmp/ccMs1K2h.s:4191   .debug_str:00000000000004a6 .LASF36
     /tmp/ccMs1K2h.s:4143   .debug_str:000000000000038a .LASF37
     /tmp/ccMs1K2h.s:4097   .debug_str:0000000000000274 .LASF38
     /tmp/ccMs1K2h.s:4041   .debug_str:0000000000000139 .LASF39
     /tmp/ccMs1K2h.s:4225   .debug_str:000000000000056a .LASF40
     /tmp/ccMs1K2h.s:4155   .debug_str:00000000000003d5 .LASF41
     /tmp/ccMs1K2h.s:4159   .debug_str:00000000000003eb .LASF42
     /tmp/ccMs1K2h.s:4119   .debug_str:00000000000002f2 .LASF43
     /tmp/ccMs1K2h.s:4061   .debug_str:00000000000001c9 .LASF44
     /tmp/ccMs1K2h.s:4019   .debug_str:00000000000000c9 .LASF45
     /tmp/ccMs1K2h.s:4231   .debug_str:0000000000000582 .LASF58
     /tmp/ccMs1K2h.s:4073   .debug_str:0000000000000200 .LASF46
     /tmp/ccMs1K2h.s:4129   .debug_str:000000000000032d .LASF47
     /tmp/ccMs1K2h.s:4081   .debug_str:000000000000022e .LASF48
     /tmp/ccMs1K2h.s:4179   .debug_str:0000000000000455 .LASF49
     /tmp/ccMs1K2h.s:4229   .debug_str:0000000000000576 .LASF50
     /tmp/ccMs1K2h.s:4021   .debug_str:00000000000000d2 .LASF51
     /tmp/ccMs1K2h.s:4149   .debug_str:00000000000003b6 .LASF52
     /tmp/ccMs1K2h.s:4221   .debug_str:000000000000055a .LASF53
     /tmp/ccMs1K2h.s:4009   .debug_str:0000000000000000 .LASF54
     /tmp/ccMs1K2h.s:4075   .debug_str:0000000000000205 .LASF55
     /tmp/ccMs1K2h.s:4211   .debug_str:0000000000000518 .LASF56
     /tmp/ccMs1K2h.s:4033   .debug_str:0000000000000105 .LASF57
     /tmp/ccMs1K2h.s:4071   .debug_str:00000000000001fa .LASF59
     /tmp/ccMs1K2h.s:4213   .debug_str:0000000000000520 .LASF60
     /tmp/ccMs1K2h.s:4205   .debug_str:00000000000004f4 .LASF61
GAS LISTING /tmp/ccMs1K2h.s 			page 37


     /tmp/ccMs1K2h.s:4017   .debug_str:00000000000000c0 .LASF62
     /tmp/ccMs1K2h.s:4107   .debug_str:00000000000002ad .LASF63
     /tmp/ccMs1K2h.s:4109   .debug_str:00000000000002b8 .LASF64
     /tmp/ccMs1K2h.s:4139   .debug_str:0000000000000377 .LASF65
     /tmp/ccMs1K2h.s:4147   .debug_str:00000000000003a6 .LASF79
     /tmp/ccMs1K2h.s:822    .text:000000000000034c .LFB25
     /tmp/ccMs1K2h.s:1019   .text:0000000000000458 .LFE25
     /tmp/ccMs1K2h.s:4223   .debug_str:0000000000000563 .LASF66
     /tmp/ccMs1K2h.s:3290   .debug_loc:0000000000000000 .LLST40
     /tmp/ccMs1K2h.s:912    .text:00000000000003d8 .LBB156
     /tmp/ccMs1K2h.s:992    .text:0000000000000430 .LBE156
     /tmp/ccMs1K2h.s:4167   .debug_str:0000000000000410 .LASF67
     /tmp/ccMs1K2h.s:4063   .debug_str:00000000000001d0 .LASF68
     /tmp/ccMs1K2h.s:914    .text:00000000000003d8 .LBB157
     /tmp/ccMs1K2h.s:928    .text:00000000000003e4 .LBE157
     /tmp/ccMs1K2h.s:932    .text:00000000000003e8 .LBB159
     /tmp/ccMs1K2h.s:946    .text:00000000000003f4 .LBE159
     /tmp/ccMs1K2h.s:955    .text:0000000000000404 .LBB161
     /tmp/ccMs1K2h.s:965    .text:0000000000000408 .LBE161
     /tmp/ccMs1K2h.s:3305   .debug_loc:0000000000000049 .LLST42
     /tmp/ccMs1K2h.s:969    .text:000000000000040c .LBB163
     /tmp/ccMs1K2h.s:979    .text:0000000000000410 .LBE163
     /tmp/ccMs1K2h.s:3312   .debug_loc:000000000000006c .LLST43
     /tmp/ccMs1K2h.s:951    .text:0000000000000400 .LVL68
     /tmp/ccMs1K2h.s:3999   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccMs1K2h.s:997    .text:0000000000000438 .LVL74
     /tmp/ccMs1K2h.s:1005   .text:0000000000000448 .LVL75
     /tmp/ccMs1K2h.s:1014   .text:0000000000000454 .LVL76
     /tmp/ccMs1K2h.s:836    .text:0000000000000360 .LBB152
     /tmp/ccMs1K2h.s:851    .text:000000000000036c .LBE152
     /tmp/ccMs1K2h.s:889    .text:00000000000003b4 .LBB154
     /tmp/ccMs1K2h.s:900    .text:00000000000003bc .LBE154
     /tmp/ccMs1K2h.s:3319   .debug_loc:000000000000008f .LLST41
     /tmp/ccMs1K2h.s:903    .text:00000000000003c4 .LVL67
     /tmp/ccMs1K2h.s:4023   .debug_str:00000000000000da .LASF81
     /tmp/ccMs1K2h.s:104    .text:000000000000006c .LFB24
     /tmp/ccMs1K2h.s:816    .text:000000000000034c .LFE24
     /tmp/ccMs1K2h.s:3327   .debug_loc:00000000000000b3 .LLST1
     /tmp/ccMs1K2h.s:3352   .debug_loc:0000000000000115 .LLST2
     /tmp/ccMs1K2h.s:3385   .debug_loc:000000000000019d .LLST3
     /tmp/ccMs1K2h.s:3414   .debug_loc:0000000000000212 .LLST4
     /tmp/ccMs1K2h.s:3542   .debug_loc:00000000000003f8 .LLST5
     /tmp/ccMs1K2h.s:3666   .debug_loc:00000000000005cb .LLST6
     /tmp/ccMs1K2h.s:168    .text:00000000000000c0 .LBB90
     /tmp/ccMs1K2h.s:812    .text:0000000000000348 .LBE90
     /tmp/ccMs1K2h.s:4111   .debug_str:00000000000002c4 .LASF69
     /tmp/ccMs1K2h.s:3685   .debug_loc:0000000000000618 .LLST7
     /tmp/ccMs1K2h.s:4217   .debug_str:000000000000053d .LASF70
     /tmp/ccMs1K2h.s:3717   .debug_loc:00000000000006ae .LLST8
     /tmp/ccMs1K2h.s:4137   .debug_str:0000000000000372 .LASF71
     /tmp/ccMs1K2h.s:3731   .debug_loc:00000000000006e7 .LLST9
     /tmp/ccMs1K2h.s:272    .text:00000000000000f8 .LBB95
     /tmp/ccMs1K2h.s:295    .text:000000000000010c .LBE95
     /tmp/ccMs1K2h.s:4195   .debug_str:00000000000004b6 .LASF72
     /tmp/ccMs1K2h.s:3738   .debug_loc:000000000000070a .LLST11
     /tmp/ccMs1K2h.s:281    .text:0000000000000104 .LBB96
     /tmp/ccMs1K2h.s:294    .text:000000000000010c .LBE96
GAS LISTING /tmp/ccMs1K2h.s 			page 38


     /tmp/ccMs1K2h.s:3745   .debug_loc:000000000000072d .LLST12
     /tmp/ccMs1K2h.s:279    .text:0000000000000104 .LVL19
     /tmp/ccMs1K2h.s:296    .text:000000000000010c .LBB98
     /tmp/ccMs1K2h.s:318    .text:0000000000000120 .LBE98
     /tmp/ccMs1K2h.s:4163   .debug_str:0000000000000400 .LASF73
     /tmp/ccMs1K2h.s:3752   .debug_loc:0000000000000750 .LLST13
     /tmp/ccMs1K2h.s:304    .text:0000000000000118 .LBB99
     /tmp/ccMs1K2h.s:317    .text:0000000000000120 .LBE99
     /tmp/ccMs1K2h.s:3759   .debug_loc:0000000000000773 .LLST14
     /tmp/ccMs1K2h.s:302    .text:0000000000000118 .LVL21
     /tmp/ccMs1K2h.s:319    .text:0000000000000120 .LBB101
     /tmp/ccMs1K2h.s:355    .text:0000000000000150 .LBE101
     /tmp/ccMs1K2h.s:4193   .debug_str:00000000000004af .LASF74
     /tmp/ccMs1K2h.s:3766   .debug_loc:0000000000000796 .LLST15
     /tmp/ccMs1K2h.s:4079   .debug_str:0000000000000220 .LASF75
     /tmp/ccMs1K2h.s:3773   .debug_loc:00000000000007b9 .LLST16
     /tmp/ccMs1K2h.s:3780   .debug_loc:00000000000007dc .LLST17
     /tmp/ccMs1K2h.s:4089   .debug_str:0000000000000255 .LASF76
     /tmp/ccMs1K2h.s:3794   .debug_loc:0000000000000815 .LLST18
     /tmp/ccMs1K2h.s:341    .text:0000000000000148 .LBB102
     /tmp/ccMs1K2h.s:354    .text:0000000000000150 .LBE102
     /tmp/ccMs1K2h.s:3808   .debug_loc:000000000000084e .LLST19
     /tmp/ccMs1K2h.s:330    .text:0000000000000134 .LVL23
     /tmp/ccMs1K2h.s:356    .text:0000000000000150 .LBB104
     /tmp/ccMs1K2h.s:437    .text:00000000000001a8 .LBE104
     /tmp/ccMs1K2h.s:358    .text:0000000000000150 .LBB105
     /tmp/ccMs1K2h.s:372    .text:000000000000015c .LBE105
     /tmp/ccMs1K2h.s:376    .text:0000000000000160 .LBB107
     /tmp/ccMs1K2h.s:390    .text:000000000000016c .LBE107
     /tmp/ccMs1K2h.s:399    .text:000000000000017c .LBB109
     /tmp/ccMs1K2h.s:409    .text:0000000000000180 .LBE109
     /tmp/ccMs1K2h.s:3815   .debug_loc:0000000000000871 .LLST20
     /tmp/ccMs1K2h.s:413    .text:0000000000000184 .LBB111
     /tmp/ccMs1K2h.s:423    .text:0000000000000188 .LBE111
     /tmp/ccMs1K2h.s:3822   .debug_loc:0000000000000894 .LLST21
     /tmp/ccMs1K2h.s:395    .text:0000000000000178 .LVL26
     /tmp/ccMs1K2h.s:438    .text:00000000000001a8 .LBB113
     /tmp/ccMs1K2h.s:521    .text:0000000000000204 .LBE113
     /tmp/ccMs1K2h.s:3829   .debug_loc:00000000000008b7 .LLST22
     /tmp/ccMs1K2h.s:441    .text:00000000000001a8 .LBB114
     /tmp/ccMs1K2h.s:455    .text:00000000000001b4 .LBE114
     /tmp/ccMs1K2h.s:459    .text:00000000000001b8 .LBB116
     /tmp/ccMs1K2h.s:473    .text:00000000000001c4 .LBE116
     /tmp/ccMs1K2h.s:483    .text:00000000000001d8 .LBB118
     /tmp/ccMs1K2h.s:493    .text:00000000000001dc .LBE118
     /tmp/ccMs1K2h.s:3836   .debug_loc:00000000000008da .LLST23
     /tmp/ccMs1K2h.s:497    .text:00000000000001e0 .LBB120
     /tmp/ccMs1K2h.s:507    .text:00000000000001e4 .LBE120
     /tmp/ccMs1K2h.s:3843   .debug_loc:00000000000008fd .LLST24
     /tmp/ccMs1K2h.s:479    .text:00000000000001d4 .LVL32
     /tmp/ccMs1K2h.s:526    .text:000000000000020c .LBB122
     /tmp/ccMs1K2h.s:550    .text:0000000000000224 .LBE122
     /tmp/ccMs1K2h.s:3850   .debug_loc:0000000000000920 .LLST25
     /tmp/ccMs1K2h.s:4153   .debug_str:00000000000003d0 .LASF77
     /tmp/ccMs1K2h.s:3857   .debug_loc:0000000000000943 .LLST26
     /tmp/ccMs1K2h.s:536    .text:000000000000021c .LBB123
     /tmp/ccMs1K2h.s:549    .text:0000000000000224 .LBE123
GAS LISTING /tmp/ccMs1K2h.s 			page 39


     /tmp/ccMs1K2h.s:3864   .debug_loc:0000000000000966 .LLST27
     /tmp/ccMs1K2h.s:534    .text:000000000000021c .LVL39
     /tmp/ccMs1K2h.s:551    .text:0000000000000224 .LBB125
     /tmp/ccMs1K2h.s:573    .text:0000000000000238 .LBE125
     /tmp/ccMs1K2h.s:3871   .debug_loc:0000000000000989 .LLST28
     /tmp/ccMs1K2h.s:559    .text:0000000000000230 .LBB126
     /tmp/ccMs1K2h.s:572    .text:0000000000000238 .LBE126
     /tmp/ccMs1K2h.s:3878   .debug_loc:00000000000009ac .LLST29
     /tmp/ccMs1K2h.s:557    .text:0000000000000230 .LVL41
     /tmp/ccMs1K2h.s:574    .text:0000000000000238 .LBB128
     /tmp/ccMs1K2h.s:597    .text:0000000000000250 .LBE128
     /tmp/ccMs1K2h.s:3885   .debug_loc:00000000000009cf .LLST30
     /tmp/ccMs1K2h.s:582    .text:0000000000000244 .LBB129
     /tmp/ccMs1K2h.s:596    .text:0000000000000250 .LBE129
     /tmp/ccMs1K2h.s:3892   .debug_loc:00000000000009f2 .LLST31
     /tmp/ccMs1K2h.s:579    .text:0000000000000244 .LVL43
     /tmp/ccMs1K2h.s:598    .text:0000000000000250 .LBB131
     /tmp/ccMs1K2h.s:716    .text:00000000000002d4 .LBE131
     /tmp/ccMs1K2h.s:3900   .debug_loc:0000000000000a16 .LLST32
     /tmp/ccMs1K2h.s:3907   .debug_loc:0000000000000a39 .LLST33
     /tmp/ccMs1K2h.s:628    .text:0000000000000270 .LBB134
     /tmp/ccMs1K2h.s:715    .text:00000000000002d4 .LBE134
     /tmp/ccMs1K2h.s:630    .text:0000000000000270 .LBB135
     /tmp/ccMs1K2h.s:644    .text:000000000000027c .LBE135
     /tmp/ccMs1K2h.s:648    .text:0000000000000280 .LBB137
     /tmp/ccMs1K2h.s:662    .text:000000000000028c .LBE137
     /tmp/ccMs1K2h.s:671    .text:000000000000029c .LBB139
     /tmp/ccMs1K2h.s:681    .text:00000000000002a0 .LBE139
     /tmp/ccMs1K2h.s:3918   .debug_loc:0000000000000a6f .LLST35
     /tmp/ccMs1K2h.s:685    .text:00000000000002a4 .LBB141
     /tmp/ccMs1K2h.s:695    .text:00000000000002a8 .LBE141
     /tmp/ccMs1K2h.s:3925   .debug_loc:0000000000000a92 .LLST36
     /tmp/ccMs1K2h.s:667    .text:0000000000000298 .LVL48
     /tmp/ccMs1K2h.s:614    .text:0000000000000268 .LBB132
     /tmp/ccMs1K2h.s:627    .text:0000000000000270 .LBE132
     /tmp/ccMs1K2h.s:3932   .debug_loc:0000000000000ab5 .LLST34
     /tmp/ccMs1K2h.s:604    .text:000000000000025c .LVL45
     /tmp/ccMs1K2h.s:717    .text:00000000000002d4 .LBB143
     /tmp/ccMs1K2h.s:811    .text:0000000000000348 .LBE143
     /tmp/ccMs1K2h.s:4093   .debug_str:0000000000000262 .LASF78
     /tmp/ccMs1K2h.s:3939   .debug_loc:0000000000000ad8 .LLST37
     /tmp/ccMs1K2h.s:736    .text:00000000000002f8 .LBB144
     /tmp/ccMs1K2h.s:750    .text:0000000000000304 .LBE144
     /tmp/ccMs1K2h.s:754    .text:0000000000000308 .LBB146
     /tmp/ccMs1K2h.s:768    .text:0000000000000314 .LBE146
     /tmp/ccMs1K2h.s:777    .text:0000000000000324 .LBB148
     /tmp/ccMs1K2h.s:787    .text:0000000000000328 .LBE148
     /tmp/ccMs1K2h.s:3957   .debug_loc:0000000000000b24 .LLST38
     /tmp/ccMs1K2h.s:791    .text:000000000000032c .LBB150
     /tmp/ccMs1K2h.s:801    .text:0000000000000330 .LBE150
     /tmp/ccMs1K2h.s:3964   .debug_loc:0000000000000b47 .LLST39
     /tmp/ccMs1K2h.s:773    .text:0000000000000320 .LVL57
     /tmp/ccMs1K2h.s:173    .text:00000000000000c0 .LBB91
     /tmp/ccMs1K2h.s:188    .text:00000000000000cc .LBE91
     /tmp/ccMs1K2h.s:193    .text:00000000000000d0 .LBB93
     /tmp/ccMs1K2h.s:203    .text:00000000000000d4 .LBE93
     /tmp/ccMs1K2h.s:3971   .debug_loc:0000000000000b6a .LLST10
GAS LISTING /tmp/ccMs1K2h.s 			page 40


     /tmp/ccMs1K2h.s:524    .text:000000000000020c .LVL38
     /tmp/ccMs1K2h.s:124    .text:000000000000008c .LBB88
     /tmp/ccMs1K2h.s:139    .text:0000000000000098 .LBE88
     /tmp/ccMs1K2h.s:4183   .debug_str:000000000000046f .LASF80
     /tmp/ccMs1K2h.s:50     .text:0000000000000038 .LFB23
     /tmp/ccMs1K2h.s:98     .text:000000000000006c .LFE23
     /tmp/ccMs1K2h.s:65     .text:0000000000000054 .LBB84
     /tmp/ccMs1K2h.s:76     .text:0000000000000058 .LBE84
     /tmp/ccMs1K2h.s:78     .text:0000000000000058 .LBB86
     /tmp/ccMs1K2h.s:89     .text:0000000000000060 .LBE86
     /tmp/ccMs1K2h.s:3978   .debug_loc:0000000000000b8d .LLST0
     /tmp/ccMs1K2h.s:4043   .debug_str:0000000000000146 .LASF82
     /tmp/ccMs1K2h.s:11     .text:0000000000000000 .LFB22
     /tmp/ccMs1K2h.s:44     .text:0000000000000038 .LFE22
     /tmp/ccMs1K2h.s:4117   .debug_str:00000000000002e8 .LASF83
     /tmp/ccMs1K2h.s:4087   .debug_str:000000000000024b .LASF84
     /tmp/ccMs1K2h.s:4123   .debug_str:0000000000000302 .LASF85
     /tmp/ccMs1K2h.s:4197   .debug_str:00000000000004bb .LASF86
     /tmp/ccMs1K2h.s:4025   .debug_str:00000000000000e6 .LASF87
     /tmp/ccMs1K2h.s:4177   .debug_str:000000000000044d .LASF88
     /tmp/ccMs1K2h.s:4121   .debug_str:00000000000002fc .LASF89
     /tmp/ccMs1K2h.s:4173   .debug_str:0000000000000430 .LASF90
     /tmp/ccMs1K2h.s:4067   .debug_str:00000000000001e7 .LASF91
     /tmp/ccMs1K2h.s:4015   .debug_str:00000000000000b7 .LASF92
     /tmp/ccMs1K2h.s:4085   .debug_str:0000000000000246 .LASF93
     /tmp/ccMs1K2h.s:4057   .debug_str:00000000000001b4 .LASF94
     /tmp/ccMs1K2h.s:4051   .debug_str:000000000000017d .LASF95
     /tmp/ccMs1K2h.s:4165   .debug_str:0000000000000405 .LASF96
     /tmp/ccMs1K2h.s:4065   .debug_str:00000000000001d7 .LASF97
     /tmp/ccMs1K2h.s:4215   .debug_str:000000000000052f .LASF98
     /tmp/ccMs1K2h.s:4077   .debug_str:000000000000020d .LASF99
     /tmp/ccMs1K2h.s:4115   .debug_str:00000000000002d9 .LASF100
     /tmp/ccMs1K2h.s:4157   .debug_str:00000000000003dd .LASF101
     /tmp/ccMs1K2h.s:4039   .debug_str:0000000000000126 .LASF102
     /tmp/ccMs1K2h.s:4219   .debug_str:0000000000000549 .LASF103
     /tmp/ccMs1K2h.s:4201   .debug_str:00000000000004d7 .LASF104
     /tmp/ccMs1K2h.s:4171   .debug_str:0000000000000421 .LASF105
     /tmp/ccMs1K2h.s:4189   .debug_str:0000000000000496 .LASF106
     /tmp/ccMs1K2h.s:4047   .debug_str:000000000000015f .LASF107
     /tmp/ccMs1K2h.s:4133   .debug_str:0000000000000344 .LASF108
     /tmp/ccMs1K2h.s:849    .text:000000000000036c .LVL62
     /tmp/ccMs1K2h.s:864    .text:000000000000038c .LVL63
     /tmp/ccMs1K2h.s:878    .text:00000000000003a0 .LVL64
     /tmp/ccMs1K2h.s:990    .text:0000000000000430 .LVL73
     /tmp/ccMs1K2h.s:954    .text:0000000000000404 .LVL69
     /tmp/ccMs1K2h.s:962    .text:0000000000000408 .LVL70
     /tmp/ccMs1K2h.s:968    .text:000000000000040c .LVL71
     /tmp/ccMs1K2h.s:976    .text:0000000000000410 .LVL72
     /tmp/ccMs1K2h.s:888    .text:00000000000003b4 .LVL65
     /tmp/ccMs1K2h.s:897    .text:00000000000003bc .LVL66
     /tmp/ccMs1K2h.s:107    .text:000000000000006c .LVL4
     /tmp/ccMs1K2h.s:148    .text:00000000000000a4 .LVL9
     /tmp/ccMs1K2h.s:164    .text:00000000000000bc .LVL10
     /tmp/ccMs1K2h.s:210    .text:00000000000000e0 .LVL17
     /tmp/ccMs1K2h.s:208    .text:00000000000000dc .LVL16
     /tmp/ccMs1K2h.s:732    .text:00000000000002f4 .LVL56
     /tmp/ccMs1K2h.s:122    .text:000000000000008c .LVL5
GAS LISTING /tmp/ccMs1K2h.s 			page 41


     /tmp/ccMs1K2h.s:722    .text:00000000000002dc .LVL54
     /tmp/ccMs1K2h.s:146    .text:00000000000000a0 .LVL8
     /tmp/ccMs1K2h.s:291    .text:000000000000010c .LVL20
     /tmp/ccMs1K2h.s:314    .text:0000000000000120 .LVL22
     /tmp/ccMs1K2h.s:351    .text:0000000000000150 .LVL25
     /tmp/ccMs1K2h.s:435    .text:00000000000001a8 .LVL31
     /tmp/ccMs1K2h.s:519    .text:0000000000000204 .LVL37
     /tmp/ccMs1K2h.s:546    .text:0000000000000224 .LVL40
     /tmp/ccMs1K2h.s:569    .text:0000000000000238 .LVL42
     /tmp/ccMs1K2h.s:593    .text:0000000000000250 .LVL44
     /tmp/ccMs1K2h.s:713    .text:00000000000002d4 .LVL53
     /tmp/ccMs1K2h.s:726    .text:00000000000002e4 .LVL55
     /tmp/ccMs1K2h.s:137    .text:0000000000000098 .LVL6
     /tmp/ccMs1K2h.s:143    .text:000000000000009c .LVL7
     /tmp/ccMs1K2h.s:181    .text:00000000000000c4 .LVL12
     /tmp/ccMs1K2h.s:611    .text:0000000000000268 .LVL46
     /tmp/ccMs1K2h.s:624    .text:0000000000000270 .LVL47
     /tmp/ccMs1K2h.s:171    .text:00000000000000c0 .LVL11
     /tmp/ccMs1K2h.s:191    .text:00000000000000d0 .LVL13
     /tmp/ccMs1K2h.s:206    .text:00000000000000d8 .LVL15
     /tmp/ccMs1K2h.s:274    .text:00000000000000f8 .LVL18
     /tmp/ccMs1K2h.s:340    .text:0000000000000148 .LVL24
     /tmp/ccMs1K2h.s:398    .text:000000000000017c .LVL27
     /tmp/ccMs1K2h.s:406    .text:0000000000000180 .LVL28
     /tmp/ccMs1K2h.s:412    .text:0000000000000184 .LVL29
     /tmp/ccMs1K2h.s:420    .text:0000000000000188 .LVL30
     /tmp/ccMs1K2h.s:482    .text:00000000000001d8 .LVL33
     /tmp/ccMs1K2h.s:490    .text:00000000000001dc .LVL34
     /tmp/ccMs1K2h.s:496    .text:00000000000001e0 .LVL35
     /tmp/ccMs1K2h.s:504    .text:00000000000001e4 .LVL36
     /tmp/ccMs1K2h.s:670    .text:000000000000029c .LVL49
     /tmp/ccMs1K2h.s:678    .text:00000000000002a0 .LVL50
     /tmp/ccMs1K2h.s:684    .text:00000000000002a4 .LVL51
     /tmp/ccMs1K2h.s:692    .text:00000000000002a8 .LVL52
     /tmp/ccMs1K2h.s:776    .text:0000000000000324 .LVL58
     /tmp/ccMs1K2h.s:784    .text:0000000000000328 .LVL59
     /tmp/ccMs1K2h.s:790    .text:000000000000032c .LVL60
     /tmp/ccMs1K2h.s:798    .text:0000000000000330 .LVL61
     /tmp/ccMs1K2h.s:200    .text:00000000000000d4 .LVL14
     /tmp/ccMs1K2h.s:73     .text:0000000000000058 .LVL2
     /tmp/ccMs1K2h.s:86     .text:0000000000000060 .LVL3
     /tmp/ccMs1K2h.s:1044   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccMs1K2h.s:993    .text:0000000000000430 .LBB165
     /tmp/ccMs1K2h.s:1006   .text:0000000000000448 .LBE165
     /tmp/ccMs1K2h.s:1011   .text:000000000000044c .LBB166
     /tmp/ccMs1K2h.s:1017   .text:0000000000000458 .LBE166

UNDEFINED SYMBOLS
supervisorTrap
kern_mem_alloc
kern_mem_free
kern_thread_create
kern_thread_dispatch
running
kern_thread_join
kern_thread_end_running
kern_sem_open
GAS LISTING /tmp/ccMs1K2h.s 			page 42


kern_sem_close
kern_sem_signal
kern_sem_wait
kern_thread_wakeup
plic_claim
console_handler
plic_complete
